<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE rule-manager [
<!ELEMENT rule-manager (custompackage-list*, fix-ruleset*, ruleset-list+, rule-list+)>
  <!ATTLIST rule-manager
  rulesets_title CDATA #REQUIRED
>
  <!ELEMENT custompackage-list (package*)>
  <!ELEMENT package (#PCDATA)>
  <!ATTLIST package
    id CDATA #REQUIRED
    name CDATA #REQUIRED
    description CDATA #REQUIRED
    creationdate CDATA #REQUIRED
    modifydate CDATA #IMPLIED
>
  <!ELEMENT fix-ruleset (field*)>
  <!ATTLIST field
  id CDATA #REQUIRED
  value CDATA #IMPLIED
>
  <!ELEMENT ruleset-list (ruleset+)>
  <!ELEMENT ruleset (ruleset-name+, ruleset-description+, ruleset-component*)>
  <!ATTLIST ruleset
  id CDATA #REQUIRED
    is_short_circuit CDATA #REQUIRED
    type CDATA #REQUIRED
    sid CDATA #IMPLIED
    extend CDATA #IMPLIED
>
  <!ELEMENT ruleset-name (#PCDATA)>
  <!ELEMENT ruleset-description (#PCDATA)>
  <!ELEMENT ruleset-component (name+, description+, priority+)>
  <!ATTLIST ruleset-component
  id CDATA #REQUIRED
    type CDATA #REQUIRED
>
  <!ELEMENT name (#PCDATA)>
  <!ELEMENT description (#PCDATA)>
  <!ELEMENT priority (#PCDATA)>
  <!ELEMENT rule-list (rule+)>
  <!ELEMENT rule (rule-name+, rule-description+, rule-action+, rule-type+)>
  <!ATTLIST rule
  id CDATA #REQUIRED
    isactive CDATA #REQUIRED
    sid CDATA #IMPLIED
    extend CDATA #IMPLIED
>
  <!ELEMENT rule-name (#PCDATA)>
  <!ELEMENT rule-description (#PCDATA)>
  <!ELEMENT rule-action (#PCDATA)>
  <!ELEMENT rule-type (#PCDATA)>
]>
<rule-manager rulesets_title="Generic Payroll Ruleset">
    <custompackage-list/>
    <fix-ruleset>
        <field id="UTE Time in Time Pairs" value="NewBubbleSheetRuleset"/>
        <field id="RIA Time in Time Pairs" value="TimePairsRuleset"/>        
        <field id="Time in Duration" value="NewTimeSheetRuleset"/>
        <field id="Time in Detail" value="NewDailyEditsRuleset"/>
        <field id="Start Of Day" value="NewStartOfDayRuleset"/>
        <field id="Payroll Summary" value="PayrollSummaryRuleset"/>
        <field id="Default Shift" value="DefaultShiftRuleset"/>
        <field id="Super Timesheet" value="NewTimeSheetRuleset"/>
        <field id="Public Holiday" value="HolidayEligibilityRuleset"/>
        <field id="Misc. Check Request" value="RequestMiscCheckRuleset"/>
        <field id="Employee Total Hours" value="PayrollSummaryRuleset"/>
        <field id="Read Clock Data" value="ReadClockDataRuleset"/>
        <field id="Recalculate Payroll" value="RecalculatePayrollRuleset"/>
        <field id="Mass Update Employee Org Powerpay" value="MassUpdateEmpOrgCreateRuleset"/>
        <!-- RIA Custom Time and Attendance Rulesets -->
        <field id="RIA TimeSheet Time Pairs Custom Ruleset" value="TimeSheetTimePairsCustomRuleset"/>
        <field id="RIA TimeSheet Duration Custom Ruleset" value="TimeSheetDurationCustomRuleset"/>
        <field id="RIA Payroll Summary Custom Ruleset" value="PayrollSummaryCustomRuleset"/>
        <field id="RIA TimeSheet Detail Custom Ruleset" value="TimeSheetDetailCustomRuleset"/>
        <field id="RIA Labor Distribution Ruleset" value="LaborDistributionCustomRuleset"/>
        <field id="RIA View Employee Total Hours Custom Ruleset" value="ViewEmployeeTotalHoursCustomRuleset"/>
        <field id="RIA TimeSheet Detailed Duration Custom Ruleset" value="TimeSheetDetailedDurationCustomRuleset"/>
    </fix-ruleset>
    <ruleset-list>
        <!-- *********************************************************** -->
        <!--                       NEW DAILY EDITS RULESET               -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the Daily Edits module -->
        <ruleset id="$$$NewDailyEditsRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$NewDailyEditsRuleset</ruleset-name>
            <ruleset-description>System ruleset for Daily Edits</ruleset-description>
            <ruleset-component id="RestoreHiddenSystemCodesRule" type="Rule">
                  <name>RestoreHiddenSystemCodesRule</name>
                  <description>The rule restores records that were hidden from the screen</description>
                  <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                  <name>RunRulesIfManualCalcRuleset</name>
                  <description>RunRulesIfManualCalcRuleset</description>
                  <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                  <name>ManualCalcRule</name>
                  <description>ManualCalcRule</description>
                  <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="NewDailyEditsRuleset" type="Ruleset">
                  <name>NewDailyEditsRuleset</name>
                  <description>NewDailyEditsRuleset</description>
                  <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                       TIME PAIRS RULESET               -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the Daily Edits module -->
        <ruleset id="$$$TimePairsRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$TimePairsRuleset</ruleset-name>
            <ruleset-description>System ruleset for Time Pair</ruleset-description>
            <ruleset-component id="RestoreHiddenSystemCodesRule" type="Rule">
                  <name>RestoreHiddenSystemCodesRule</name>
                  <description>The rule restores records that were hidden from the screen</description>
                  <priority>1</priority>
            </ruleset-component>            
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                  <name>RunRulesIfManualCalcRuleset</name>
                  <description>RunRulesIfManualCalcRuleset</description>
                  <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                  <name>ManualCalcRule</name>
                  <description>ManualCalcRule</description>
                  <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="TimePairsRuleset" type="Ruleset">
                  <name>TimePairsRuleset</name>
                  <description>TimePairsRuleset</description>
                  <priority>4</priority>
            </ruleset-component>

        </ruleset>        
        <!-- *********************************************************** -->
        <!--                OVERTIME FORECAST RULESET                    -->
        <!-- *********************************************************** -->
                <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the TimeSheet module -->
        <ruleset id="$$$OvertimeForecastRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$OvertimeForecastRuleset</ruleset-name>
            <ruleset-description>System ruleset for Overtime Forecast</ruleset-description>
            <ruleset-component id="OvertimeForecastRuleset" type="Ruleset">
                  <name>OvertimeForecastRuleset</name>
                  <description>OvertimeForecastRuleset</description>
                  <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                 NEW START OF DAY RULESET                    -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$NewStartOfDayRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$NewStartOfDayRuleset</ruleset-name>
            <ruleset-description>System ruleset for Start of Day</ruleset-description>
            <ruleset-component id="NewStartOfDayRuleset" type="Ruleset">
                  <name>NewStartOfDayRuleset</name>
                  <description>NewStartOfDayRuleset</description>
                  <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                   READ CLOCK DATA RULESET                   -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$ReadClockDataRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$ReadClockDataRuleset</ruleset-name>
            <ruleset-description>System ruleset for Read Clock Data</ruleset-description>
            <ruleset-component id="ReadClockDataRuleset" type="Ruleset">
                  <name>ReadClockDataRuleset</name>
                  <description>ReadClockDataRuleset</description>
                  <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                  RECALCULATE PAYROLL RULESET                -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the RecalculatePayroll module -->
        <ruleset id="$$$RecalculatePayrollRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$RecalculatePayrollRuleset</ruleset-name>
            <ruleset-description>System ruleset for Recalculate Payroll</ruleset-description>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                  <name>RunRulesIfManualCalcRuleset</name>
                  <description>RunRulesIfManualCalcRuleset</description>
                  <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ResetPayrollRecalcStatusRule" type="Rule">
                  <name>ResetPayrollRecalcStatusRule</name>
                  <description>ResetPayrollRecalcStatusRule</description>
                  <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                  <name>ManualCalcRule</name>
                  <description>ManualCalcRule</description>
                  <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="RecalculatePayrollRuleset" type="Ruleset">
                  <name>RecalculatePayrollRuleset</name>
                  <description>RecalculatePayrollRuleset</description>
                  <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                  REPROCESS CLOCK DATA RULESET               -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$ReprocessClockDataRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$ReprocessClockDataRuleset</ruleset-name>
            <ruleset-description>System ruleset for Reprocess Clock Data</ruleset-description>
          <!-- no ruleset components are required for this ruleset. -->
        </ruleset>
        <!-- *********************************************************** -->
        <!--               NEW TIME SHEET RULESET                        -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$NewTimeSheetRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$NewTimeSheetRuleset</ruleset-name>
            <ruleset-description>System ruleset for Time Sheet</ruleset-description>
            <ruleset-component id="RestoreHiddenSystemCodesRule" type="Rule">
                  <name>RestoreHiddenSystemCodesRule</name>
                  <description>The rule restores records that were hidden from the screen</description>
                  <priority>1</priority>
            </ruleset-component>            
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                  <name>RunRulesIfManualCalcRuleset</name>
                  <description>RunRulesIfManualCalcRuleset</description>
                  <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                  <name>ManualCalcRule</name>
                  <description>ManualCalcRule</description>
                  <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="NewTimeSheetRuleset" type="Ruleset">
                  <name>NewTimeSheetRuleset</name>
                  <description>NewTimeSheetRuleset</description>
                  <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--               NEW BUBBLE SHEET RULESET                      -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$NewBubbleSheetRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$NewBubbleSheetRuleset</ruleset-name>
            <ruleset-description>System ruleset for Bubble Sheet</ruleset-description>
            <ruleset-component id="RestoreHiddenSystemCodesRule" type="Rule">
                  <name>RestoreHiddenSystemCodesRule</name>
                  <description>The rule restores records that were hidden from the screen</description>
                  <priority>1</priority>
            </ruleset-component>            
            <ruleset-component id="UpdatePayrollFieldsRule" type="Rule">
                <name>UpdatePayrollFieldsRule</name>
                <description>UpdatePayrollFieldsRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                <name>RunRulesIfManualCalcRuleset</name>
                <description>RunRulesIfManualCalcRuleset</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                <name>ManualCalcRule</name>
                <description>ManualCalcRule</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="NewBubbleSheetRuleset" type="Ruleset">
                <name>NewBubbleSheetRuleset</name>
                <description>NewBubbleSheetRuleset</description>
                <priority>5</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--              PAYROLL SUMMARY RULESET                        -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$PayrollSummaryRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$PayrollSummaryRuleset</ruleset-name>
            <ruleset-description>System ruleset for Payroll Summary</ruleset-description>
            <ruleset-component id="UpdatePayrollFieldsRule" type="Rule">
                <name>UpdatePayrollFieldsRule</name>
                <description>UpdatePayrollFieldsRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                <name>RunRulesIfManualCalcRuleset</name>
                <description>RunRulesIfManualCalcRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                <name>ManualCalcRule</name>
                <description>ManualCalcRule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="PayrollSummaryRuleset" type="Ruleset">
                <name>PayrollSummaryRuleset</name>
                <description>PayrollSummaryRuleset</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                DEFAULT SHIFT RULESET                        -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$DefaultShiftRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$DefaultShiftRuleset</ruleset-name>
            <ruleset-description>System ruleset for Default Shift</ruleset-description>
            <ruleset-component id="DefaultShiftRuleset" type="Ruleset">
                <name>DefaultShiftRuleset</name>
                <description>DefaultShiftRuleset</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                REQUEST MISC CHECK RULESET                    -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <ruleset id="$$$RequestMiscCheckRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$RequestMiscCheckRuleset</ruleset-name>
            <ruleset-description>System ruleset for Request Misc Check</ruleset-description>
            <ruleset-component id="RequestMiscCheckRuleset" type="Ruleset">
                <name>RequestMiscCheckRuleset</name>
                <description>RequestMiscCheckRuleset</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                NEW DAILY EDITS WF RULESET                   -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the Daily Edits module via the submit to workflow button -->
        <ruleset id="$$$NewDailyEditsWFRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$NewDailyEditsWFRuleset</ruleset-name>
            <ruleset-description>System ruleset for Daily Edits Workflow</ruleset-description>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                <name>RunRulesIfManualCalcRuleset</name>
                <description>RunRulesIfManualCalcRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                <name>ManualCalcRule</name>
                <description>ManualCalcRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="NewDailyEditsWFRuleset" type="Ruleset">
                <name>NewDailyEditsWFRuleset</name>
                <description>NewDailyEditsWFRuleset</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                PAYROLL SUMMARY WF RULESET                   -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the Payroll Summary module via the submit to workflow button -->
        <ruleset id="$$$PayrollSummaryWFRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$PayrollSummaryWFRuleset</ruleset-name>
            <ruleset-description>System ruleset for Payroll Summary Workflow</ruleset-description>
			<ruleset-component id="AdjustOverlapLaborAfterRoundingAllRule" type="Ruleset">
                <name>AdjustOverlapLaborAfterRoundingAllRule</name>
                <description>AdjustOverlapLaborAfterRoundingAllRule</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="UpdatePayrollFieldsRule" type="Rule">
                <name>UpdatePayrollFieldsRule</name>
                <description>UpdatePayrollFieldsRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                <name>RunRulesIfManualCalcRuleset</name>
                <description>RunRulesIfManualCalcRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                <name>ManualCalcRule</name>
                <description>ManualCalcRule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="PayrollSummaryWFRuleset" type="Ruleset">
                <name>PayrollSummaryWFRuleset</name>
                <description>PayrollSummaryWFRuleset</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--                NEW BUBBLE SHEET WF RULESET                  -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the Bubblesheet module via the submit to workflow button -->
        <ruleset id="$$$NewBubbleSheetWFRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$NewBubbleSheetWFRuleset</ruleset-name>
            <ruleset-description>System ruleset for Bubble Sheet Workflow</ruleset-description>
            <ruleset-component id="UpdatePayrollFieldsRule" type="Rule">
                <name>UpdatePayrollFieldsRule</name>
                <description>UpdatePayrollFieldsRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                <name>RunRulesIfManualCalcRuleset</name>
                <description>RunRulesIfManualCalcRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                <name>ManualCalcRule</name>
                <description>ManualCalcRule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="NewBubbleSheetWFRuleset" type="Ruleset">
                <name>NewBubbleSheetWFRuleset</name>
                <description>NewBubbleSheetWFRuleset</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--               NEW TIME SHEET WF RULESET                     -->
        <!-- *********************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the Timesheet modules via the submit to workflow button -->
        <ruleset id="$$$NewTimeSheetWFRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$NewTimeSheetWFRuleset</ruleset-name>
            <ruleset-description>System ruleset for Time Sheet Workflow</ruleset-description>
            <ruleset-component id="RunRulesIfManualCalcRuleset" type="Ruleset">
                <name>RunRulesIfManualCalcRuleset</name>
                <description>RunRulesIfManualCalcRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ManualCalcRule" type="Rule">
                <name>ManualCalcRule</name>
                <description>ManualCalcRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="NewTimeSheetWFRuleset" type="Ruleset">
                <name>NewTimeSheetWFRuleset</name>
                <description>NewTimeSheetWFRuleset</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <!-- **************************************************************** -->
        <!--               NEW MASS UPDATE EMP ORGANIZATION CREATE RULESET    -->
        <!-- **************************************************************** -->
        <!-- DO NOT MODIFY THIS SYSTEM RULESET                           -->
        <!-- *********************************************************** -->
        <!-- Following ruleset is invoked from the Employee Registration module for Employee Mass Update screen -->
        <ruleset id="$$$MassUpdateEmpOrgCreateRuleset" is_short_circuit="True" type="Private">
            <ruleset-name>$$$MassUpdateEmpOrgCreateRuleset</ruleset-name>
            <ruleset-description>System ruleset for Mass Update Employee Organization Create</ruleset-description>
            <ruleset-component id="MassUpdateEmpOrgCreateRuleset" type="Ruleset">
                <name>MassUpdateEmpOrgCreateRuleset</name>
                <description>MassUpdateEmpOrgCreateRuleset</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <!-- *********************************************************** -->
        <!--               STANDARD RULESET BELOW                        -->
        <!-- *********************************************************** -->
        <ruleset id="NewDailyEditsWFRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Daily Edits WF Ruleset(New)</ruleset-name>
            <ruleset-description>processes employee time information coming from the daily edits screen</ruleset-description>
            <ruleset-component id="NewDailyEditsRuleset" type="Ruleset">
                <name>Daily Edits Ruleset(New)</name>
                <description>displays employee information in the daily edits screen</description>
                <priority>1</priority>
            </ruleset-component>
			<ruleset-component id="OvertimeEntitlementRule" type="Ruleset">
                <name>OvertimeEntitlementRule</name>
                <description>displays employee information in the daily edits screen</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PayrollSummaryWFRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PayrollSummaryWFRuleset</ruleset-name>
            <ruleset-description>processes employee time information coming from the payroll summary screen</ruleset-description>
            <ruleset-component id="PayrollSummaryRuleset" type="Ruleset">
                <name>PayrollSummaryRuleset</name>
                <description>PayrollSummaryRuleset</description>
                <priority>1</priority>
            </ruleset-component>
			<ruleset-component id="AdjustOverlapLaborAfterRoundingAllRule" type="Ruleset">
                <name>AdjustOverlapLaborAfterRoundingAllRule</name>
                <description>AdjustOverlapLaborAfterRoundingAllRule</description>
                <priority>5</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NewBubbleSheetWFRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>BubbleSheet WF Ruleset(New)</ruleset-name>
            <ruleset-description>processes employee time information coming from the bubblesheet</ruleset-description>
            <ruleset-component id="NewBubbleSheetRuleset" type="Ruleset">
                <name>BubbleSheet Ruleset(New)</name>
                <description>processes employee time information coming from the bubblesheet</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NewTimeSheetWFRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>TimeSheet WF Ruleset(New)</ruleset-name>
            <ruleset-description>processes employee time information coming from the timesheet</ruleset-description>
            <ruleset-component id="NewTimeSheetRuleset" type="Ruleset">
                <name>TimeSheet Ruleset(New)</name>
                <description>processes employee time information coming from the timesheet</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AbsenceCodeChangeRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Absence Code Change Ruleset</ruleset-name>
            <ruleset-description>Changes employee absence code</ruleset-description>
            <ruleset-component id="AbsenceCodeChangeValidationRule" type="Rule">
                <name>Absence Code Change Validation Rule</name>
                <description>This is a deprecated custom rule.  Certain absence codes, especially those that were generated due to late arrival, left early and long lunch situations, can only changed to an absence code that exists in the pre-defined list of codes. Otherwise, the code reverts back to its original state. Currently, this list of codes are maintained in the propertiesconfig.xml.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustOverlappingLongLunchWithAbsencesRuleset" is_short_circuit="True" sid="" type="Private">
            <ruleset-name>Adjust Overlapping Long Lunch With Absences Ruleset</ruleset-name>
            <ruleset-description>Adjusts long lunch when overlapping with an absence</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is a time-pair based absence</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingLongLunchWithAbsencesRule" type="Rule">
                <name>Adjust Overlapping Long Lunch With Absences Rule</name>
                <description>Adjust LL(Long Lunch) records if they overlap with absence records.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustLaborWithOverlappingAbsencesRuleset" is_short_circuit="True" sid="" type="Private">
            <ruleset-name>Adjust Labor With Overlapping Absences Ruleset</ruleset-name>
            <ruleset-description>Adjusts labor with overlapping absence</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is timepair based absence</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustAbsenceForUnpaidBreakRule" type="Rule">
                <name>AdjustAbsenceForUnpaidBreakRule</name>
                <description>Adjust absence duration for unpaid break if is a full day absence day</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AdjustAbsenceOrBreakExtentRule" type="Rule">
                <name>Adjust Absence Or Break Extent Rule</name>
                <description>Adjust absence or break extent</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="AdjustNonBreakExtentRule" type="Rule">
                <name>Adjust NonBreak Extent Rule</name>
                <description>Adjusts non-break extent as per the payroll&apos;s break time.</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AnnualLeaveConversionToSickRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AnnualLeaveConversionToSickRuleset</ruleset-name>
            <ruleset-description>Converts the annual leave to sick leav.</ruleset-description>
            <ruleset-component id="AnnualLeaveConversionToSickRule" type="Rule">
                <name>AnnualLeaveConversionToSick Rule</name>
                <description>Converts the annual leave to sick leave.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ApplyJobAllocationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Apply Job Allocation Ruleset</ruleset-name>
            <ruleset-description>apply Job Allocation to split worked record</ruleset-description>
            <ruleset-component id="ApplyJobAllocationRule" type="Rule">
                <name>Apply Job Allocation Rule</name>
                <description>Split the worked recored based the precentage of cost center and position</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ApplyWorkOrderItemAllocationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Apply Work Order Item Allocation Ruleset</ruleset-name>
            <ruleset-description>Apply Work Order Item Allocation to split worked record</ruleset-description>
            <ruleset-component id="ApplyWorkOrderItemAllocationRule" type="Rule">
                <name>Apply Work Order Item Allocation Rule</name>
                <description>Split the worked records based the precentage of work order and work item</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AuthorizationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Authorization Ruleset</ruleset-name>
            <ruleset-description>Sets the default (system) authorization status of the payroll records</ruleset-description>
            <ruleset-component id="AuthorizationRule" type="Rule">
                <name>Authorization Rule</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UnauthorizeWhenHoursGreaterThanScheduledRule" type="Rule">
                <name>UnauthorizeWhenHoursGreaterThanScheduledRule</name>
                <description>This rule will unauthorized a record that was approved by autopoll if worked hours is more than scheduled hours.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="BankingRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Banking Ruleset</ruleset-name>
            <ruleset-description>Banking of the employee&apos;s overtime for later withdrawal against time off.</ruleset-description>
            <ruleset-component id="RemoveBNKWorkedRecordRule" type="Rule">
                <name>Remove BNK Worked Record Rule</name>
                <description>Resets any banked overtime records to a default state in preparation for the Banking Rule.king Rule)</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="BankingRule" type="Rule">
                <name>Banking Rule</name>
                <description>This rule allows an employee to bank his/her overtime (in lieu of payment) by inserting a BNK type worked extent for later withdrawal against time off. There are various parameters that set the boundaries of the banking values that can be accumulated annually or daily.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="BonusRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Bonus Ruleset</ruleset-name>
            <ruleset-description>Inserts any employee or cost center position associated bonuses</ruleset-description>
            <ruleset-component id="PreBonusEmployeeRule" type="Rule">
                <name>Pre Bonus Employee Rule</name>
                <description>Removes any employee bonus records</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="PreBonusCCPRule" type="Rule">
                <name>PreBonusCCPRule</name>
                <description>Removes all pre-existing cost center/position bonus worked extents.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="BonusRule" type="Rule">
                <name>Bonus Rule</name>
                <description>This rules creates bonus type (BNS) worked extents based on a set of eligibility criteria/conditions. Typically, the system supports following type of bonuses:  1. Hours - Bonus is for a fixed amount of hours paid at employee&apos;s REG rate.  2. Percentage - The bonus paid is based on the percentage of hours worked.  3. Rate - Bonus is created for the same number of hours worked, but paid at a specific rate.  4. Amount - Bonus is a straight dollar amount.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="MissedMealRule" type="Rule">
                <name>MissedMealRule</name>
                <description>Inserts meal penalty records when applicable.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="BonusAdjustmentRule" type="Rule">
                <name>BonusAdjustmentRule</name>
                <description>Sets the hours of an adjustment bonus always to 01:00, so that its rate reflects the total dollar amount.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="BonusAmountLimitRule" type="Rule">
                <name>BonusAmountLimitRule</name>
                <description>The rule limits eligible bonuses to defined max</description>
                <priority>6</priority>
            </ruleset-component>            
        </ruleset>
        <ruleset id="BreakRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Break Ruleset</ruleset-name>
            <ruleset-description>Inserts any pre-defined breaks to employee&apos;s work time</ruleset-description>
            <ruleset-component id="PreBreakRule" type="Rule">
                <name>Pre Break Rule</name>
                <description>This rule converts  - all paid break records to work type records;  - all unpaid break records with duration of greater  than 330 minutes to work type records;  - deletes all other unpaid break records with a duration of less than 330 minutes.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="BreakRule" type="Rule">
                <name>Break Rule</name>
                <description>This rule insert break records based on the shift break  definition and provided the employee has worked through the defined time segments.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NoDailyOtIFWklyTotalHrsLTWklyMaxRegHrsRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>NoDailyOtIFWklyTotalHrsLTWklyMaxRegHrsRuleset</ruleset-name>
            <ruleset-description>No Daily OT if Weekly Total Hours are less than Weekly Max Reg Hours</ruleset-description>
            <ruleset-component id="NoDailyOtIFWklyTotalHrsLTWklyMaxRegHrsRule" type="Rule">
                <name>NoDailyOtIFWklyTotalHrsLTWklyMaxRegHrsRule</name>
                <description>No Daily OT if Weekly Total Hours are less than Weekly Max Reg Hours</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CallInRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Call-In Ruleset</ruleset-name>
            <ruleset-description>Applies the minimum guaranteed amount of hours to an employee who has been called-in to work.</ruleset-description>
            <ruleset-component id="CallInRule" type="Rule">
                <name>Call-In Rule</name>
                <description>This rule guarantees the minimum amount of hours or dollars to an employee who has been called-in to work.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ChangeMilitaryLeaveRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Change Military Leave Ruleset</ruleset-name>
            <ruleset-description>Validates if an employee is eligible for Military Leave</ruleset-description>
            <ruleset-component id="ChangeMilitaryLeaveRule" type="Rule">
                <name>Change Military Leave Rule</name>
                <description>This is a deprecated custom rule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CompTimeExpiryRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>CompTimeExpiryRuleset</ruleset-name>
            <ruleset-description>CompTimeExpiryRuleset</ruleset-description>
            <ruleset-component id="CompTimeExpiryRule" type="Rule">
                <name>CompTimeExpiryRule</name>
                <description>This is a deprecated custom rule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="DailyTimeAllocationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>DailyTimeAllocationRuleset</ruleset-name>
            <ruleset-description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</ruleset-description>
            <ruleset-component id="SetAbsencesToRegRule" type="Rule">
                <name>SetAbsencesToRegRule</name>
                <description>This rule set the hour type of the absence record back to regular record.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="PreDailyRule" type="Rule">
                <name>Pre Daily Rule</name>
                <description>Resets the records to a default state (hourtype to REG) in preparation for the executing daily rules.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ConsecutiveDayWorkedRule" type="Rule">
                <name>ConsecutiveDayWorkedRule</name>
                <description>The rule applies consecutive day logic to the worked records.  The consecutive day includes 6th,7th and rolling types.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="DailyRule" type="Rule">
                <name>Daily Rule</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages.</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="DurationRoundingRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Duration Rounding Ruleset</ruleset-name>
            <ruleset-description>Defines the multiples or increments in which the duration of worked needs to be adjusted.</ruleset-description>
            <ruleset-component id="WorkedOnScheduledDayRule" type="Rule">
                <name>Worked On Scheduled Day Rule</name>
                <description>This predicate rule determines whether the employee has worked according to his/her scheduled shift.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ShiftEndDurationRoundingRule" type="Rule">
                <name>Shift End Duration Rounding Rule</name>
                <description>shift end duration rounding rule to an employee  record</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="EndGraceRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>End Grace Ruleset</ruleset-name>
            <ruleset-description>Defines the multiples or increments in which the grace period of worked needs to be adjusted.</ruleset-description>
            <ruleset-component id="PaidEndGraceRule" type="Rule">
                <name>Paid End Grace Rule</name>
                <description>If an employee left early on a normal work day and is within the end paid grace window, the worked actual off time will be forced to the shift off time thus being paid for the missed duration.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UnPaidEndGraceRule" type="Rule">
                <name>UnPaid End Grace Rule</name>
                <description>If an employee stayed and worked late on a normal work day and is within the end unpaid grace window, the actual off time will be forced to the shift off time thus not being paid for the  post shift duration. This is structured/parameter based rule.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="GenericLunchRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Generic Lunch Ruleset</ruleset-name>
            <ruleset-description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</ruleset-description>
            <ruleset-component id="RoundingLLAllRuleset" type="Ruleset">
                <name>RoundingLLAllRuleset</name>
                <description>RoundingLLAllRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="PreLunchRuleset" type="Ruleset">
                <name>Pre Lunch Ruleset</name>
                <description>Resets any existing Lunches/Breaks to a default state in preparation for the Lunch/Break rule.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="LunchWithRPRule" type="Rule">
                <name>Lunch Rule with Rule Parameter</name>
                <description>This rule insert break records based on the shift break definition, rule parameterization setting and provided the employee has worked through  the defined time segments.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="BreakRoundingRuleset" type="Ruleset">
                <name>BreakRoundingRuleset</name>
                <description>BreakRoundingRuleset</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="AutoLunchForOpenShiftRule" type="Rule">
                <name>AutoLunchForOpenShiftRule</name>
                <description>Generate an automatic lunch break for employee working on open shift.</description>
                <priority>5</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="GraceRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Grace Ruleset</ruleset-name>
            <ruleset-description>Defines certain windows around a shift start and/or a shift end in which employees can come late/early and/or leave late/early and be paid or not.</ruleset-description>
            <ruleset-component id="StartGraceRuleset" type="Ruleset">
                <name>Start Grace Ruleset</name>
                <description>Applies the start grace period rules to the employee_s records.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="EndGraceRuleset" type="Ruleset">
                <name>End Grace Ruleset</name>
                <description>Defines the multiples or increments in which the grace period of worked needs to be adjusted.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="HolidayEligibilityRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Holiday Eligibility Ruleset</ruleset-name>
            <ruleset-description>Checks is an employee is eligible for holiday pay</ruleset-description>
            <ruleset-component id="HolidayEligibilityReportingStartRule" type="Rule">
                <name>HolidayEligibilityReportingStartRule</name>
                <description>This rule starts the reporting for HolidayEligibilty(The ruleset that includes this rule must also include  HolidayEligibilityReportingEndRule).</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ApplyHolidayEligibilityRuleset" type="Ruleset">
                <name>ApplyHolidayEligibilityRuleset</name>
                <description>Ruleset that encapsulates all the short-circuiting rules along with the actual ApplyHolidayEligibilty rule.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="HolidayEligibilityReportingEndRule" type="Rule">
                <name>HolidayEligibilityReportingEndRule</name>
                <description>This rule ends the reporting (started in HolidayEligibilityReportingStartRule).</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PreLunchRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PreLunchRuleset</ruleset-name>
            <ruleset-description>TBD</ruleset-description>
            <ruleset-component id="ResetSystemBreakRule" type="Rule">
                <name>ResetSystemBreakRule</name>
                <description>TBD</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="PreLunchRule" type="Rule">
                <name>Pre Lunch Rule</name>
                <description>This rule converts  - all break records with flag type &apos;T&apos; to work type records;  - all other break records are deleted.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PublicHolidayEntitlementRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PublicHolidayEntitlement Ruleset</ruleset-name>
            <ruleset-description>PublicHolidayEntitlementRuleset</ruleset-description>
            <ruleset-component id="PublicHolidayEntitlementRule" type="Rule">
                <name>PublicHolidayEntitlementRule</name>
                <description>PublicHolidayEntitlementRule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="InsertLostTimeRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Insert Lost Time Ruleset</ruleset-name>
            <ruleset-description>Inserts the appropriate system Unpaid Codes(Missing Time Codes) like LT(Arrived Late), LL(Long Lunch) or LE(Left Early).</ruleset-description>
            <ruleset-component id="RemoveWorkedWithZeroDurationRule" type="Rule">
                <name>RemoveWorkedWithZeroDurationRule</name>
                <description>Removes worked records with zero duration.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="RemoveUNPWorkedRecordRule" type="Rule">
                <name>Remove UNP Worked Record Rule</name>
                <description>removes an unpaid worked record from the employee_s records.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="WorkedOnScheduledDayRule" type="Rule">
                <name>Worked On Scheduled Day Rule</name>
                <description>This predicate rule determines whether the employee has worked according to his/her scheduled shift.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="ArrivedLateRule" type="Rule">
                <name>Arrived Late Rule</name>
                <description>ArrivedLateRule compares the employee&apos;s first on time with the actual shift&apos;s start time. If the first on time is greater than the the shift start time (i.e. if the employee has arrived late), this rule inserts an &quot;Arrived Late (LT)&quot; worked record.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="LeftEarlyRule" type="Rule">
                <name>Left Early Rule</name>
                <description>This rule inserts an &apos;LE&apos; worked record if the employee&apos;s  last off_time is greater than actual shift&apos;s end time.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="LongLunchRule" type="Rule">
                <name>Long Lunch Rule</name>
                <description>This rule insert &apos;LL&apos; record for any missing time segments in the course of employee&apos;s shift segment.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="RemoveLLWithZeroDurationRule" type="Rule">
                <name>RemoveLLWithZeroDurationRule</name>
                <description>Removes the LL records with zero duration.</description>
                <priority>7</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="LatenessRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Lateness Ruleset</ruleset-name>
            <ruleset-description>Applies late rules when employee actual  start time is later than the scheduled start time</ruleset-description>
            <ruleset-component id="LatenessRule" type="Rule">
                <name>Lateness Rule</name>
                <description>determines if an employee has begun work after their scheduled time</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="DubleDeductLatenessRule" type="Rule">
                <name>DubleDeductLatenessRule</name>
                <description>This is a custom rule.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="PaidLatenessAbsenceRule" type="Rule">
                <name>Paid Lateness Absence Rule</name>
                <description>Applies paid lateness to an employee absence</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRule" type="Rule">
                <name>Accrual Cascade Rule</name>
                <description>Accrual Cascade rule handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="UnPaidLatenessAbsenceRule" type="Rule">
                <name>UnPaid Lateness Absence Rule</name>
                <description>This is a deprecated custom rule.</description>
                <priority>5</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NewTimeSheetRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>TimeSheet Ruleset(New)</ruleset-name>
            <ruleset-description>processes employee time information coming from the timesheet</ruleset-description>
            <ruleset-component id="DurationBasedValidateApprovalsRule" type="Rule">
                <name>DurationBasedValidateApprovalsRule</name>
                <description>DurationBasedValidateApprovalsRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="CheckLengthOfServiceForLeaveTypeRule" type="Rule">
                <name>CheckLengthOfServiceForLeaveTypeRule</name>
                <description>Verifies whether an employee has been employed for the minimum number of required days to take a configured leave type.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="CheckAbsenceQualificationsBasedOnHoursRule" type="Rule">
                <name>CheckAbsenceQualificationsBasedOnHoursRule</name>
                <description>Verifies whether an employee has the minimum number of work hours required to take a configured leave type.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="CheckLeaveTypeForCurrentYearRule" type="Rule">
                <name>CheckLeaveTypeForCurrentYearRule</name>
                <description>Verifies that the total sum of current year leave type hours and carryover hours does not exceed the total allowed.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="ValidateAverageForLastTimeFrameRule" type="Rule">
                <name>ValidateAverageForLastTimeFrameRule</name>
                <description>Validate whether a configured leave type is allowed based on the average number of work hours for a prior time frame.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="ResetAbsenceForSystemAccrualCodeRuleset" type="Ruleset">
                <name>ResetAbsenceForSystemAccrualCodeRuleset</name>
                <description>ResetAbsenceForSystemAccrualCodeRuleset</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="SetENTExtentsToUnpaidRule" type="Rule">
                <name>SetENTExtentsToUnpaidRule</name>
                <description>SetENTExtentsToUnpaidRule</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="ForcedAbsenceHoursRuleset" type="Ruleset">
                <name>ForcedAbsenceHoursRuleset</name>
                <description>This rule forces the absence duration to the value set against the absence code in the CODES table</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPayrollTimesBasedOnLaborRule" type="Rule">
                <name>Adjust Payroll Times Based On Labor Rule</name>
                <description>adjust payroll on time and off time based on the worked record</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="ResetShiftRuleForForecastingRule" type="Rule">
                <name>Reset ShiftRule For Forecasting Rule</name>
                <description>resets the shift rule for forecasting</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="DayOffValidationRule" type="Rule">
                <name>DayOffValidationRule</name>
                <description>validates day off rules for employee time</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPayrollTimesRule" type="Rule">
                <name>Adjust Payroll Times Rule</name>
                <description>Adjust labor records as per the payroll&apos;s on and off_times</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborRule" type="Rule">
                <name>Adjust Labor Rule</name>
                <description>Adjust labor records as per the payroll&apos;s off_time</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="PreLunchRuleset" type="Ruleset">
                <name>Pre Lunch Ruleset</name>
                <description>Resets any existing Lunches/Breaks to a default state in preparation for the Lunch/Break rule.</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="AdjustDurationBasedLaborExtentsRule" type="Rule">
                <name>Adjust Duration Based Labor Extents Rule</name>
                <description>Adjust duration based Labor extents if labor type worked extents exist.</description>
                <priority>16</priority>
            </ruleset-component>
            <ruleset-component id="GraceRuleset" type="Ruleset">
                <name>Grace Ruleset</name>
                <description>Defines certain windows around a shift start and/or a shift end in which employees can come late/early and/or leave late/early and be paid or not.</description>
                <priority>17</priority>
            </ruleset-component>
            <ruleset-component id="TimeRoundingRuleset" type="Ruleset">
                <name>Time Rounding Ruleset</name>
                <description>Applies the time rounding rules to the employee_s records.</description>
                <priority>18</priority>
            </ruleset-component>
            <ruleset-component id="FlexShiftRule" type="Rule">
                <name>FlexShiftRule</name>
                <description>Concept: This is similar to Start Swing Rule.  Following are the side effects of this rule:   1. If an employee clocks ON during the flex time, they will not be docked for late arrival.   2. If an employee clocks ON after the start of shift and outside of the flex window, the Arrived Late rule will be applied from the end of the flex window.  Pre-Condition: SHIFT.FLEXI_SHIFT  must be set to &apos;T&apos;.    This rule adjusts the payroll.ACTUAL_SHIFT&apos;s ON TIME and OFF TIME.</description>
                <priority>19</priority>
            </ruleset-component>
            <ruleset-component id="InsertLostTimeRuleset" type="Ruleset">
                <name>Insert Lost Time Ruleset</name>
                <description>Inserts the appropriate system Unpaid Codes(Missing Time Codes) like LT(Arrived Late), LL(Long Lunch) or LE(Left Early).</description>
                <priority>20</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingLongLunchWithAbsencesRuleset" type="Ruleset">
                <name>Adjust Overlapping Long Lunch With Absences Ruleset</name>
                <description>Adjusts long lunch when overlapping with an absence</description>
                <priority>21</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRuleset" type="Ruleset">
                <name>Generic Lunch Ruleset</name>
                <description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</description>
                <priority>22</priority>
            </ruleset-component>
            <ruleset-component id="RoundingDurationAllRuleset" type="Ruleset">
                <name>RoundingDurationAllRuleset</name>
                <description>RoundingDurationAllRuleset</description>
                <priority>23</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPartialAbsWhenWorkedNoBrkGenericRule" type="Rule">
                <name>AdjustPartialAbsWhenWorkedNoBrkGenericRule</name>
                <description>AdjustPartialAbsWhenWorkedNoBrkGenericRule</description>
                <priority>24</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborWithOverlappingAbsencesRuleset" type="Ruleset">
                <name>Adjust Labor With Overlapping Absences Ruleset</name>
                <description>Adjusts labor with overlapping absence</description>
                <priority>25</priority>
            </ruleset-component>
            <ruleset-component id="NewDeductAbsencesFromUnPaidRuleset" type="Ruleset">
                <name>DeductAbsencesFromUnPaidRuleset(New)</name>
                <description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</description>
                <priority>26</priority>
            </ruleset-component>
            <ruleset-component id="UNPExcessDeductionWhenNoBreakRule" type="Rule">
                <name>UNPExcessDeductionWhenNoBreakRule</name>
                <description>This rule will deletes the excess &apos;LE&apos; or &apos;LT&apos; hours when employee has no break or lunch.</description>
                <priority>27</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>28</priority>
            </ruleset-component>
            <ruleset-component id="RejectedCodesRule" type="Rule">
                <name>RejectedCodesRule</name>
                <description>Throws an alert if the timesheet contains a rejected code on save.</description>
                <priority>29</priority>
            </ruleset-component>
            <ruleset-component id="OptionalHolidayEligibilityRule" type="Rule">
                <name>OptionalHolidayEligibilityRule</name>
                <description>OptionalHolidayEligibilityRule</description>
                <priority>30</priority>
            </ruleset-component>
            <ruleset-component id="DailyTimeAllocationRuleset" type="Ruleset">
                <name>DailyTimeAllocationRuleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>31</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeRuleset" type="Ruleset">
                <name>Weekly Overtime Allocation Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>32</priority>
            </ruleset-component>
            <ruleset-component id="CallInRuleset" type="Ruleset">
                <name>Call-In Ruleset</name>
                <description>Applies the minimum guaranteed amount of hours to an employee who has been called-in to work.</description>
                <priority>33</priority>
            </ruleset-component>
            <ruleset-component id="BonusRuleset" type="Ruleset">
                <name>Bonus Ruleset</name>
                <description>Inserts any employee or cost center position associated bonuses</description>
                <priority>34</priority>
            </ruleset-component>
            <ruleset-component id="SetAutoCCPToDefaultCCPRule" type="Rule">
                <name>SetAutoCCPToDefaultCCPRule</name>
                <description>Resets any ABP-ABU-BNS worked records whose CCP value is AUTO-AUTO to default values</description>
                <priority>35</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriod_Weekly_And_PayGroup_Related_Rules" type="Ruleset">
                <name>PayPeriod_Weekly_And_PayGroup_Related_Rules</name>
                <description>Ruleset containing Pay related rules</description>
                <priority>36</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRuleset" type="Ruleset">
                <name>Rate Set Ruleset</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>37</priority>
            </ruleset-component>
            <ruleset-component id="AuthorizationRuleset" type="Ruleset">
                <name>Authorization Ruleset</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>38</priority>
            </ruleset-component>
            <ruleset-component id="AdjustmentsRuleset" type="Ruleset">
                <name>AdjustmentsRuleset</name>
                <description>Determines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>39</priority>
            </ruleset-component>
            <ruleset-component id="OTChargedAccrualRule" type="Rule">
                <name>OTChargedAccrualRule</name>
                <description>Will accrue overtime hours charged (i.e worked) if the DoOTChargedAccrual global variable is true.  The hours accrue into the EMP_BANK.OT_CHARGED database column.</description>
                <priority>40</priority>
            </ruleset-component>
            <ruleset-component id="CodeTypeCodeAdjustmentRuleset" type="Ruleset">
                <name>CodeTypeCodeAdjustmentRuleset</name>
                <description>CodeTypeCodeAdjustmentRuleset</description>
                <priority>41</priority>
            </ruleset-component>
            <ruleset-component id="RemoveExtentsWithZeroDurationRuleset" type="Ruleset">
                <name>RemoveExtentsWithZeroDurationRuleset</name>
                <description>RemoveExtentsWithZeroDurationRuleset</description>
                <priority>42</priority>
            </ruleset-component>
            <ruleset-component id="NotificationRuleset" type="Ruleset">
                <name>NotificationRuleset</name>
                <description>Can enable/disable the employee/supervisor notifications that occur when the Employee Sign-off/Supervisor approval status changes from true to false.</description>
                <priority>43</priority>
            </ruleset-component>
            <ruleset-component id="MMLAEligibilityRuleset" type="Ruleset">
                <name>MMLAEligibilityRuleset</name>
                <description>MMLAEligibilityRuleset</description>
                <priority>44</priority>
            </ruleset-component>
            <ruleset-component id="FMLAEligibilityRuleset" type="Ruleset">
                <name>FMLAEligibilityRuleset</name>
                <description>FMLAEligibilityRuleset</description>
                <priority>45</priority>
            </ruleset-component>
            <ruleset-component id="AbsenceIncrementsRule" type="Rule">
                <name>AbsenceIncrementsRule</name>
                <description>The purpose of this rule is to restrict the users to enter time in certain increments. The rule will restrict users based on their employee class as well as their home department.</description>
                <priority>46</priority>
            </ruleset-component>
            <ruleset-component id="AbsenceSynchronizationRule" type="Rule">
                <name>AbsenceSynchronizationRule</name>
                <description>Synchronize Absence Orion records with worked records from timesheet.</description>
                <priority>47</priority>
            </ruleset-component>
            <ruleset-component id="IntermittentLeaveRule" type="Rule">
                <name>IntermittentLeaveRule</name>
                <description>If a user is granted intermittent leave, this rule will enforce the use of that time.</description>
                <priority>48</priority>
            </ruleset-component>
            <ruleset-component id="OccurrenceAssignmentRule" type="Rule">
                <name>OccurrenceAssignmentRule</name>
                <description>OccurrenceAssignmentRule.</description>
                <priority>49</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NewBubbleSheetRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>BubbleSheet Ruleset(New)</ruleset-name>
            <ruleset-description>processes employee time information coming from the bubblesheet</ruleset-description>
            <ruleset-component id="ValidateApprovalsRule" type="Rule">
              <name>ValidateApprovalsRule</name>
              <description>Validates approval fields to ensure no disallowed front end manipulation occurred.</description>
              <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="CheckLengthOfServiceForLeaveTypeRule" type="Rule">
                <name>CheckLengthOfServiceForLeaveTypeRule</name>
                <description>Verifies whether an employee has been employed for the minimum number of required days to take a configured leave type.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="CheckAbsenceQualificationsBasedOnHoursRule" type="Rule">
                <name>CheckAbsenceQualificationsBasedOnHoursRule</name>
                <description>Verifies whether an employee has the minimum number of work hours required to take a configured leave type.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="CheckLeaveTypeForCurrentYearRule" type="Rule">
                <name>CheckLeaveTypeForCurrentYearRule</name>
                <description>Verifies that the total sum of current year leave type hours and carryover hours does not exceed the total allowed.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="ValidateAverageForLastTimeFrameRule" type="Rule">
                <name>ValidateAverageForLastTimeFrameRule</name>
                <description>Validate whether a configured leave type is allowed based on the average number of work hours for a prior time frame.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="AddEntitlementFromDatabaseRule" type="Rule">
                <name>AddEntitlementFromDatabaseRule</name>
                <description>AddEntitlementFromDatabaseRule</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="AddBonusFromDatabaseRule" type="Rule">
                <name>AddBonusFromDatabaseRule</name>
                <description>This rule reads BNS type worked records into PayrollVO. (Used in BubbleSheet only)</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="ResetAbsenceForSystemAccrualCodeRuleset" type="Ruleset">
                <name>ResetAbsenceForSystemAccrualCodeRuleset</name>
                <description>ResetAbsenceForSystemAccrualCodeRuleset</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="SetENTExtentsToUnpaidRule" type="Rule">
                <name>SetENTExtentsToUnpaidRule</name>
                <description>SetENTExtentsToUnpaidRule</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="ForcedAbsenceHoursRuleset" type="Ruleset">
                <name>ForcedAbsenceHoursRuleset</name>
                <description>This rule forces the absence duration to the value set against the absence code in the CODES table</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="ResetShiftRuleForForecastingRule" type="Rule">
                <name>Reset ShiftRule For Forecasting Rule</name>
                <description>resets the shift rule for forecasting</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="DayOffValidationRule" type="Rule">
                <name>DayOffValidation Rule</name>
                <description>validates day off rules for employee time</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPayrollTimesRule" type="Rule">
                <name>Adjust Payroll Times Rule</name>
                <description>Adjust labor records as per the payroll&apos;s on and off_times</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="PreLunchRuleset" type="Ruleset">
                <name>Pre Lunch Ruleset</name>
                <description>Resets any existing Lunches/Breaks to a default state in preparation for the Lunch/Break rule.</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="GraceRuleset" type="Ruleset">
                <name>Grace Ruleset</name>
                <description>Defines certain windows around a shift start and/or a shift end in which employees can come late/early and/or leave late/early and be paid or not.</description>
                <priority>16</priority>
            </ruleset-component>
            <ruleset-component id="TimeRoundingRuleset" type="Ruleset">
                <name>Time Rounding Ruleset</name>
                <description>Applies the time rounding rules to the employee_s records.</description>
                <priority>17</priority>
            </ruleset-component>
            <ruleset-component id="FlexShiftRule" type="Rule">
                <name>FlexShiftRule</name>
                <description>Concept: This is similar to Start Swing Rule.  Following are the side effects of this rule:   1. If an employee clocks ON during the flex time, they will not be docked for late arrival.   2. If an employee clocks ON after the start of shift and outside of the flex window, the Arrived Late rule will be applied from the end of the flex window.  Pre-Condition: SHIFT.FLEXI_SHIFT  must be set to &apos;T&apos;.    This rule adjusts the payroll.ACTUAL_SHIFT&apos;s ON TIME and OFF TIME.</description>
                <priority>18</priority>
            </ruleset-component>
            <ruleset-component id="InsertLostTimeRuleset" type="Ruleset">
                <name>Insert Lost Time Ruleset</name>
                <description>Inserts the appropriate system Unpaid Codes(Missing Time Codes) like LT(Arrived Late), LL(Long Lunch) or LE(Left Early).</description>
                <priority>19</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingLongLunchWithAbsencesRuleset" type="Ruleset">
                <name>Adjust Overlapping Long Lunch With Absences Ruleset</name>
                <description>Adjusts long lunch when overlapping with an absence</description>
                <priority>20</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRuleset" type="Ruleset">
                <name>Generic Lunch Ruleset</name>
                <description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</description>
                <priority>21</priority>
            </ruleset-component>
            <ruleset-component id="RoundingDurationAllRuleset" type="Ruleset">
                <name>RoundingDurationAllRuleset</name>
                <description>RoundingDurationAllRuleset</description>
                <priority>22</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPartialAbsWhenWorkedNoBrkGenericRule" type="Rule">
                <name>AdjustPartialAbsWhenWorkedNoBrkGenericRule</name>
                <description>AdjustPartialAbsWhenWorkedNoBrkGenericRule</description>
                <priority>23</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborWithOverlappingAbsencesRuleset" type="Ruleset">
                <name>Adjust Labor With Overlapping Absences Ruleset</name>
                <description>Adjusts labor with overlapping absence</description>
                <priority>24</priority>
            </ruleset-component>
            <ruleset-component id="NewDeductAbsencesFromUnPaidRuleset" type="Ruleset">
                <name>DeductAbsencesFromUnPaidRuleset(New)</name>
                <description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</description>
                <priority>25</priority>
            </ruleset-component>
            <ruleset-component id="UNPExcessDeductionWhenNoBreakRule" type="Rule">
                <name>UNPExcessDeductionWhenNoBreakRule</name>
                <description>This rule will deletes the excess &apos;LE&apos; or &apos;LT&apos; hours when employee has no break or lunch.</description>
                <priority>26</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>27</priority>
            </ruleset-component>
            <ruleset-component id="RejectedCodesRule" type="Rule">
                <name>RejectedCodesRule</name>
                <description>Throws an alert if the timesheet contains a rejected code on save.</description>
                <priority>28</priority>
            </ruleset-component>
            <ruleset-component id="OptionalHolidayEligibilityRule" type="Rule">
                <name>OptionalHolidayEligibilityRule</name>
                <description>OptionalHolidayEligibilityRule</description>
                <priority>29</priority>
            </ruleset-component>
            <ruleset-component id="DailyTimeAllocationRuleset" type="Ruleset">
                <name>Daily Time Allocation Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>30</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeRuleset" type="Ruleset">
                <name>Weekly Overtime Allocation Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>31</priority>
            </ruleset-component>
            <ruleset-component id="CallInRuleset" type="Ruleset">
                <name>Call-In Ruleset</name>
                <description>Applies the minimum guaranteed amount of hours to an employee who has been called-in to work.</description>
                <priority>32</priority>
            </ruleset-component>
            <ruleset-component id="BonusRuleset" type="Ruleset">
                <name>Bonus Ruleset</name>
                <description>Inserts any employee or cost center position associated bonuses</description>
                <priority>33</priority>
            </ruleset-component>
            <ruleset-component id="SetAutoCCPToDefaultCCPRule" type="Rule">
                <name>SetAutoCCPToDefaultCCPRule</name>
                <description>Resets any ABP-ABU-BNS worked records whose CCP value is AUTO-AUTO to default values</description>
                <priority>34</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriod_Weekly_And_PayGroup_Related_Rules" type="Ruleset">
                <name>PayPeriod_Weekly_And_PayGroup_Related_Rules</name>
                <description>Ruleset containing Pay related rules</description>
                <priority>35</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRuleset" type="Ruleset">
                <name>Rate Set Ruleset</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>36</priority>
            </ruleset-component>
            <ruleset-component id="AuthorizationRuleset" type="Ruleset">
                <name>Authorization Ruleset</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>37</priority>
            </ruleset-component>
            <ruleset-component id="AdjustmentsRuleset" type="Ruleset">
                <name>AdjustmentsRuleset</name>
                <description>Determines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>38</priority>
            </ruleset-component>
            <ruleset-component id="OTChargedAccrualRule" type="Rule">
                <name>OTChargedAccrualRule</name>
                <description>Will accrue overtime hours charged (i.e worked) if the DoOTChargedAccrual global variable is true.  The hours accrue into the EMP_BANK.OT_CHARGED database column.</description>
                <priority>39</priority>
            </ruleset-component>
            <ruleset-component id="CodeTypeCodeAdjustmentRuleset" type="Ruleset">
                <name>CodeTypeCodeAdjustmentRuleset</name>
                <description>CodeTypeCodeAdjustmentRuleset</description>
                <priority>40</priority>
            </ruleset-component>
            <ruleset-component id="NotificationRuleset" type="Ruleset">
                <name>NotificationRuleset</name>
                <description>Can enable/disable the employee/supervisor notifications that occur when the Employee Sign-off/Supervisor approval status changes from true to false.</description>
                <priority>41</priority>
            </ruleset-component>
            <ruleset-component id="MMLAEligibilityRuleset" type="Ruleset">
                <name>MMLAEligibilityRuleset</name>
                <description>MMLAEligibilityRuleset</description>
                <priority>42</priority>
            </ruleset-component>
            <ruleset-component id="FMLAEligibilityRuleset" type="Ruleset">
                <name>FMLAEligibilityRuleset</name>
                <description>FMLAEligibilityRuleset</description>
                <priority>43</priority>
            </ruleset-component>
            <ruleset-component id="AbsenceIncrementsRule" type="Rule">
                <name>AbsenceIncrementsRule</name>
                <description>The purpose of this rule is to restrict the users to enter time in certain increments. The rule will restrict users based on their employee class as well as their home department.</description>
                <priority>44</priority>
            </ruleset-component>
            <ruleset-component id="AbsenceSynchronizationRule" type="Rule">
                <name>AbsenceSynchronizationRule</name>
                <description>Synchronize Absence Orion records with worked records from timesheet.</description>
                <priority>45</priority>
            </ruleset-component>
            <ruleset-component id="IntermittentLeaveRule" type="Rule">
                <name>IntermittentLeaveRule</name>
                <description>If a user is granted intermittent leave, this rule will enforce the use of that time.</description>
                <priority>46</priority>
            </ruleset-component>
            <ruleset-component id="OccurrenceAssignmentRule" type="Rule">
                <name>OccurrenceAssignmentRule</name>
                <description>OccurrenceAssignmentRule.</description>
                <priority>47</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PayrollSummaryRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PayrollSummaryRuleset</ruleset-name>
            <ruleset-description>PayrollSummaryRuleset</ruleset-description>
            <ruleset-component id="AdjustAbsenceDurationToIncludeBreaksRule" type ="Rule">
              <name>AdjustAbsenceDurationToIncludeBreaksRule</name>
              <description>AdjustAbsenceDurationToIncludeBreaksRule</description>
              <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="DefaultTimeCalcRuleset" type="Ruleset">
                <name>DefaultTimeCalcRuleset</name>
                <description>DefaultTimeCalcRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="NotificationRuleset" type="Ruleset">
                <name>NotificationRuleset</name>
                <description>Can enable/disable the employee/supervisor notifications that occur when the Employee Sign-off/Supervisor approval status changes from true to false.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NewDailyEditsRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Daily Edits Ruleset(New)</ruleset-name>
            <ruleset-description>displays employee information in the daily edits screen</ruleset-description>
            <ruleset-component id="DefaultTimeCalcRuleset" type="Ruleset">
                <name>DefaultTimeCalcRuleset</name>
                <description>DefaultTimeCalcRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="NotificationRuleset" type="Ruleset">
                <name>NotificationRuleset</name>
                <description>Can enable/disable the employee/supervisor notifications that occur when the Employee Sign-off/Supervisor approval status changes from true to false.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="TimePairsRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Time Pairs Ruleset</ruleset-name>
            <ruleset-description>displays employee information in the time pairs screen</ruleset-description>
            <ruleset-component id="DefaultTimeCalcRuleset" type="Ruleset">
                <name>DefaultTimeCalcRuleset</name>
                <description>DefaultTimeCalcRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="NotificationRuleset" type="Ruleset">
                <name>NotificationRuleset</name>
                <description>Can enable/disable the employee/supervisor notifications that occur when the Employee Sign-off/Supervisor approval status changes from true to false.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>        
        <ruleset id="DefaultTimeCalcRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>DefaultTimeCalcRuleset</ruleset-name>
            <ruleset-description>DefaultTimeCalcRuleset</ruleset-description>
            <ruleset-component id="ValidateApprovalsRule" type="Rule">
              <name>ValidateApprovalsRule</name>
              <description>Validates approval fields to ensure no disallowed front end manipulation occurred.</description>
              <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ReplaceUNPWithAbsenceForCrossMidnightShiftRule" type="Rule">
              <name>ReplaceUNPWithAbsenceForCrossMidnightShiftRule</name>
              <description>ReplaceUNPWithAbsenceForCrossMidnightShiftRule</description>
              <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ResetAbsenceForSystemAccrualCodeRuleset" type="Ruleset">
                <name>ResetAbsenceForSystemAccrualCodeRuleset</name>
                <description>ResetAbsenceForSystemAccrualCodeRuleset</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="CheckLengthOfServiceForLeaveTypeRule" type="Rule">
                <name>CheckLengthOfServiceForLeaveTypeRule</name>
                <description>Verifies whether an employee has been employed for the minimum number of required days to take a configured leave type.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="CheckAbsenceQualificationsBasedOnHoursRule" type="Rule">
                <name>CheckAbsenceQualificationsBasedOnHoursRule</name>
                <description>Verifies whether an employee has the minimum number of work hours required to take a configured leave type.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="CheckLeaveTypeForCurrentYearRule" type="Rule">
                <name>CheckLeaveTypeForCurrentYearRule</name>
                <description>Verifies that the total sum of current year leave type hours and carryover hours does not exceed the total allowed.</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="ValidateAverageForLastTimeFrameRule" type="Rule">
                <name>ValidateAverageForLastTimeFrameRule</name>
                <description>Validate whether a configured leave type is allowed based on the average number of work hours for a prior time frame.</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="SetENTExtentsToUnpaidRule" type="Rule">
                <name>SetENTExtentsToUnpaidRule</name>
                <description>SetENTExtentsToUnpaidRule</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="ForcedAbsenceHoursRuleset" type="Ruleset">
                <name>ForcedAbsenceHoursRuleset</name>
                <description>This rule forces the absence duration to the value set against the absence code in the CODES table</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="ResetShiftRuleForForecastingRule" type="Rule">
                <name>Reset ShiftRule For Forecasting Rule</name>
                <description>resets the shift rule for forecasting</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="DayOffValidationRule" type="Rule">
                <name>DayOffValidation Rule</name>
                <description>validates day off rules for employee time</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborRule" type="Rule">
                <name>Adjust Labor Rule</name>
                <description>Adjust labor records as per the payroll&apos;s off_time</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="PreLunchRuleset" type="Ruleset">
                <name>Pre Lunch Ruleset</name>
                <description>Resets any existing Lunches/Breaks to a default state in preparation for the Lunch/Break rule.</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="GraceRuleset" type="Ruleset">
                <name>Grace Ruleset</name>
                <description>Defines certain windows around a shift start and/or a shift end in which employees can come late/early and/or leave late/early and be paid or not.</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="TimeRoundingRuleset" type="Ruleset">
                <name>Time Rounding Ruleset</name>
                <description>Applies the time rounding rules to the employee_s records.</description>
                <priority>16</priority>
            </ruleset-component>
            <ruleset-component id="FlexShiftRule" type="Rule">
                <name>FlexShiftRule</name>
                <description>Concept: This is similar to Start Swing Rule.  Following are the side effects of this rule:   1. If an employee clocks ON during the flex time, they will not be docked for late arrival.   2. If an employee clocks ON after the start of shift and outside of the flex window, the Arrived Late rule will be applied from the end of the flex window.  Pre-Condition: SHIFT.FLEXI_SHIFT  must be set to &apos;T&apos;.    This rule adjusts the payroll.ACTUAL_SHIFT&apos;s ON TIME and OFF TIME.</description>
                <priority>17</priority>
            </ruleset-component>
            <ruleset-component id="InsertLostTimeRuleset" type="Ruleset">
                <name>Insert Lost Time Ruleset</name>
                <description>Inserts the appropriate system Unpaid Codes(Missing Time Codes) like LT(Arrived Late), LL(Long Lunch) or LE(Left Early).</description>
                <priority>18</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingLongLunchWithAbsencesRuleset" type="Ruleset">
                <name>Adjust Overlapping Long Lunch With Absences Ruleset</name>
                <description>Adjusts long lunch when overlapping with an absence</description>
                <priority>19</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRuleset" type="Ruleset">
                <name>Generic Lunch Ruleset</name>
                <description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</description>
                <priority>20</priority>
            </ruleset-component>
            <ruleset-component id="RoundingDurationAllRuleset" type="Ruleset">
                <name>RoundingDurationAllRuleset</name>
                <description>RoundingDurationAllRuleset</description>
                <priority>21</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPartialAbsWhenWorkedNoBrkGenericRule" type="Rule">
                <name>AdjustPartialAbsWhenWorkedNoBrkGenericRule</name>
                <description>AdjustPartialAbsWhenWorkedNoBrkGenericRule</description>
                <priority>22</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborWithOverlappingAbsencesRuleset" type="Ruleset">
                <name>Adjust Labor With Overlapping Absences Ruleset</name>
                <description>Adjusts labor with overlapping absence</description>
                <priority>23</priority>
            </ruleset-component>
            <ruleset-component id="NewDeductAbsencesFromUnPaidRuleset" type="Ruleset">
                <name>DeductAbsencesFromUnPaidRuleset(New)</name>
                <description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</description>
                <priority>24</priority>
            </ruleset-component>
            <ruleset-component id="UNPExcessDeductionWhenNoBreakRule" type="Rule">
                <name>UNPExcessDeductionWhenNoBreakRule</name>
                <description>This rule will deletes the excess &apos;LE&apos; or &apos;LT&apos; hours when employee has no break or lunch.</description>
                <priority>25</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>26</priority>
            </ruleset-component>
            <ruleset-component id="RejectedCodesRule" type="Rule">
                <name>RejectedCodesRule</name>
                <description>Throws an alert if the timesheet contains a rejected code on save.</description>
                <priority>27</priority>
            </ruleset-component>
            <ruleset-component id="OptionalHolidayEligibilityRule" type="Rule">
                <name>OptionalHolidayEligibilityRule</name>
                <description>OptionalHolidayEligibilityRule</description>
                <priority>28</priority>
            </ruleset-component>
            <ruleset-component id="DailyTimeAllocationRuleset" type="Ruleset">
                <name>DailyTimeAllocationRuleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>29</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeRuleset" type="Ruleset">
                <name>Weekly Overtime Allocation Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>30</priority>
            </ruleset-component>
            <ruleset-component id="CallInRuleset" type="Ruleset">
                <name>Call-In Ruleset</name>
                <description>Applies the minimum guaranteed amount of hours to an employee who has been called-in to work.</description>
                <priority>31</priority>
            </ruleset-component>
            <ruleset-component id="BonusRuleset" type="Ruleset">
                <name>Bonus Ruleset</name>
                <description>Inserts any employee or cost center position associated bonuses</description>
                <priority>32</priority>
            </ruleset-component>
            <ruleset-component id="SetAutoCCPToDefaultCCPRule" type="Rule">
                <name>SetAutoCCPToDefaultCCPRule</name>
                <description>Resets any ABP-ABU-BNS worked records whose CCP value is AUTO-AUTO to default values</description>
                <priority>33</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriod_Weekly_And_PayGroup_Related_Rules" type="Ruleset">
                <name>PayPeriod_Weekly_And_PayGroup_Related_Rules</name>
                <description>Ruleset containing Pay related rules</description>
                <priority>34</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRuleset" type="Ruleset">
                <name>Rate Set Ruleset</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>35</priority>
            </ruleset-component>
            <ruleset-component id="AuthorizationRuleset" type="Ruleset">
                <name>Authorization Ruleset</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>36</priority>
            </ruleset-component>
            <ruleset-component id="AdjustmentsRuleset" type="Ruleset">
                <name>AdjustmentsRuleset</name>
                <description>Determines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>37</priority>
            </ruleset-component>
            <ruleset-component id="ResetAutoToDefaultDeptCrewRule" type="Rule">
                <name>ResetAutoToDefaultDeptCrewRule</name>
                <description>Resets AUTO department and crew to effective department and crew of the employee</description>
                <priority>38</priority>
            </ruleset-component>
            <ruleset-component id="OTChargedAccrualRule" type="Rule">
                <name>OTChargedAccrualRule</name>
                <description>Will accrue overtime hours charged (i.e worked) if the DoOTChargedAccrual global variable is true.  The hours accrue into the EMP_BANK.OT_CHARGED database column.</description>
                <priority>39</priority>
            </ruleset-component>
            <ruleset-component id="CodeTypeCodeAdjustmentRuleset" type="Ruleset">
                <name>CodeTypeCodeAdjustmentRuleset</name>
                <description>CodeTypeCodeAdjustmentRuleset</description>
                <priority>40</priority>
            </ruleset-component>
            <ruleset-component id="MMLAEligibilityRuleset" type="Ruleset">
                <name>MMLAEligibilityRuleset</name>
                <description>MMLAEligibilityRuleset</description>
                <priority>41</priority>
            </ruleset-component>
            <ruleset-component id="FMLAEligibilityRuleset" type="Ruleset">
                <name>FMLAEligibilityRuleset</name>
                <description>FMLAEligibilityRuleset</description>
                <priority>42</priority>
            </ruleset-component>
            <ruleset-component id="AbsenceIncrementsRule" type="Rule">
                <name>AbsenceIncrementsRule</name>
                <description>The purpose of this rule is to restrict the users to enter time in certain increments. The rule will restrict users based on their employee class as well as their home department.</description>
                <priority>43</priority>
            </ruleset-component>
            <ruleset-component id="AbsenceSynchronizationRule" type="Rule">
                <name>AbsenceSynchronizationRule</name>
                <description>Synchronize Absence Orion records with worked records from timesheet.</description>
                <priority>44</priority>
            </ruleset-component>
            <ruleset-component id="IntermittentLeaveRule" type="Rule">
                <name>IntermittentLeaveRule</name>
                <description>If a user is granted intermittent leave, this rule will enforce the use of that time.</description>
                <priority>45</priority>
            </ruleset-component>
            <ruleset-component id="OccurrenceAssignmentRule" type="Rule">
                <name>OccurrenceAssignmentRule</name>
                <description>OccurrenceAssignmentRule.</description>
                <priority>46</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RunDefaultTimeCalcIfNoUARuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>RunDefaultTimeCalcIfNoUARuleset</ruleset-name>
            <ruleset-description>This ruleset will be executed if there are NO UA records.</ruleset-description>
            <ruleset-component id="UnAuthorizedAbsenceRule" type="Rule">
                <name>UnAuthorized Absence Rule</name>
                <description>This rule checks if the employee is on unauthorized absence</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="DefaultTimeCalcRuleset" type="Ruleset">
                <name>DefaultTimeCalcRuleset</name>
                <description>DefaultTimeCalcRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="InsufficientAccrualNotificationRule" type="Rule">
                <name>InsufficientAccrualNotificationRule</name>
                <description>Determines if there is an AFU or AFP code and then sends a notification.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="MassUpatesRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Mass Updates Ruleset</ruleset-name>
            <ruleset-description>Applies the mass updates functionality using the generic rules after which it applies mass updates specific rules</ruleset-description>
            <ruleset-component id="UnAuthorizedAbsenceNotificationRuleset" type="Ruleset">
                <name>UnAuthorizedAbsenceNotificationRuleset</name>
                <description>This rule sends a notification to the user about employees who are on unexpected absence.</description>
                <priority>1</priority>
            </ruleset-component>
			<ruleset-component id="AdjustOverlappingLongLunchWithAbsencesRuleset" type="Ruleset">
                <name>AdjustOverlappingLongLunchWithAbsencesRuleset</name>
                <description>This rule sends a notification to the user about employees who are on unexpected absence.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="RunDefaultTimeCalcIfNoUARuleset" type="Ruleset">
                <name>RunDefaultTimeCalcIfNoUARuleset</name>
                <description>This ruleset will be executed if there are NO UA records.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="MonthlyAccrualAdditionsToSuspense" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>SuspenseToActiveAccrualsRuleset(TCEQ)</ruleset-name>
            <ruleset-description>Annual and Sick accruals are initially put into Suspense buckets until an employee has an approved worked record in a month.</ruleset-description>
            <ruleset-component id="MonthlySickAccrualAdditionsToSuspenseRule" type="Rule">
                <name>Monthly Sick Accrual Additions To Suspense Rule</name>
                <description>Increments sick suspense accrual bucket every month.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="MonthlyANLAccrualAdditionsToSuspenseRule" type="Rule">
                <name>Monthly ANL Accrual Additions To Suspense Rule</name>
                <description>Increments sick suspense accrual bucket every month.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRule" type="Rule">
                <name>Accrual Cascade Rule</name>
                <description>Accrual Cascade rule handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SuspenseToActiveAccrualsRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>MonthlyAccrualAdditionsToSuspense(TCEQ)</ruleset-name>
            <ruleset-description>Annual and Sick accruals are initially put into Suspense buckets until an employee has an approved worked record in a month.</ruleset-description>
            <ruleset-component id="MonthlySickSuspenseToActiveAccrualRule" type="Rule">
                <name>Monthly Sick Suspense To Active Accrual Rule</name>
                <description>This rule adds sick accruals from suspense to active buckets.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="MonthlyAnnualLeaveSuspenseToActiveAccrualRule" type="Rule">
                <name>Monthly Annual Leave Suspense To Active Accrual Rule</name>
                <description>This rule adds annual accruals from suspense to active buckets.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRule" type="Rule">
                <name>Accrual Cascade Rule</name>
                <description>Accrual Cascade rule handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NewDeductAbsencesFromUnPaidRuleset" is_short_circuit="True" sid="" type="Private">
            <ruleset-name>DeductAbsencesFromUnPaidRuleset(New)</ruleset-name>
            <ruleset-description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</ruleset-description>
            <ruleset-component id="IsDurationBasedAbsenceRule" type="Rule">
                <name>Is Duration Based Absence Rule</name>
                <description>checks if absence is duration based</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="DeductAbsencesFromUnPaidRule" type="Rule">
                <name>Deduct Absences From UnPaid Rule</name>
                <description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NewStartOfDayRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Start Of Day Ruleset(New)</ruleset-name>
            <ruleset-description>The Start Of Day process generates scheduled absences, day-off, unexpected absences or work records depending on the schedules and employee sttings.</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleDefinitionRule" type="Rule">
                <name>Use Employee ShiftRule Definition Rule</name>
                <description>This rule set the rulesetcontext&apos;s shift rule definition to employee&apos;s default shift rule.  What this means is that all pay calculation rules like DailyRule, WeeklyOvertimeRule, BankingRule, Call-InRule etc. will use the shift rule associated with employee (instead of the shift rule associated with shift) for calculation purposes.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="IsClockerWithExistingLaborRule" type="Rule">
                <name>IsClockerWithExistingLaborRule</name>
                <description>IsClockerWithExistingLaborRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="LoadPartialDayAbsencesOnSODRule" type="Rule">
                <name>LoadPartialDayAbsencesOnSODRule</name>
                <description>LoadPartialDayAbsencesOnSODRule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="ApplyHourAllocationsForCustomDayTypesRule" type="Rule">
                <name>ApplyHourAllocationsForCustomDayTypesRule</name>
                <description>Apply custom day types from the hour allocation</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="SetENTExtentsToUnpaidRule" type="Rule">
                <name>SetENTExtentsToUnpaidRule</name>
                <description>SetENTExtentsToUnpaidRule</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="RemoveExceptionRule" type="Rule">
                <name>RemoveExceptionRule</name>
                <description>RemoveExceptionRule</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="AdjustTimesForUAExtentNonSCRuleset" type="Ruleset">
                <name>AdjustTimesForUAExtentNonSCRuleset</name>
                <description>This is a non-short circuit ruleset for AdjustTimesForUAExtentRuleset.</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="ResetShiftRuleForForecastingRule" type="Rule">
                <name>Reset ShiftRule For Forecasting Rule</name>
                <description>resets the shift rule for forecasting</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPayrollTimesRule" type="Rule">
                <name>Adjust Payroll Times Rule</name>
                <description>Adjust labor records as per the payroll&apos;s on and off_times</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborRule" type="Rule">
                <name>Adjust Labor Rule</name>
                <description>Adjust labor records as per the payroll&apos;s off_time</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="SetAdjustmentIndicatorForSwiperRuleset" type="Ruleset">
                <name>SetAdjustmentIndicatorForSwiperRuleset</name>
                <description>This is a wrapper ruleset of CreateAdjustmentForSwiperSCRuleset of which short circuit is true. This ruleset will prevent short circuit of  CreateAdjustmentForSwiperSCRuleset from short circuiting outer ruleset (SOD)</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="HolidayProcessingForSODNonSCRuleset" type="Ruleset">
                <name>HolidayProcessingForSODNonSCRuleset</name>
                <description>This ruleset allows the holiday processing to take place during Start Of Day if enabled from the global variable Rules.HolidayProcessingFromSODRule.Enabled</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="UnAuthorizedAbsenceRule" type="Rule">
                <name>UnAuthorized Absence Rule</name>
                <description>Applies the unauthorized absence rule to the employee_s records.</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRulesetForSOD" type="Ruleset">
                <name>GenericLunchRulesetForSOD</name>
                <description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="AdjustWorkedRuleset" type="Ruleset">
                <name>AdjustWorkedRuleset</name>
                <description>This ruleset adjusts worked records based on whether the absences are time based or duration based.</description>
                <priority>16</priority>
            </ruleset-component>
            <ruleset-component id="SchedulePeriodOverrideRuleset" type="Ruleset">
                <name>SchedulePeriodOverrideRuleset</name>
                <description>TBD</description>
                <priority>17</priority>
            </ruleset-component>
            <ruleset-component id="JobAllocationRuleset" type="Ruleset">
                <name>JobAllocationRuleset</name>
                <description>TBD</description>
                <priority>18</priority>
            </ruleset-component>
            <ruleset-component id="ApplyWorkOrderItemAllocationRuleset" type="Ruleset">
                <name>ApplyWorkOrderItemAllocationRuleset</name>
                <description>TBD</description>
                <priority>19</priority>
            </ruleset-component>
            <ruleset-component id="DailyRule" type="Rule">
                <name>DailyRule</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>20</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeRuleset" type="Ruleset">
                <name>Weekly OverTime Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>21</priority>
            </ruleset-component>
            <ruleset-component id="BonusRuleset" type="Ruleset">
                <name>Bonus Ruleset</name>
                <description>Inserts any employee or cost center position associated bonuses</description>
                <priority>22</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriod_Weekly_And_PayGroup_Related_Rules" type="Ruleset">
                <name>PayPeriod_Weekly_And_PayGroup_Related_Rules</name>
                <description>Ruleset containing Pay related rules</description>
                <priority>23</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRuleset" type="Ruleset">
                <name>Rate Set Ruleset</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>24</priority>
            </ruleset-component>
            <ruleset-component id="AuthorizationRuleset" type="Ruleset">
                <name>Authorization Ruleset</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>25</priority>
            </ruleset-component>
            <ruleset-component id="SetManualOverrideDueToSchedOTRule" type="Rule">
                <name>SetManualOverrideDueToSchedOTRule</name>
                <description>This rule will set ManualCalc to true if there is overtime work record and pdate is a scheduled to be have overtime shift or absence. It is run as the last rule in NewStartOfDay ruleset, so that the overtime record will not be overwritten by DailyEdit/Timesheet</description>
                <priority>26</priority>
            </ruleset-component>
            <ruleset-component id="SetAdjustmentIndicatorForNonSwiperRuleset" type="Ruleset">
                <name>SetAdjustmentIndicatorForNonSwiperRuleset</name>
                <description>This is a wrapper ruleset of CreateAdjustmentForNonSwiperSCRuleset of which short circuit is true. This ruleset will prevent short circuit of  CreateAdjustmentForSwiperSCRuleset from short circuiting outer ruleset (SOD)</description>
                <priority>27</priority>
            </ruleset-component>
            <ruleset-component id="OTChargedAccrualRule" type="Rule">
                <name>OTChargedAccrualRule</name>
                <description>Will accrue overtime hours charged (i.e worked) if the DoOTChargedAccrual global variable is true.  The hours accrue into the EMP_BANK.OT_CHARGED database column.</description>
                <priority>28</priority>
            </ruleset-component>
            <ruleset-component id="CodeTypeCodeAdjustmentRuleset" type="Ruleset">
                <name>CodeTypeCodeAdjustmentRuleset</name>
                <description>CodeTypeCodeAdjustmentRuleset</description>
                <priority>29</priority>
            </ruleset-component>
            <ruleset-component id="OccurrenceAssignmentRule" type="Rule">
                <name>OccurrenceAssignmentRule</name>
                <description>OccurrenceAssignmentRule.</description>
                <priority>30</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="OvertimeForecastRuleset" is_short_circuit="True" sid="" type="Private">
            <ruleset-name>Overtime Forecast Ruleset</ruleset-name>
            <ruleset-description>The overtime forecast ruleset forecasts any overtime the employee might get paid if he/she is called-in to work on any given day outside his scheduled shift or absence.</ruleset-description>
            <ruleset-component id="ResetShiftRuleForForecastingRule" type="Rule">
                <name>Reset ShiftRule For Forecasting Rule</name>
                <description>resets the shift rule for forecasting</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRuleset" type="Ruleset">
                <name>Generic Lunch Ruleset</name>
                <description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="DailyTimeAllocationRuleset" type="Ruleset">
                <name>DailyTimeAllocationRuleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeForecastRuleset" type="Ruleset">
                <name>Weekly OverTime Forecast Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumRuleset" type="Ruleset">
                <name>Shift Premium Ruleset</name>
                <description>Applies the shift premiums based on the pre-defined premium zones.</description>
                <priority>5</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RecalculatePayrollRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Recalculate Payroll Ruleset</ruleset-name>
            <ruleset-description>Applies the recalculate payroll rules</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="SetENTExtentsToUnpaidRule" type="Rule">
                <name>SetENTExtentsToUnpaidRule</name>
                <description>SetENTExtentsToUnpaidRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="DayOffValidationRule" type="Rule">
                <name>DayOffValidation Rule</name>
                <description>validates day off rules for employee time</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="PreLunchRuleset" type="Ruleset">
                <name>Pre Lunch Ruleset</name>
                <description>Resets any existing Lunches/Breaks to a default state in preparation for the Lunch/Break rule.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborRule" type="Rule">
                <name>Adjust Labor Rule</name>
                <description>Adjust labor records as per the payroll&apos;s off_time</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="GraceRuleset" type="Ruleset">
                <name>Grace Ruleset</name>
                <description>Defines certain windows around a shift start and/or a shift end in which employees can come late/early and/or leave late/early and be paid or not.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="TimeRoundingRuleset" type="Ruleset">
                <name>Time Rounding Ruleset</name>
                <description>Applies the time rounding rules to the employee_s records.</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="FlexShiftRule" type="Rule">
                <name>FlexShiftRule</name>
                <description>Concept: This is similar to Start Swing Rule.  Following are the side effects of this rule:   1. If an employee clocks ON during the flex time, they will not be docked for late arrival.   2. If an employee clocks ON after the start of shift and outside of the flex window, the Arrived Late rule will be applied from the end of the flex window.  Pre-Condition: SHIFT.FLEXI_SHIFT  must be set to &apos;T&apos;.    This rule adjusts the payroll.ACTUAL_SHIFT&apos;s ON TIME and OFF TIME.</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="InsertLostTimeRuleset" type="Ruleset">
                <name>Insert Lost Time Ruleset</name>
                <description>Inserts the appropriate system Unpaid Codes(Missing Time Codes) like LT(Arrived Late), LL(Long Lunch) or LE(Left Early).</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRuleset" type="Ruleset">
                <name>Generic Lunch Ruleset</name>
                <description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="RoundingDurationAllRuleset" type="Ruleset">
                <name>RoundingDurationAllRuleset</name>
                <description>RoundingDurationAllRuleset</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="NewDeductAbsencesFromUnPaidRuleset" type="Ruleset">
                <name>DeductAbsencesFromUnPaidRuleset(New)</name>
                <description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="UNPExcessDeductionWhenNoBreakRule" type="Rule">
                <name>UNPExcessDeductionWhenNoBreakRule</name>
                <description>This rule will deletes the excess &apos;LE&apos; or &apos;LT&apos; hours when employee has no break or lunch.</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="DailyTimeAllocationRuleset" type="Ruleset">
                <name>DailyTimeAllocationRuleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeRuleset" type="Ruleset">
                <name>Weekly Overtime Allocation Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>16</priority>
            </ruleset-component>
            <ruleset-component id="CallInRuleset" type="Ruleset">
                <name>Call-In Ruleset</name>
                <description>Applies the minimum guaranteed amount of hours to an employee who has been called-in to work.</description>
                <priority>17</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriod_Weekly_And_PayGroup_Related_Rules" type="Ruleset">
                <name>PayPeriod_Weekly_And_PayGroup_Related_Rules</name>
                <description>Ruleset containing Pay related rules</description>
                <priority>18</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRuleset" type="Ruleset">
                <name>Rate Set Ruleset</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>19</priority>
            </ruleset-component>
            <ruleset-component id="AuthorizationRuleset" type="Ruleset">
                <name>Authorization Ruleset</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>20</priority>
            </ruleset-component>
            <ruleset-component id="OTChargedAccrualRule" type="Rule">
                <name>OTChargedAccrualRule</name>
                <description>Will accrue overtime hours charged (i.e worked) if the DoOTChargedAccrual global variable is true.  The hours accrue into the EMP_BANK.OT_CHARGED database column.</description>
                <priority>21</priority>
            </ruleset-component>
            <ruleset-component id="AdjustmentsRuleset" type="Ruleset">
                <name>AdjustmentsRuleset</name>
                <description>Determines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>22</priority>
            </ruleset-component>
            <ruleset-component id="CodeTypeCodeAdjustmentRuleset" type="Ruleset">
                <name>CodeTypeCodeAdjustmentRuleset</name>
                <description>CodeTypeCodeAdjustmentRuleset</description>
                <priority>23</priority>
            </ruleset-component>
            <ruleset-component id="OccurrenceAssignmentRule" type="Rule">
                <name>OccurrenceAssignmentRule</name>
                <description>OccurrenceAssignmentRule.</description>
                <priority>24</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NoOverTimeRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>No Overtime Ruleset</ruleset-name>
            <ruleset-description>Manager do not get overtime when they do work over and beyond their scheduled hours in a day or the scheduled weekly hours in the week.</ruleset-description>
            <ruleset-component id="WorkedOnScheduledDayRule" type="Rule">
                <name>Worked On Scheduled Day Rule</name>
                <description>This predicate rule determines whether the employee has worked according to his/her scheduled shift.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="NoOverTimeRule" type="Rule">
                <name>No Overtime Rule</name>
                <description>Applies no overtime to employee record</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="UnAuthorizedAbsenceNotificationRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>UnAuthorizedAbsenceNotificationRuleset</ruleset-name>
            <ruleset-description>This rule sends a notification to the user about employees who are on unexptected absence.</ruleset-description>
            <ruleset-component id="IsUnAuthorizedAbsenceRule" type="Rule">
                <name>IsUnAuthorizedAbsenceRule</name>
                <description>This rule checks if the employee has an Unexpected Absence record. If true, the rule returns true.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UnAuthorizedAbsenceNotificationRule" type="Rule">
                <name>UnAuthorizedAbsenceNotificationRule</name>
                <description>This rule sends a notification to the user if the employee has an UnAuthorized(UA) absence worked extent for the given pdate.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="RemoveUserInsertedAbsenceExtentRule" type="Rule">
                <name>RemoveUserInsertedAbsenceExtentRule</name>
                <description>Removes user inserted absence extent (worked id with a value of is less than or equal to 0)</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PaidMilitaryLeaveRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Paid Military Leave Ruleset</ruleset-name>
            <ruleset-description>determines if an employee is eligible for paid military leave</ruleset-description>
            <ruleset-component id="PaidMilitaryLeaveRule" type="Rule">
                <name>Paid Military Leave Rule</name>
                <description>This is a custom rule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PublicHolidayRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Public Holiday Ruleset</ruleset-name>
            <ruleset-description>determines if selected date is a public holiday</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="HolidayEligibilityRule" type="Rule">
                <name>Holiday Eligibility Rule</name>
                <description>determines if an employee is eligible for holiday pay</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RateSetRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Rate Set Ruleset</ruleset-name>
            <ruleset-description>Applies the rate set rule to the employee_s records.</ruleset-description>
            <ruleset-component id="SetRecordsWithUnpaidCCPToUnpaidRule" type="Rule">
                <name>SetRecordsWithUnpaidCCPToUnpaidRule</name>
                <description>SetRecordsWithUnpaidCCPToUnpaidRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRule" type="Rule">
                <name>Rate Set Rule</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumRuleset" type="Ruleset">
                <name>Shift Premium Ruleset</name>
                <description>Applies the shift premiums based on the pre-defined premium zones.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="RateFactorRule" type="Rule">
                <name>Rate Factor Rule</name>
                <description>Applies the pre-defined overtime percentages to the rates of the employee_s work records.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="AverageRateOvertimeRule" type="Rule">
                <name>AverageRateOvertimeRule</name>
                <description>AverageRateOvertimeRule</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="SetBaseRateToStdRateRule" type="Rule">
                <name>SetBaseRateToStdRateRule</name>
                <description>Sets the standard rate for all work records with the employees effective rate.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="BankingRuleset" type="Ruleset">
                <name>BankingRuleset</name>
                <description>BankingRuleset</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>8</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ReadClockDataRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Read Clock Data Ruleset</ruleset-name>
            <ruleset-description>Applies the read clock data rules</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ChangeShiftTo80Rule" type="Rule">
                <name>ChangeShiftTo80Rule</name>
                <description>In certain cases, when clock data is loaded, the actual shift is left as zero, rather than being changed to 80. This rule will determine if the actual shift is 0 and there is worked time on the day and, if so, it will change the actual shift to 80. This is added to the beginning of the ReadClockDataRuleset.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ResetPayrollOffTimeOnShift80Rule" type="Rule">
                <name>ResetPayrollOffTimeOnShift80Rule</name>
                <description>ResetPayrollOffTimeOnShift80Rule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="ResetPdateOnShift80ApplyDayCutOffOnlyRule" type="Rule">
                <name>ResetPdateOnShift80ApplyDayCutOffOnlyRule</name>
                <description>Resets the pdate of a payroll record with actual shift 80 by considering the Day Cut Off Time only. (Not considering both the Day Cut Off Time and the Time Before Shift global variables setting)</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="AutoShiftGroupOnlyOnShift80Rule" type="Rule">
                <name>AutoShiftGroupOnlyOnShift80Rule</name>
                <description>This rule applies auto shift group functionality when the actual shift is 80.  It will look for all shifts in auto shift group defined in the GV.Rules.AutoShiftGroupOnlyOnShift80Rule.Number and find the shift with the closest start time if the value of the GV is greater than 0</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="SetOpenShiftDurationRule" type="Rule">
                <name>SetOpenShiftDurationRule</name>
                <description>If value &gt; 0 the "SetOpenShiftDurationRule" will set the duration to indicated value when a employee clocks On to open shift.  If left at 0 the default behavior sets the duration to 08:00  hours.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="ForceShift80ToShiftXRule" type="Rule">
                <name>ForceShift80ToShiftXRule</name>
                <description>This Rule will change a Shift 80 to a different shift as per the GV.NewShiftNumber value if the GV.ForceShift80ToShiftXRule is True</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="RemoveZeroDurationUARule" type="Rule">
                <name>RemoveZeroDurationUARule</name>
                <description>Remove the first UA record that has a duration of null or 0 hours</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="SetENTExtentsToUnpaidRule" type="Rule">
                <name>SetENTExtentsToUnpaidRule</name>
                <description>SetENTExtentsToUnpaidRule</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="PreLunchRuleset" type="Ruleset">
                <name>Pre Lunch Ruleset</name>
                <description>Resets any existing Lunches/Breaks to a default state in preparation for the Lunch/Break rule.</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborRule" type="Rule">
                <name>Adjust Labor Rule</name>
                <description>Adjust labor records as per the payroll's off_time</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="GraceRuleset" type="Ruleset">
                <name>Grace Ruleset</name>
                <description>Defines certain windows around a shift start and/or a shift end in which employees can come late/early and/or leave late/early and be paid or not.</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="TimeRoundingWorkRuleset" type="Ruleset">
                <name>TimeRoundingWorkRuleset</name>
                <description>TimeRoundingWorkRuleset</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="FlexShiftRule" type="Rule">
                <name>FlexShiftRule</name>
                <description>Concept: This is similar to Start Swing Rule.  Following are the side effects of this rule:   1. If an employee clocks ON during the flex time, they will not be docked for late arrival.   2. If an employee clocks ON after the start of shift and outside of the flex window, the Arrived Late rule will be applied from the end of the flex window.  Pre-Condition: SHIFT.FLEXI_SHIFT  must be set to 'T'.    This rule adjusts the payroll.ACTUAL_SHIFT's ON TIME and OFF TIME.</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="InsertLostTimeRuleset" type="Ruleset">
                <name>Insert Lost Time Ruleset</name>
                <description>Inserts the appropriate system Unpaid Codes(Missing Time Codes) like LT(Arrived Late), LL(Long Lunch) or LE(Left Early).</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRuleset" type="Ruleset">
                <name>Generic Lunch Ruleset</name>
                <description>Inserts any pre-defined breaks/lunches to employee's work time.</description>
                <priority>16</priority>
            </ruleset-component>
            <ruleset-component id="RoundingDurationAllRuleset" type="Ruleset">
                <name>RoundingDurationAllRuleset</name>
                <description>RoundingDurationAllRuleset</description>
                <priority>17</priority>
            </ruleset-component>
            <ruleset-component id="NewDeductAbsencesFromUnPaidRuleset" type="Ruleset">
                <name>DeductAbsencesFromUnPaidRuleset(New)</name>
                <description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</description>
                <priority>18</priority>
            </ruleset-component>
            <ruleset-component id="UNPExcessDeductionWhenNoBreakRule" type="Rule">
                <name>UNPExcessDeductionWhenNoBreakRule</name>
                <description>This rule will deletes the excess 'LE' or 'LT' hours when employee has no break or lunch.</description>
                <priority>19</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>20</priority>
            </ruleset-component>
            <ruleset-component id="DailyTimeAllocationRuleset" type="Ruleset">
                <name>Daily Time Allocation Ruleset</name>
                <description>Distributes employees' worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>21</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeRuleset" type="Ruleset">
                <name>Weekly Overtime Allocation Ruleset</name>
                <description>Distributes employees' worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>22</priority>
            </ruleset-component>
            <ruleset-component id="CallInRuleset" type="Ruleset">
                <name>Call-In Ruleset</name>
                <description>Applies the minimum guaranteed amount of hours to an employee who has been called-in to work.</description>
                <priority>23</priority>
            </ruleset-component>
            <ruleset-component id="BonusRuleset" type="Ruleset">
                <name>Bonus Ruleset</name>
                <description>Inserts any employee or cost center position associated bonuses</description>
                <priority>24</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriod_Weekly_And_PayGroup_Related_Rules" type="Ruleset">
                <name>PayPeriod_Weekly_And_PayGroup_Related_Rules</name>
                <description>Ruleset containing Pay related rules</description>
                <priority>25</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRuleset" type="Ruleset">
                <name>Rate Set Ruleset</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>26</priority>
            </ruleset-component>
            <ruleset-component id="AuthorizationRuleset" type="Ruleset">
                <name>Authorization Ruleset</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>27</priority>
            </ruleset-component>
            <ruleset-component id="OTChargedAccrualRule" type="Rule">
                <name>OTChargedAccrualRule</name>
                <description>Will accrue overtime hours charged (i.e worked) if the DoOTChargedAccrual global variable is true.  The hours accrue into the EMP_BANK.OT_CHARGED database column.</description>
                <priority>28</priority>
            </ruleset-component>
            <ruleset-component id="CodeTypeCodeAdjustmentRuleset" type="Ruleset">
                <name>CodeTypeCodeAdjustmentRuleset</name>
                <description>CodeTypeCodeAdjustmentRuleset</description>
                <priority>29</priority>
            </ruleset-component>
            <ruleset-component id="AdjustmentsRuleset" type="Ruleset">
                <name>AdjustmentsRuleset</name>
                <description>Determines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>30</priority>
            </ruleset-component>
            <ruleset-component id="SetPayrollRecalcStatusRuleset" type="Ruleset">
                <name>SetPayrollRecalcStatusRuleset</name>
                <description>Set Payroll Recalc status.</description>
                <priority>31</priority>
            </ruleset-component>
            <ruleset-component id="OccurrenceAssignmentRule" type="Rule">
                <name>OccurrenceAssignmentRule</name>
                <description>OccurrenceAssignmentRule.</description>
                <priority>32</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RemoveBankingRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Remove Banking Ruleset</ruleset-name>
            <ruleset-description>removes banking values ruleset</ruleset-description>
            <ruleset-component id="RemoveBNKWorkedRecordRule" type="Rule">
                <name>Remove BNK Worked Record Rule</name>
                <description>Resets any banked overtime records to a default state in preparation for the Banking Rule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RemoveLatenessAbsenceRecordRuleset" is_short_circuit="False" sid="" type="Private">
            <ruleset-name>RemoveLatenessAbsenceRecordRuleset</ruleset-name>
            <ruleset-description>removes the banking values from the employee_s records.</ruleset-description>
            <ruleset-component id="RemoveLatenessAbsenceRecordRule" type="Rule">
                <name>Remove Lateness Absence Record Rule</name>
                <description>Removes the lateness absence record from the employee&apos;s records.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRule" type="Rule">
                <name>Accrual Cascade Rule</name>
                <description>Accrual Cascade rule handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SelfTreatedIllnessRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Self Treated Illness Ruleset</ruleset-name>
            <ruleset-description>Applies the self treated illness rules to the employee_s records.</ruleset-description>
            <ruleset-component id="ManagerSelfTreatedIllnessRule" type="Rule">
                <name>Manager Self Treated Illness Rule</name>
                <description>Applies the self treated illness rule for manager class employees</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="NonManagerSelfTreatedIllnessRule" type="Rule">
                <name>Non Manager Self TreatedIl lness Rule</name>
                <description>This is a deprecated custom rule.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SetPayrollCalendarInfoRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Set Payroll Calendar Infomation Ruleset</ruleset-name>
            <ruleset-description>Payroll processinging system requires certain payroll information to be processd with each worked detail when the paycheck is produced.</ruleset-description>
            <ruleset-component id="SetPayrollCalendarInfoRule" type="Rule">
                <name>Set Payroll Calendar Info Rule</name>
                <description>This is a deprecated custom rule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ShiftPremiumRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Shift Premium Ruleset</ruleset-name>
            <ruleset-description>Applies the shift premiums based on the pre-defined premium zones.</ruleset-description>
            <ruleset-component id="SetScheduledShiftOnHolidayRule" type="Rule">
                <name>SetScheduledShiftOnHolidayRule</name>
                <description>Resets the scheduled shift based on the employees roster in the case of public holidays so that rules and reports that depend on the payroll records scheduled shift will work and display correctly.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ResetPremiumRule" type="Rule">
                <name>ResetPremiumRule</name>
                <description>Initializes the shift premium for an employee work records to 0</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumRule" type="Rule">
                <name>Shift Premium Rule</name>
                <description>Applies shift premium to employee&apos;s payroll/worked extents.   Premium zones pay shift premiums for hours worked between defined start and end times for given days of the week. Each Shift can have zero or more shift prezium zones associated. If two or more premuim zones overlap within a single shift, the employee will be paid for both premiums. Shift premiums are either a flat rate added to the employee&apos;s rate or a percentage increase above his rate.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumMajorityHoursRule" type="Rule">
                <name>Shift Premium Majority Hours Rule</name>
                <description>The Rule, if enabled, will basically evaluate the percentage of the worked hours that have premium hours (either AM premium hours or PM Premium hours) and if the percentage exceeds 50% it will apply the premium hours to all worked hours.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="CTCShiftPremiumRuleset" type="Ruleset">
                <name>CTCShiftPremiumRuleset</name>
                <description>CTCShiftPremiumRuleset</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumOnAbsenceRuleset" type="Ruleset">
                <name>ShiftPremiumOnAbsenceRuleset</name>
                <description>A shift premium calculation for an employee on absence records. It can be added before ShiftPremiumFactorRule in ShiftPremiumRuleset.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumFactorRule" type="Rule">
                <name>ShiftPremiumFactorRule</name>
                <description>Applies the pre-defined overtime percentages to the shift premium rates of the employee_s work records. It must run after ShiftPremiumRule</description>
                <priority>7</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SwingRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Swing Ruleset</ruleset-name>
            <ruleset-description>Allows for a window of time can come to work without being docket.</ruleset-description>
            <ruleset-component id="StartSwingRule" type="Rule">
                <name>Start Swing Rule</name>
                <description>The StartSwingRule allows for a window of time that an employee can come to work without being docked late. What this rule essentially does is adjust the  * PAYROLL.ACTUAL_SHIFT&apos;s ON TIME. This new ontime affects Grace/Rounding and InsertLostTime rules. There are basically 2 swing types:  1. Full Swing - where the employee can swing on Pre-Start shift time (early arrival) and on Post-Start shift time (post arrival).  2. Half Swing - where the employee can swing on Post-Start Shift time only (post arrival).</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="StartGraceRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Start Grace Ruleset</ruleset-name>
            <ruleset-description>Applies the start grace period rules to the employee_s records.</ruleset-description>
            <ruleset-component id="PaidStartGraceRule" type="Rule">
                <name>Paid Start Grace Rule</name>
                <description>If an employee came to work early on a normal work day and is within the start paid grace window, the worked actual on time will be forced to the shift on time thus being paid for the late duration.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UnPaidStartGraceRule" type="Rule">
                <name>UnPaid Start Grace Rule</name>
                <description>If an employee came to work early on a normal work day and is within the start unpaid grace window, the actual on time will be forced to the shift on time thus not being paid for the pre shift duration. This is a structured/parameter based rule.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="TestRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Test Ruleset</ruleset-name>
            <ruleset-description>Applies test definitions</ruleset-description>
            <ruleset-component id="WorkedOnScheduledDayRule" type="Rule">
                <name>Worked On Scheduled Day Rule</name>
                <description>This predicate rule determines whether the employee has worked according to his/her scheduled shift.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="TestRule" type="Rule">
                <name>Test Rule</name>
                <description>This rule has no side effect. Used for testing purposes only.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="TimeRoundingRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Time Rounding Ruleset</ruleset-name>
            <ruleset-description>Applies the time rounding rules to the employee_s records.</ruleset-description>
            <ruleset-component id="TimeRoundingWorkRuleset" type="Ruleset">
                <name>TimeRoundingWorkRuleset</name>
                <description>TimeRoundingWorkRuleset</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="WeeklyOverTimeForecastRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Weekly Overtime Forecast Ruleset</ruleset-name>
            <ruleset-description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</ruleset-description>
            <ruleset-component id="WeeklyOverTimeForecastRule" type="Rule">
                <name>Weekly OverTime Forecast Rule</name>
                <description>Forecasts the weekly overtime the employee will have, for scheduling decisions.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="WeeklyOverTimeRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Weekly Overtime Ruleset</ruleset-name>
            <ruleset-description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</ruleset-description>
            <ruleset-component id="WeeklyOverTimeRule" type="Rule">
                <name>Weekly Overtime Rule</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="WorkedOnScheduledDayRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Worked On Scheduled Day Ruleset</ruleset-name>
            <ruleset-description> Applies the worked on a scheduled day rules to the employee_s records..</ruleset-description>
            <ruleset-component id="WorkedOnScheduledDayRule" type="Rule">
                <name>Worked On Scheduled Day Rule</name>
                <description>This predicate rule determines whether the employee has worked according to his/her scheduled shift.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="WorkflowAuthorizationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Workflow Authorization Ruleset</ruleset-name>
            <ruleset-description>Applies the workflow authorization rules to an employee_s records.</ruleset-description>
            <ruleset-component id="WorkflowAuthorizationRule" type="Rule">
                <name>Workflow Authorization Rule</name>
                <description>This rule approves a payroll extent and sets the approvedBy value to &apos;Workflow&apos;.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="WorkflowUnAuthorizationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Workflow UnAuthorization Ruleset</ruleset-name>
            <ruleset-description>Applies the workflow unauthorization rules to an employee_s records.</ruleset-description>
            <ruleset-component id="WorkflowUnAuthorizationRule" type="Rule">
                <name>WorkflowUnAuthorizationRule</name>
                <description>This rule unapproves a payroll extent and sets the approvedBy value to &apos;Workflow&apos;.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ZeroRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Zero Ruleset</ruleset-name>
            <ruleset-description>Applies the zero rules to the employee_s records.</ruleset-description>
            <ruleset-component id="ZeroRule" type="Rule">
                <name>Zero Rule</name>
                <description>This rule has zero side effect. This rule is for test purposes only.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PayrollProcessRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PayrollProcess Ruleset</ruleset-name>
            <ruleset-description>Executes the payroll rules for pay groups</ruleset-description>
            <ruleset-component id="PayrollProcessRule" type="Rule">
                <name>Payroll Process Rule</name>
                <description>Applies the pre-defined payroll processing rules when generating a payroll output file.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="UnapprovePayrollAtCreationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>UnapprovePayrollAtCreationRuleset</ruleset-name>
            <ruleset-description>UnapprovePayrollAtCreationRuleset</ruleset-description>
            <ruleset-component id="UnapprovePayrollAtCreationRule" type="Rule">
                <name>UnapprovePayrollAtCreationRule</name>
                <description>UnapprovePayrollAtCreationRule</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SchedShiftToOpenShiftAsgmtRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>SchedShiftToOpenShiftAsgmt Ruleset</ruleset-name>
            <ruleset-description>modifies the schdule shift to open shift assigment for the employee_s records.</ruleset-description>
            <ruleset-component id="SchedShiftToOpenShiftAsgmtRule" type="Rule">
                <name>SchedShiftToOpenShiftAsgmt Rule</name>
                <description>Assigns the employee&apos;s scheduled shift to the payroll extent when employee works on an open shift.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustWorkedRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AdjustWorkedRuleset</ruleset-name>
            <ruleset-description>This ruleset adjusts worked records based on whether the absences are time based or duration based.</ruleset-description>
            <ruleset-component id="AdjustLaborWithOverlappingAbsencesRuleset" type="Ruleset">
                <name>Adjust Labor With Overlapping Absences Ruleset</name>
                <description>Adjusts labor with overlapping absence</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="DeductDurationAbsFromUNPRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>DeductDurationAbsFromUNPRuleset</ruleset-name>
            <ruleset-description>This ruleset deducts absence hours(duration based only) for any UNP hours.</ruleset-description>
            <ruleset-component id="NewDeductAbsencesFromUnPaidRuleset" type="Ruleset">
                <name>DeductAbsencesFromUnPaidRuleset(New)</name>
                <description>No Description</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustOverlappingLLForAbsRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AdjustOverlappingLLForAbsRuleset</ruleset-name>
            <ruleset-description>This ruleset removes any LL records that may overlap with time based absences</ruleset-description>
        </ruleset>
        <ruleset id="ShiftPremiumFactorRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>ShiftPremiumFactorRuleset</ruleset-name>
            <ruleset-description>ShiftPremiumFactorRuleset</ruleset-description>
            <ruleset-component id="ShiftPremiumFactorRule" type="Rule">
                <name>ShiftPremiumFactorRule</name>
                <description>Applies the pre-defined overtime percentages to the shift premium rates of the employee_s work records. It must run after ShiftPremiumRule</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="BonusAdjustmentRuleSet" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>BonusAdjustmentRuleSet</ruleset-name>
            <ruleset-description>BonusAdjustmentRuleSet</ruleset-description>
            <ruleset-component id="BonusAdjustmentRule" type="Rule">
                <name>BonusAdjustmentRule</name>
                <description>Sets the hours of an adjustment bonus always to 01:00, so that its rate reflects the total dollar amount.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PayPeriodEndReminderRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PayPeriodEndReminderRuleset</ruleset-name>
            <ruleset-description>PayPeriodEndReminderRuleset</ruleset-description>
            <ruleset-component id="PayPeriodEndReminderRule" type="Rule">
                <name>PayPeriodEndReminderRule</name>
                <description>This is a deprecated custom rule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="IsSwiperRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>IsSwiperRuleset</ruleset-name>
            <ruleset-description>This ruleset determines if an employee is a swiper or not.</ruleset-description>
            <ruleset-component id="IsSwiperRule" type="Rule">
                <name>IsSwiperRule</name>
                <description>This rule determines if an employee is a swiper or not based on employee groups. There is a global property &apos;PayToSchedEmpGroups&apos;  that lists the employee groups for pay-to-schedule employees. Employees belonging to employee groups NOT in this list are all swipers.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="DefaultShiftRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>DefaultShiftRuleset</ruleset-name>
            <ruleset-description>DefaultShiftRuleset</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleDefinitionRule" type="Rule">
                <name>Use Employee ShiftRule Definition Rule</name>
                <description>This rule set the rulesetcontext&apos;s shift rule definition to employee&apos;s default shift rule.  What this means is that all pay calculation rules like DailyRule, WeeklyOvertimeRule, BankingRule, Call-InRule etc. will use the shift rule associated with employee (instead of the shift rule associated with shift) for calculation purposes.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ApplyHourAllocationsForCustomDayTypesRule" type="Rule">
                <name>ApplyHourAllocationsForCustomDayTypesRule</name>
                <description>Apply custom day types from the hour allocation</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="SetENTExtentsToUnpaidRule" type="Rule">
                <name>SetENTExtentsToUnpaidRule</name>
                <description>SetENTExtentsToUnpaidRule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="RemoveExceptionRule" type="Rule">
                <name>RemoveExceptionRule</name>
                <description>RemoveExceptionRule</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="AdjustTimesForUAExtentNonSCRuleset" type="Ruleset">
                <name>AdjustTimesForUAExtentNonSCRuleset</name>
                <description>This is a non-short circuit ruleset for AdjustTimesForUAExtentRuleset.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="ResetShiftRuleForForecastingRule" type="Rule">
                <name>Reset ShiftRule For Forecasting Rule</name>
                <description>resets the shift rule for forecasting</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="AdjustPayrollTimesRule" type="Rule">
                <name>Adjust Payroll Times Rule</name>
                <description>Adjust labor records as per the payroll&apos;s on and off_times</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborRule" type="Rule">
                <name>Adjust Labor Rule</name>
                <description>Adjust labor records as per the payroll&apos;s off_time</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="SetAdjustmentIndicatorForSwiperRuleset" type="Ruleset">
                <name>SetAdjustmentIndicatorForSwiperRuleset</name>
                <description>This is a wrapper ruleset of CreateAdjustmentForSwiperSCRuleset of which short circuit is true. This ruleset will prevent short circuit of  CreateAdjustmentForSwiperSCRuleset from short circuiting outer ruleset (SOD)</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="HolidayProcessingForSODNonSCRuleset" type="Ruleset">
                <name>HolidayProcessingForSODNonSCRuleset</name>
                <description>This ruleset allows the holiday processing to take place during Start Of Day if enabled from the global variable Rules.HolidayProcessingFromSODRule.Enabled</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="UnAuthorizedAbsenceRule" type="Rule">
                <name>UnAuthorized Absence Rule</name>
                <description>Applies the unauthorized absence rule to the employee_s records.</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="GenericLunchRulesetForSOD" type="Ruleset">
                <name>GenericLunchRulesetForSOD</name>
                <description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="AdjustWorkedRuleset" type="Ruleset">
                <name>AdjustWorkedRuleset</name>
                <description>This ruleset adjusts worked records based on whether the absences are time based or duration based.</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="SchedulePeriodOverrideRuleset" type="Ruleset">
                <name>SchedulePeriodOverrideRuleset</name>
                <description>TBD</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="JobAllocationRuleset" type="Ruleset">
                <name>JobAllocationRuleset</name>
                <description>TBD</description>
                <priority>16</priority>
            </ruleset-component>
            <ruleset-component id="ApplyWorkOrderItemAllocationRuleset" type="Ruleset">
                <name>ApplyWorkOrderItemAllocationRuleset</name>
                <description>TBD</description>
                <priority>17</priority>
            </ruleset-component>
            <ruleset-component id="DailyRule" type="Rule">
                <name>DailyRule</name>
                <description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages. i.e. (hours up to 8 are REG @ 100%, greater than 8 and up to 12 are OT1 @ 150% etc.)</description>
                <priority>18</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyOverTimeRuleset" type="Ruleset">
                <name>Weekly OverTime Ruleset</name>
                <description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</description>
                <priority>19</priority>
            </ruleset-component>
            <ruleset-component id="BonusRuleset" type="Ruleset">
                <name>Bonus Ruleset</name>
                <description>Inserts any employee or cost center position associated bonuses</description>
                <priority>20</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriod_Weekly_And_PayGroup_Related_Rules" type="Ruleset">
                <name>PayPeriod_Weekly_And_PayGroup_Related_Rules</name>
                <description>Ruleset containing Pay related rules</description>
                <priority>21</priority>
            </ruleset-component>
            <ruleset-component id="RateSetRuleset" type="Ruleset">
                <name>Rate Set Ruleset</name>
                <description>Applies the rate set rule to the employee_s records.</description>
                <priority>22</priority>
            </ruleset-component>
            <ruleset-component id="AuthorizationRuleset" type="Ruleset">
                <name>Authorization Ruleset</name>
                <description>Sets the default (system) authorization status of the payroll records</description>
                <priority>23</priority>
            </ruleset-component>
            <ruleset-component id="SetManualOverrideDueToSchedOTRule" type="Rule">
                <name>SetManualOverrideDueToSchedOTRule</name>
                <description>This rule will set ManualCalc to true if there is overtime work record and pdate is a scheduled to be have overtime shift or absence. It is run as the last rule in NewStartOfDay ruleset, so that the overtime record will not be overwritten by DailyEdit/Timesheet</description>
                <priority>24</priority>
            </ruleset-component>
            <ruleset-component id="SetAdjustmentIndicatorForNonSwiperRuleset" type="Ruleset">
                <name>SetAdjustmentIndicatorForNonSwiperRuleset</name>
                <description>This is a wrapper ruleset of CreateAdjustmentForNonSwiperSCRuleset of which short circuit is true. This ruleset will prevent short circuit of  CreateAdjustmentForSwiperSCRuleset from short circuiting outer ruleset (SOD)</description>
                <priority>25</priority>
            </ruleset-component>
            <ruleset-component id="OTChargedAccrualRule" type="Rule">
                <name>OTChargedAccrualRule</name>
                <description>Will accrue overtime hours charged (i.e worked) if the DoOTChargedAccrual global variable is true. The hours accrue into the EMP_BANK.OT_CHARGED database column.</description>
                <priority>26</priority>
            </ruleset-component>
            <ruleset-component id="CodeTypeCodeAdjustmentRuleset" type="Ruleset">
                <name>CodeTypeCodeAdjustmentRuleset</name>
                <description>CodeTypeCodeAdjustmentRuleset</description>
                <priority>27</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ConvertAnnualLeaveToSickRuleCrit" is_short_circuit="True" sid="" type="Private">
            <ruleset-name>ConvertAnnualLeaveToSickRuleCriteria</ruleset-name>
            <ruleset-description>A</ruleset-description>
            <ruleset-component id="AnnualLeaveConversionToSickRuleset" type="Ruleset">
                <name>AnnualLeaveConversionToSickRuleset</name>
                <description>Converts the annual leave to sick leav.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CompTimeExpiryRuleCriteria" is_short_circuit="True" sid="" type="Private">
            <ruleset-name>CompTimeExpiryRuleCriteria</ruleset-name>
            <ruleset-description>A</ruleset-description>
            <ruleset-component id="CompTimeExpiryRuleset" type="Ruleset">
                <name>CompTimeExpiryRule</name>
                <description>CompTimeExpiryRule</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PublicHolidayEntitlementRuleCrit" is_short_circuit="True" sid="" type="Private">
            <ruleset-name>PublicHolidayEntitlementRuleCriteria</ruleset-name>
            <ruleset-description>A</ruleset-description>
            <ruleset-component id="PublicHolidayEntitlementRuleset" type="Ruleset">
                <name>PublicHolidayEntitlement Ruleset</name>
                <description>PublicHolidayEntitlementRuleset</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="UnauthorizeWhenHoursGreaterThanScheduledRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>UnauthorizeWhenHoursGreaterThanScheduledRuleset</ruleset-name>
            <ruleset-description>unauthorized a record that was approved by autopoll if worked more than scheduled hours</ruleset-description>
            <ruleset-component id="UnauthorizeWhenHoursGreaterThanScheduledRule" type="Rule">
                <name>UnauthorizeWhenHoursGreaterThanScheduledRule</name>
                <description>This rule will unauthorized a record that was approved by autopoll if worked hours is more than scheduled hours.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RoundingDurationAbsencesRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>RoundingDurationAbsencesRuleset</ruleset-name>
            <ruleset-description>Applies the absence rounding for duration and time pair absences</ruleset-description>
            <ruleset-component id="RoundingDurationAbsencesRule" type="Rule">
                <name>RoundingDurationAbsencesRule</name>
                <description>This rule check to see if the hour allocation round or split values are set.  If they are then it will round the last absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is a time-pair based absence</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AdjustAbsencesByDurationRule" type="Rule">
                <name>AdjustAbsencesByDurationRule</name>
                <description>This rule adjust the off times of the absence records to on time plus hours.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="BreakRoundingRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>BreakRoundingRuleset</ruleset-name>
            <ruleset-description>BreakRoundingRuleset</ruleset-description>
            <ruleset-component id="BreakStartRoundingRule" type="Rule">
                <name>BreakStartRoundingRule</name>
                <description>Applies rounding to on times of a break extent.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="BreakEndRoundingRule" type="Rule">
                <name>BreakEndRoundingRule</name>
                <description>Applies rounding to off times of a break extent.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AdjustLaborWithBreakRule" type="Rule">
                <name>AdjustLaborWithBreakRule</name>
                <description>This rule adjusts labor extent according to break extent.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="AdjustAbsenceWithBreakRuleset" type="Ruleset">
                <name>AdjustAbsenceWithBreakRuleset</name>
                <description>AdjustAbsenceWithBreakRuleset</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="FillBreakGapRule" type="Rule">
                <name>FillBreakGapRule</name>
                <description>Adjusts the worked records that surround the break.</description>
                <priority>5</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustAbsenceWithBreakRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjustAbsenceWithBreakRuleset</ruleset-name>
            <ruleset-description>AdjustAbsenceWithBreakRuleset</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is a timepair based absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustAbsenceWithBreakRule" type="Rule">
                <name>AdjustAbsenceWithBreakRule</name>
                <description>This rule adjusts absence extent according to break extend. It will run only in time-paired based absent site</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RoundingDurationAllRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>RoundingDurationAllRuleset</ruleset-name>
            <ruleset-description>RoundingDurationAllRuleset</ruleset-description>
            <ruleset-component id="RoundingDurationAllRule" type="Rule">
                <name>RoundingDurationAllRule</name>
                <description>RoundingDurationAllRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlapLaborAfterRoundingAllRule" type="Rule">
                <name>AdjustOverlapLaborAfterRoundingAllRule</name>
                <description>AdjustOverlapLaborAfterRoundingAllRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlapAbsenceAfterRoundingAllRuleset" type="Ruleset">
                <name>AdjustOverlapAbsenceAfterRoundingAllRuleset</name>
                <description>AdjustOverlapAbsenceAfterRoundingAllRuleset</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="AdjustNegativeTimesRule" type="Rule">
                <name>AdjustNegativeTimesRule</name>
                <description>Adjust on and off time so the ontime is always on or before offTime</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustOverlapAbsenceAfterRoundingAllRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjustOverlapAbsenceAfterRoundingAllRuleset</ruleset-name>
            <ruleset-description>AdjustOverlapAbsenceAfterRoundingAllRuleset</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is a timepair based absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlapAbsenceAfterRoundingAllRule" type="Rule">
                <name>AdjustOverlapAbsenceAfterRoundingAllRule</name>
                <description>AdjustOverlapAbsenceAfterRoundingAllRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="DeductTimePairAbsencesFromUnpaidRule" type="Rule">
                <name>DeductTimePairAbsencesFromUnpaidRule</name>
                <description>DeductTimePairAbsencesFromUnpaidRule</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RoundingDurationRegAndOTRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>RoundingDurationRegAndOTRuleset</ruleset-name>
            <ruleset-description>RoundingDurationRegAndOTRuleset</ruleset-description>
            <ruleset-component id="RoundingDurationRegRule" type="Rule">
                <name>RoundingDurationRegRule</name>
                <description>RoundingDurationRegRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingLaborAfterRoundingRegRule" type="Rule">
                <name>AdjustOverlappingLaborAfterRoundingRegRule</name>
                <description>AdjustOverlappingLaborAfterRoundingRegRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="RoundingDurationOTRule" type="Rule">
                <name>RoundingDurationOTRule</name>
                <description>RoundingDurationOTRule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingLaborAfterRoundingOTRule" type="Rule">
                <name>AdjustOverlappingLaborAfterRoundingOTRule</name>
                <description>AdjustOverlappingLaborAfterRoundingOTRule</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlapAbsenceAfterRoundingRegRuleset" type="Ruleset">
                <name>AdjustOverlapAbsenceAfterRoundingRegRuleset</name>
                <description>AdjustOverlapAbsenceAfterRoundingRegRuleset</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlapAbsenceAfterRoundingOTRuleset" type="Ruleset">
                <name>AdjustOverlapAbsenceAfterRoundingOTRuleset</name>
                <description>AdjustOverlapAbsenceAfterRoundingOTRuleset</description>
                <priority>6</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustOverlapAbsenceAfterRoundingRegRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjustOverlapAbsenceAfterRoundingRegRuleset</ruleset-name>
            <ruleset-description>AdjustOverlapAbsenceAfterRoundingRegRuleset</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is a timepair based absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingAbsenceAfterRoundRegRule" type="Rule">
                <name>AdjustOverlappingAbsenceAfterRoundRegRule</name>
                <description>AdjustOverlappingAbsenceAfterRoundRegRule</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustOverlapAbsenceAfterRoundingOTRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjustOverlapAbsenceAfterRoundingOTRuleset</ruleset-name>
            <ruleset-description>AdjustOverlapAbsenceAfterRoundingOTRuleset</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is a timepair based absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingAbsenceAfterRoundingOTRule" type="Rule">
                <name>AdjustOverlappingAbsenceAfterRoundingOTRule</name>
                <description>AdjustOverlappingAbsenceAfterRoundingOTRule</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustTimesForUAExtentRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjustTimesForUAExtentRuleset</ruleset-name>
            <ruleset-description>Adjusts on and off times for UA extents if the absences are in time pair mode.</ruleset-description>
            <ruleset-component id="IsTimePairAbsenceRuleset" type="Ruleset">
                <name>IsTimePairAbsenceRuleset</name>
                <description>This rule checks if the absence extent must be processed in timepair mode or not.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustTimesForUAExtentRule" type="Rule">
                <name>AdjustTimesForUAExtentRule</name>
                <description>Adjusts UA extents on and off times</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustTimesForUAExtentNonSCRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AdjustTimesForUAExtentNonSCRuleset</ruleset-name>
            <ruleset-description>This is a non-short circuit ruleset for AdjustTimesForUAExtentRuleset.</ruleset-description>
            <ruleset-component id="AdjustTimesForUAExtentRuleset" type="Ruleset">
                <name>AdjustTimesForUAExtentRuleset</name>
                <description>Adjusts on and off times for UA extents if the absences are in time pair mode.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RoundingLLAllRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>RoundingLLAllRuleset</ruleset-name>
            <ruleset-description>RoundingLLAllRuleset</ruleset-description>
            <ruleset-component id="RoundingDurationLLAllRule" type="Rule">
                <name>RoundingDurationLLAllRule</name>
                <description>RoundingDurationLLAllRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingLaborAfterRoundingLLRule" type="Rule">
                <name>AdjustOverlappingLaborAfterRoundingLLRule</name>
                <description>AdjustOverlappingLaborAfterRoundingLLRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingAbsenceAfterRoundingLLRuleset" type="Ruleset">
                <name>AdjustOverlappingAbsenceAfterRoundingLLRuleset</name>
                <description>AdjustOverlappingAbsenceAfterRoundingLLRuleset</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustOverlappingAbsenceAfterRoundingLLRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjustOverlappingAbsenceAfterRoundingLLRuleset</ruleset-name>
            <ruleset-description>AdjustOverlappingAbsenceAfterRoundingLLRuleset</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence is a timepair based absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="DeductTimePairAbsencesFromUnpaidRule" type="Rule">
                <name>DeductTimePairAbsencesFromUnpaidRule</name>
                <description>DeductTimePairAbsencesFromUnpaidRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AdjustOverlappingAbsenceAfterRoundingLLRule" type="Rule">
                <name>AdjustOverlappingAbsenceAfterRoundingLLRule</name>
                <description>AdjustOverlappingAbsenceAfterRoundingLLRule</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ForcedAbsenceHoursRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>ForcedAbsenceHoursRuleset</ruleset-name>
            <ruleset-description>ForcedAbsenceHoursRuleset</ruleset-description>
            <ruleset-component id="IsDurationBasedAbsenceRule" type="Rule">
                <name>Is Duration Based Absence Rule</name>
                <description>Checks if absence is a duration based absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ForcedAbsenceHoursRule" type="Rule">
                <name>ForcedAbsenceHoursRule</name>
                <description>This rule forces the absence duration to the value set against the absence code in the CODES table</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AutoLunchForOpenShiftRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AutoLunchForOpenShiftRuleset</ruleset-name>
            <ruleset-description>AutoLunchForOpenShiftRuleset</ruleset-description>
            <ruleset-component id="AutoLunchForOpenShiftRule" type="Rule">
                <name>AutoLunchForOpenShiftRule</name>
                <description>Generate an automatic lunch break for employee working on open shift.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="IsTimePairAbsenceRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>IsTimePairAbsenceRuleset</ruleset-name>
            <ruleset-description>This rule checks if the absence extent must be processed in timepair mode or not.</ruleset-description>
            <ruleset-component id="IsTimepairBasedAbsenceRule" type="Rule">
                <name>Is Timepair Based Absence Rule</name>
                <description>Checks if absence must be processed as a timepair based absence.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="IsDurationAbsenceRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>IsDurationAbsenceRuleset</ruleset-name>
            <ruleset-description>This rule checks if the absence extent must be processed in duration mode or not.</ruleset-description>
            <ruleset-component id="IsDurationBasedAbsenceRule" type="Rule">
                <name>Is Duration Based Absence Rule</name>
                <description>Checks if absence must be processed as a duration based.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CreateAjustmentForSwiperSCRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>CreateAjustmentForSwiperSCRuleset</ruleset-name>
            <ruleset-description>This ruleset will set adjustment indicator to create adjustment for swipe employee. It short circuits if NO record found. This rule must be placed in SOD right before UnAuthorizedAbsenceRule.</ruleset-description>
            <ruleset-component id="HasUARule" type="Rule">
                <name>HasUARule</name>
                <description>This rule returns true if UA absence code is found else it returns false.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustmentsSODRuleset" type="Ruleset">
                <name>AdjustmentsSODRuleset</name>
                <description>AdjustmentsSODRuleset</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CreateAjustmentForNonSwiperSCRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>CreateAjustmentForNonSwiperSCRuleset</ruleset-name>
            <ruleset-description>This ruleset will set adjustment indicator to create adjusment record for non-swipers. It short circuits when UA is found.It should be place in SOD after UnAuthorizedAbsenceRule</ruleset-description>
            <ruleset-component id="UnAuthorizedAbsenceRule" type="Rule">
                <name>UnAuthorized Absence Rule</name>
                <description>Applies the unauthorized absence rule to the employee_s records.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjustmentsSODRuleset" type="Ruleset">
                <name>AdjustmentsSODRuleset</name>
                <description>AdjustmentsSODRuleset</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SetAdjustmentIndicatorForSwiperRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>SetAdjustmentIndicatorForSwiperRuleset</ruleset-name>
            <ruleset-description>This is a wrapper ruleset of CreateAdjustmentForSwiperSCRuleset of which short circuit is true. This ruleset will prevent short circuit of  CreateAdjustmentForSwiperSCRuleset from short circuiting outer ruleset (SOD)</ruleset-description>
            <ruleset-component id="CreateAjustmentForSwiperSCRuleset" type="Ruleset">
                <name>CreateAjustmentForSwiperSCRuleset</name>
                <description>This ruleset will set adjustment indicator to create adjustment for swipe employee. It short circuits if NO record found. This rule must be placed in SOD right before UnAuthorizedAbsenceRule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SetAdjustmentIndicatorForNonSwiperRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>SetAdjustmentIndicatorForNonSwiperRuleset</ruleset-name>
            <ruleset-description>This is a wrapper ruleset of CreateAdjustmentForNonSwiperSCRuleset of which short circuit is true. This ruleset will prevent short circuit of  CreateAdjustmentForSwiperSCRuleset from short circuiting outer ruleset (SOD)</ruleset-description>
            <ruleset-component id="CreateAjustmentForNonSwiperSCRuleset" type="Ruleset">
                <name>CreateAjustmentForNonSwiperSCRuleset</name>
                <description>This ruleset will set adjustment indicator to create adjusment record for non-swipers. It short circuits when UA is found.It should be place in SOD after UnAuthorizedAbsenceRule</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RunAccrualCascadeIfManualCalcRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>RunAccrualCascadeIfManualCalcRuleset</ruleset-name>
            <ruleset-description>Runs AccrualCascade if the manual calc indicator is set to true, else short circuits this ruleset.</ruleset-description>
            <ruleset-component id="IsManualCalcRule" type="Rule">
                <name>IsManualCalcRule</name>
                <description>Checks if the manual calc indicator is set to true or not.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="SetDefaultAdjustmentIndicatorRule" type="Rule">
                <name>Set Default Adjustment Indicator Rule</name>
                <description>Determines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RunRulesIfManualCalcRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>RunRulesIfManualCalcRuleset</ruleset-name>
            <ruleset-description>All rules that need to be executed if the manual calc indicator is set will reside in this ruleset.</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="RunAccrualCascadeIfManualCalcRuleset" type="Ruleset">
                <name>RunAccrualCascadeIfManualCalcRuleset</name>
                <description>Runs AccrualCascade if the manual calc indicator is set to true, else short circuits this ruleset.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="SetPayrollRecalcStatusRuleset" type="Ruleset">
                <name>SetPayrollRecalcStatusRuleset</name>
                <description>Set Payroll Recalc status.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ApplyHolidayEligibilityRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>ApplyHolidayEligibilityRuleset</ruleset-name>
            <ruleset-description>Ruleset that encapsulates all the short-circuiting rules along with the actual ApplyHolidayEligibilty rule.</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="IsPublicHolidayRule" type="Rule">
                <name>IsPublicHolidayRule</name>
                <description>Checks if the employee is scheduled for a public-holiday or not</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="MinHireDateCheckWithPRRule" type="Rule">
                <name>MinHireDateCheckWithPRRule</name>
                <description>Checks if the employee has been hired for some days which can be configured by Rule Parameterization.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="MinPaidWorkedDaysBeforeHolidaySCRule" type="Rule">
                <name>MinPaidWorkedDaysBeforeHolidaySCRule</name>
                <description>Checks if the employee had the indicated amount of paid days within the indicated date range before the holiday.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="MinPaidWorkedDaysAfterHolidaySCRule" type="Rule">
                <name>MinPaidWorkedDaysAfterHolidaySCRule</name>
                <description>Checks if the employee had the indicated amount of paid days within the indicated date range after the holiday.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="WorkedScheduledDayBeforeSCRule" type="Rule">
                <name>WorkedScheduledDayBeforeSCRule</name>
                <description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift for the duration prior to the holiday.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="WorkedScheduledDayCurrentSCRule" type="Rule">
                <name>WorkedScheduledDayCurrentSCRule</name>
                <description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift that day or not.</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="WorkedScheduledDayAfterSCRule" type="Rule">
                <name>WorkedScheduledDayAfterSCRule</name>
                <description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift for the duration after the holiday.</description>
                <priority>8</priority>
            </ruleset-component>
            <ruleset-component id="WorkedXDaysOnSameDayAsHolidayInLastYWeeksSCRule" type="Rule">
                <name>WorkedXDaysOnSameDayAsHolidayInLastYWeeksSCRule</name>
                <description>Checks if the employee had worked at least X days, on the same day of the week as the holiday, within the indicated date range before the holiday.</description>
                <priority>9</priority>
            </ruleset-component>
            <ruleset-component id="ApplyPublicHolidayRule" type="Rule">
                <name>ApplyPublicHolidayRule</name>
                <description>Inserts a PH record</description>
                <priority>10</priority>
            </ruleset-component>
            <ruleset-component id="ApplyHolidayAverageHoursBasedOnLastXDaysRule" type="Rule">
                <name>ApplyHolidayAverageHoursBasedOnLastXDaysRule</name>
                <description>This rule, if enabled, will sum up the paid worked hours, optionally sum up the eligible absence hours, optionally subtract the sum up of any OT hours in the indicate number of paid days since the holiday and divide the result by the number of paid days.</description>
                <priority>11</priority>
            </ruleset-component>
            <ruleset-component id="ApplyHolidayAverageHoursBasedOnPriorXPayWeeksRule" type="Rule">
                <name>ApplyHolidayAverageHoursBasedOnPriorXPayWeeksRule</name>
                <description>This rule, if enabled, will sum up the paid worked hours, optionally sum up the eligible absence hours, optionally subtract the sum up of any OT hours in the indicated date range since the holiday and divide the result by either the indicated number or by the number of paid days in the data range (based on setup)</description>
                <priority>12</priority>
            </ruleset-component>
            <ruleset-component id="SetScheduledShiftOnHolidayRule" type="Rule">
                <name>SetScheduledShiftOnHolidayRule</name>
                <description>SetScheduledShiftOnHolidayRule</description>
                <priority>13</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumRuleset" type="Ruleset">
                <name>ShiftPremiumRuleset</name>
                <description>Applies the shift premiums based on the pre-defined premium zones.</description>
                <priority>14</priority>
            </ruleset-component>
            <ruleset-component id="HolidayProcessWriteAnalysisRule" type="Rule">
                <name>HolidayProcessWriteAnalysisRule</name>
                <description>HolidayProcessWriteAnalysisRule</description>
                <priority>15</priority>
            </ruleset-component>
            <ruleset-component id="SetPayrollRecalcStatusRuleset" type="Ruleset">
                <name>SetPayrollRecalcStatusRuleset</name>
                <description>SetPayrollRecalcStatusRuleset</description>
                <priority>16</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PreWorkOrderAdjustmentRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>PreWorkOrderAdjustmentRuleset</ruleset-name>
            <ruleset-description>Ruleset that determines whether the work order adjustment control is set. If it is then there should be adjustments depending on what makes an adjustment</ruleset-description>
            <ruleset-component id="SetDefaultWorkOrderAdjustmentIndicatorRule" type="Rule">
                <name>SetDefaultWorkOrderAdjustmentIndicatorRule</name>
                <description>This rule sets an internal work order adjustment indicator.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PostWorkOrderAdjustmentRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>PostWorkOrderAdjustmentRuleset</ruleset-name>
            <ruleset-description>If the work order adjustment indicator and there are adjustments</ruleset-description>
            <ruleset-component id="PostDefaultWorkOrderAdjustmentRule" type="Rule">
                <name>PostDefaultWorkOrderAdjustmentRule</name>
                <description>This rule applies the default logic for determining if any of the WRK records has undergone an adjustment.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="LockRecordsRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>LockRecordsRuleset</ruleset-name>
            <ruleset-description>Marks payroll records as locked</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="LockRecordRule" type="Rule">
                <name>LockRecordRule</name>
                <description>Marks a payroll record as locked.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="UnlockRecordsRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>UnlockRecordsRuleset</ruleset-name>
            <ruleset-description>Marks payroll records as unlocked.</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UnlockRecordRule" type="Rule">
                <name>UnlockRecordRule</name>
                <description>Marks a payroll record as unlocked.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ShiftPremiumOnTimepairBasedAbsenceRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>ShiftPremiumOnTimepairBasedAbsenceRuleset</ruleset-name>
            <ruleset-description>A shift premium calculation for an employee on timepair based absence records.</ruleset-description>
            <ruleset-component id="IsTimePairAbsenceRuleset" type="Ruleset">
                <name>IsTimePairAbsenceRuleset</name>
                <description>Checks if absence must be processed as a timepair based absence.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumOnTimepairBasedAbsenceRule" type="Rule">
                <name>ShiftPremiumOnTimepairBasedAbsenceRule</name>
                <description>Apply a shift premium to an employee on absence records.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="MergeAbsenceRecordsRule" type="Rule">
                <name>MergeAbsenceRecordsRule</name>
                <description>This rule merges absence records.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ShiftPremiumOnDurationBasedAbsenceRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>ShiftPremiumOnDurationBasedAbsenceRuleset</ruleset-name>
            <ruleset-description>A shift premium calculation for an employee on duration based absence records.</ruleset-description>
            <ruleset-component id="IsDurationAbsenceRuleset" type="Ruleset">
                <name>IsDurationAbsenceRuleset</name>
                <description>This rule checks if the absence extent must be processed in duration mode or not.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumOnDurationBasedAbsenceRule" type="Rule">
                <name>ShiftPremiumOnDurationBasedAbsenceRule</name>
                <description>Apply a shift premium to an employee on absence records.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="MergeAbsenceRecordsRule" type="Rule">
                <name>MergeAbsenceRecordsRuleset</name>
                <description>This rule merges absence records.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ShiftPremiumOnAbsenceRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>ShiftPremiumOnAbsenceRuleset</ruleset-name>
            <ruleset-description>A shift premium calculation for an employee on absence records. It can be added before ShiftPremiumFactorRule in ShiftPremiumRuleset.</ruleset-description>
            <ruleset-component id="ShiftPremiumOnTimepairBasedAbsenceRuleset" type="Ruleset">
                <name>ShiftPremiumOnTimepairBasedAbsenceRuleset</name>
                <description>A shift premium calculation for an employee on timepair based absence records.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ShiftPremiumOnDurationBasedAbsenceRuleset" type="Ruleset">
                <name>ShiftPremiumOnDurationBasedAbsenceRuleset</name>
                <description>A shift premium calculation for an employee on duration based absence records.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SetHolidayOnOffTimeByDurationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>SetHolidayOnOffTimeByDurationRuleset</ruleset-name>
            <ruleset-description>SetHolidayOnOffTimeByDurationRuleset</ruleset-description>
            <ruleset-component id="SetHolidayOnOffTimeByDurationRule" type="Rule">
                <name>SetHolidayOnOffTimeByDurationRule</name>
                <description>Sets on and off time for holiday by duration.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="UsePayrollShiftRuleRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>UsePayrollShiftRuleRuleset</ruleset-name>
            <ruleset-description>UsePayrollShiftRuleRuleset</ruleset-description>
            <ruleset-component id="IsPayrollDateBeforeProtectDateRule" type="Rule">
                <name>IsPayrollDateBeforeProtectDateRule</name>
                <description>Checks if pdate is before payroll protect date.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UsePayrollShiftRuleDefinitionRule" type="Rule">
                <name>UsePayrollShiftRuleDefinitionRule</name>
                <description>Sets ShiftRuleDefinitionVO in RuleSetContext by the field Payroll.SH_RULE.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="UseEmpShiftRuleRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>UseEmpShiftRuleRuleset</ruleset-name>
            <ruleset-description>UseEmpShiftRuleRuleset</ruleset-description>
            <ruleset-component id="IsPayrollDateAfterProtectDateRule" type="Rule">
                <name>IsPayrollDateAfterProtectDateRule</name>
                <description>Checks if pdate is after payroll protect date.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UseEmployeeShiftRuleDefinitionRule" type="Rule">
                <name>UseEmployeeShiftRuleDefinitionRule</name>
                <description>This rule set the rulesetcontext&apos;s shift rule definition to employee&apos;s default shift rule. What this means is that all pay calculation rules like DailyRule, WeeklyOvertimeRule, BankingRule, Call-InRule etc. will use the shift rule associated with employee (instead of the shift rule associated with shift) for calculation purposes.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="UseEmployeeShiftRuleRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>UseEmployeeShiftRuleRuleset</ruleset-name>
            <ruleset-description>UseEmployeeShiftRuleRuleset</ruleset-description>
            <ruleset-component id="UsePayrollShiftRuleRuleset" type="Ruleset">
                <name>UsePayrollShiftRuleRuleset</name>
                <description>UsePayrollShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UseEmpShiftRuleRuleset" type="Ruleset">
                <name>UseEmpShiftRuleRuleset</name>
                <description>UseEmpShiftRuleRuleset</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ApplyHourAllocationsForCustomDayTypesRule" type="Rule">
                <name>ApplyHourAllocationsForCustomDayTypesRule</name>
                <description>Apply custom day types from the hour allocation</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="DefaultJobAllocationRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>DefaultJobAllocationRuleset</ruleset-name>
            <ruleset-description>TBD</ruleset-description>
            <ruleset-component id="WasScheduleNotPlannedRule" type="Rule">
                <name>WasScheduleNotPlannedRule</name>
                <description>TBD</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="IsNonSwiperRule" type="Rule">
                <name>Is Non Swiper Rule</name>
                <description>Check if the employee is non-swiper</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ApplyJobAllocationRule" type="Rule">
                <name>Apply Job Allocation Rule</name>
                <description>Split the worked recored based the precentage of cost center and position</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PlannedJobAllocationRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>PlannedJobAllocationRuleset</ruleset-name>
            <ruleset-description>TBD</ruleset-description>
            <ruleset-component id="WasSchedulePlannedRule" type="Rule">
                <name>WasSchedulePlannedRule</name>
                <description>TBD</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AllocateJobBasedOnPlannedScheduleRule" type="Rule">
                <name>AllocateJobBasedOnPlannedScheduleRule</name>
                <description>TBD</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="JobAllocationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>JobAllocationRuleset</ruleset-name>
            <ruleset-description>TBD</ruleset-description>
            <ruleset-component id="PlannedJobAllocationRuleset" type="Ruleset">
                <name>PlannedJobAllocationRuleset</name>
                <description>TBD</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="DefaultJobAllocationRuleset" type="Ruleset">
                <name>DefaultJobAllocationRuleset</name>
                <description>TBD</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RequestMiscCheckRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>RequestMiscCheckRuleset</ruleset-name>
            <ruleset-description>Rules defined in this ruleset are excuecute from Request Misc Check Application</ruleset-description>
            <ruleset-component id="SaveAdjustmentsRequestedForMiscCheckRule" type="Rule">
                <name>SaveAdjustmentsRequestedForMiscCheckRule</name>
                <description>This rule saves the REQUESTED adjustments in the EWA_18 field and the requested date in EWA_19 field</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CodeTypeCodeAdjustmentRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>CodeTypeCodeAdjustmentRuleset</ruleset-name>
            <ruleset-description>CodeTypeCodeAdjustmentRuleset</ruleset-description>
            <ruleset-component id="SetWorkCodeToXOnHolidayRule" type="Rule">
                <name>SetWorkCodeToXOnHolidayRule</name>
                <description>This rule sets the Work Codes to (X) if it is a holiday for the Employee</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="SetBreakCodeRule" type="Rule">
                <name>SetBreakCodeRule</name>
                <description>SetBreakCodeRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ResetAutoToDefaultDeptCrewRule" type="Rule">
                <name>ResetAutoToDefaultDeptCrewRule</name>
                <description>Resets AUTO department and crew to effective department and crew of the employee</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CompanionAbsenceCodesRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>CompanionAbsenceCodesRuleset</ruleset-name>
            <ruleset-description>For any master companion absence records, adjust (insert/delete/update) slave absence records </ruleset-description>
            <ruleset-component id="DeleteCompanionAbsenceCodesRule" type="Rule">
                <name>DeleteCompanionAbsenceCodesRule</name>
                <description>Deletes any slave companion absence records if master companion absence record is not present</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="InsertCompanionAbsenceCodesRule" type="Rule">
                <name>InsertCompanionAbsenceCodesRule</name>
                <description>For any master companion absence records, adjust (insert/update) a slave companion absence record with hours equal to total hours of all the master companion absence records in the collection</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="CTCShiftPremiumRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>CTCShiftPremiumRuleset</ruleset-name>
            <ruleset-description>CTCShiftPremiumRuleset</ruleset-description>
            <ruleset-component id="IsGVEmpShiftAssignedShiftPremiumRule" type="Rule">
                <name>IsGVEmpShiftAssignedShiftPremiumRule</name>
                <description>IsGVEmpShiftAssignedShiftPremiumRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="IsPremZoneNoEqualToEmpDefaultShiftNoRule" type="Rule">
                <name>IsPremZoneNoEqualToEmpDefaultShiftNoRule</name>
                <description>IsPremZoneNoEqualToEmpDefaultShiftNoRule</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="ResetPremiumRule" type="Rule">
                <name>ResetPremiumRule</name>
                <description>ResetPremiumRule</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="ApplyDefaultShiftNoAsPremiumZoneNoRule" type="Rule">
                <name>ApplyDefaultShiftNoAsPremiumZoneNoRule</name>
                <description>ApplyDefaultShiftNoAsPremiumZoneNoRule</description>
                <priority>4</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_Sync_SingleIP" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>#PNR_Sync_SingleIP</ruleset-name>
            <ruleset-description>#PNR_Sync_SingleIP</ruleset-description>
            <ruleset-component id="SyncSingleIpRule" type="Rule">
                <name>SyncSingleIpRule</name>
                <description>SyncSingleIpRule</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="ResetAbsenceForSystemAccrualCodeRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>ResetAbsenceForSystemAccrualCodeRuleset</ruleset-name>
            <ruleset-description>ResetAbsenceForSystemAccrualCodeRuleset</ruleset-description>
            <ruleset-component id="IsUserNotOfSystemAccrualCodeUserGroupsRule" type="Rule">
                <name>IsUserNotOfSystemAccrualCodeUserGroupsRule</name>
                <description>It returns true if user is not of system accrual code user group.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ResetWorkedVOForSystemAccrualCodeRule" type="Rule">
                <name>ResetWorkedVOForSystemAccrualCodeRule</name>
                <description>It will delete absence record from memory of which codes are of system accrual code list(global var) and reload them from DB.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="PayPeriod_Weekly_And_PayGroup_Related_Rules" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PayPeriod_Weekly_And_PayGroup_Related_Rules</ruleset-name>
            <ruleset-description>Ruleset containing Pay related rules</ruleset-description>
            <ruleset-component id="RemoveExceptionRule" type="Rule">
                <name>RemoveExceptionRule</name>
                <description>Removes any unpaid codes (UA, LT, LL or LE) from the employee time records based on the configured Entity on Remove Exceptions parameter.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="DailyStraightOTSplitterByOTTypeRule" type="Rule">
                <name>DailyStraightOTSplitterByOTTypeRule</name>
                <description>Splits and marks the necessary record based on the configured Entity on Apply Daily Straight OT By OTType Splitter parameter.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyHrsFillerRule" type="Rule">
                <name>WeeklyHrsFillerRule</name>
                <description>This rule will fill in missing hours for employees in pay groups that must meet a weekly hours worked threshold.</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="GuaranteedPayPeriodHrsRule" type="Rule">
                <name>GuaranteedPayPeriodHrsRule</name>
                <description>This rule will pay employees in qualifying pay groups for guaranteed hours worked in pay period.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="PayPeriodOvertimeRule" type="Rule">
                <name>PayPeriodOvertimeRule</name>
                <description>Applies overtime based on pay period. The pay period can be semi-monthly, bi-weekly, monthly, or weekly. The pay period range, as well as number of hours are stored in rule parameters.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyStraightOTSplitterRule" type="Rule">
                <name>WeeklyStraightOTSplitterRule</name>
                <description>Splits and marks the necessary record based on the configured Entity on Apply Weekly Straight OT Splitter parameter.</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="WeeklyStraightOTSplitterByOTTypeRule" type="Rule">
                <name>WeeklyStraightOTSplitterByOTTypeRule</name>
                <description>Splits and marks the necessary record based on the configured Entity on Apply Weekly Straight OT By OTType Splitter parameter.</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="OvertimeEntitlementRule" type="Rule">
                <name>OvertimeEntitlementRule</name>
                <description>Adds entitlement records based on overtime threshold.</description>
                <priority>8</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AccrualCalculatorRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AccrualCalculatorRuleset</ruleset-name>
            <ruleset-description>AccrualCalculatorRuleset</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="UpdateAccrualMultiplierBasedOnHoursWorkedRule" type="Rule">
                <name>UpdateAccrualMultiplierBasedOnHoursWorkedRule</name>
                <description>Updates an Employee UDF field with the accrual multiplier which will be used by the accrual calculator to grant accruals.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCalculatorRule" type="Rule">
                <name>AccrualCalculatorRule</name>
                <description>This rule applies accrual calculator logic</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="MaxAccrualBasedOnTotalForYearRule" type="Rule">
                <name>MaxAccrualBasedOnTotalForYearRule</name>
                <description>Determines if the employee has reached their maximum total accrual award for the year and reduces and/or eliminates the current award if appropriate.</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="UpdateLastGrantValueAndDateRule" type="Rule">
                <name>UpdateLastGrantValueAndDateRule</name>
                <description>Updates the Employee Accrual lastDepositValue/lastDepositDate to match worked hours granted for that particular accrual.</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRuleset" type="Ruleset">
                <name>Accrual Cascade Ruleset</name>
                <description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>6</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AccrualCascadeRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>Accrual Cascade Ruleset</ruleset-name>
            <ruleset-description>Accrual Cascade Ruleset handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</ruleset-description>
            <ruleset-component id="CompanionAbsenceCodesRuleset" type="Ruleset">
                <name>CompanionAbsenceCodesRuleset</name>
                <description>For any master companion absence records, adjust (insert/delete/update) slave absence records </description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AccrualCascadeRule" type="Rule">
                <name>Accrual Cascade Rule</name>
                <description>Accrual Cascade rule handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AccrualAdjustmentsRule" type="Rule">
                <name>AccrualAdjustmentsRule</name>
                <description>AccrualAdjustmentsRule.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="GenericLunchRulesetForSOD" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>GenericLunchRulesetForSOD</ruleset-name>
            <ruleset-description>Inserts any pre-defined breaks/lunches to employee&apos;s work time.</ruleset-description>
            <ruleset-component id="PreLunchRuleset" type="Ruleset">
                <name>Pre Lunch Ruleset</name>
                <description>Resets any existing Lunches/Breaks to a default state in preparation for the Lunch/Break rule.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="LunchRule" type="Rule">
                <name>Lunch Rule</name>
                <description>This rule insert break records based on the shift break definition and provided the employee has worked through  the defined time segments.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="AutoLunchForOpenShiftRule" type="Rule">
                <name>AutoLunchForOpenShiftRule</name>
                <description>Generate an automatic lunch break for employee working on open shift.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RemoveExtentsWithZeroDurationRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>RemoveExtentsWithZeroDurationRuleset</ruleset-name>
            <ruleset-description>RemoveExtentsWithZeroDurationRuleset</ruleset-description>
            <ruleset-component id="RemoveOtherExtentsWithZeroDurationRule" type="Rule">
                <name>RemoveOtherExtentsWithZeroDurationRule</name>
                <description>Remove any other type worked records with zero duration.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="HolidayProcessingForSODNonSCRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>HolidayProcessingForSODNonSCRuleset</ruleset-name>
            <ruleset-description>This ruleset allows the holiday processing to take place during Start Of Day if enabled from the global variable Rules.HolidayProcessingFromSODRule.Enabled</ruleset-description>
            <ruleset-component id="HolidayProcessingForSODSCRuleset" type="Ruleset">
                <name>HolidayProcessingForSODSCRuleset</name>
                <description>This ruleset will short circuit itself based on the value of the Global Variable Rules.HolidayProcessingFromSODRule.Enabled  If the global variable is enabled the holiday rule will insert the PH code if the employee qualifies</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="HolidayProcessingForSODSCRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>HolidayProcessingForSODSCRuleset</ruleset-name>
            <ruleset-description>This ruleset will short circuit itself based on the value of the Global Variable Rules.HolidayProcessingFromSODRule.Enabled  If the global variable is enabled the holiday rule will insert the PH code if the employee qualifies</ruleset-description>
            <ruleset-component id="HolidayProcessingFromSODRule" type="Rule">
                <name>HolidayProcessingFromSODRule</name>
                <description>This is a short circuit rule that reads the value of the Global Variable Rules.HolidayProcessingFromSODRule.Enabled and if false will short-circuit.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="ApplyHolidayEligibilityRuleset" type="Ruleset">
                <name>ApplyHolidayEligibilityRuleset</name>
                <description>Ruleset that encapsulates all the short-circuiting rules along with the actual ApplyHolidayEligibilty rule.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustmentsRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AdjustmentsRuleset</ruleset-name>
            <ruleset-description>AdjustmentsRuleset</ruleset-description>
            <ruleset-component id="SetDefaultAdjustmentIndicatorRule" type="Rule">
                <name>Set Default Adjustment Indicator Rule</name>
                <description>Detrmines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjusmentsBasedOnApprovalRuleset" type="Ruleset">
                <name>AdjusmentsBasedOnApprovalRuleset</name>
                <description>AdjusmentsBasedOnApprovalRuleset</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjusmentsBasedOnApprovalRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjusmentsBasedOnApprovalRuleset</ruleset-name>
            <ruleset-description>AdjusmentsBasedOnApprovalRuleset</ruleset-description>
            <ruleset-component id="IsOptionProcessApprovedRecordsOnlyRule" type="Rule">
                <name>IsOptionProcessApprovedRecordsOnlyRule</name>
                <description>Check if Entity.ProcessApprovedRecordsOnly is set to True.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="CreatePartialAdjustmentRule" type="Rule">
                <name>CreatePartialAdjustmentRule</name>
                <description>This rule will look at approval status of payroll, if approval status is changed,   It saves possive after picture of the record to adjustment table if changed from unapproved to approved.Else if changed from approved to unapproved, it negates the before picture and only save it. Lastly, it will set createAdjustmentIndicator in payrollVO to false to avoid default saving logic again. This rule must run after SetDefaultAdjustmentIndicatorRule which set  the createAdjustmentIndicator in payrollVO to true if pdate is less than protected date</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjustmentsSODRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>AdjustmentsSODRuleset</ruleset-name>
            <ruleset-description>AdjustmentsSODRuleset</ruleset-description>
            <ruleset-component id="SetDefaultAdjustmentIndicatorRule" type="Rule">
                <name>Set Default Adjustment Indicator Rule</name>
                <description>Detrmines if adjustments need to be created for dates prior to the protect date.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="AdjusmentsBasedOnApprovalSODRuleset" type="Ruleset">
                <name>AdjusmentsBasedOnApprovalSODRuleset</name>
                <description>AdjusmentsBasedOnApprovalSODRuleset</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="AdjusmentsBasedOnApprovalSODRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>AdjusmentsBasedOnApprovalSODRuleset</ruleset-name>
            <ruleset-description>AdjusmentsBasedOnApprovalSODRuleset</ruleset-description>
            <ruleset-component id="IsOptionProcessApprovedRecordsOnlyRule" type="Rule">
                <name>IsOptionProcessApprovedRecordsOnlyRule</name>
                <description>Check if Entity.ProcessApprovedRecordsOnly is set to True.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="CreatePositiveAdjustmentOnlyWhenApprovedRule" type="Rule">
                <name>CreatePositiveAdjustmentOnlyWhenApprovedRule</name>
                <description>This rule will be run only in SOD to create after save adjustment record only if payroll is approved.  This rule should replace default CreatePositiveAdjustmentOnlyRule if only approve records are sent to payroll process  If this rule is used in SOD, then CreatePartialAdjustmentRule is run in DefaultTimeCalcRuleSet  Note, this rule must run after SetDefaultAdjustmentIndicatorRule which set  the createAdjustmentIndicator in payrollVO to true if pdate is less than protected date</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_CCW_PayrollProcess" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>#PNR_CCW_PayrollProcess</ruleset-name>
            <ruleset-description>#PNR_CCW_PayrollProcess</ruleset-description>
            <ruleset-component id="CCWPayrollFileManagerRule" type="Rule">
                <name>CCWPayrollFileManagerRule</name>
                <description>CCWPayrollFileManagerRule.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="NotificationRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>NotificationRuleset</ruleset-name>
            <ruleset-description>This ruleset sends a notification to the user about changes to the timesheet to the employees.</ruleset-description>
            <ruleset-component id="EmployeeSignatureNotificationRule" type="Rule">
                <name>EmployeeSignatureNotificationRule</name>
                <description>Can enable/disable the employee notifications that occur when the Employee Sign-off status changes from true to false.</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="SupervisorApprovalChangeNotificationRule" type="Rule">
                <name>SupervisorApprovalChangeNotificationRule</name>
                <description>Can enable/disable the supervisor notifications that occur when the approval status changes from true to false.</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="NewRecordNotificationRule" type="Rule">
                <name>NewRecordNotificationRule</name>
                <description>Notifies employees and / or supervisors when new records belonging to a specified code set are created. For time sheet data, this looks at worked records. For scheduling data, this looks at the TemporaryChange object in the scheduling context.</description>
                <priority>3</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="RCDPostShiftEndAssumedOffDurationAdjustmentRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>RCDPostShiftEndAssumedOffDurationAdjustmentRuleset</ruleset-name>
            <ruleset-description>RCDPostShiftEndAssumedOffDurationAdjustmentRuleset</ruleset-description>
            <ruleset-component id="RCDPostShiftEndAssumedOffDurationAdjustmentRule" type="Rule">
                <name>RCDPostShiftEndAssumedOffDurationAdjustmentRule</name>
                <description>RCDPostShiftEndAssumedOffDurationAdjustmentRule</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="MassUpdateEmpOrgCreateRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>MassUpdateEmpOrgCreateRuleset</ruleset-name>
            <ruleset-description>This ruleset will implement generic business rules for non-powerpay clients</ruleset-description>
            <ruleset-component id="MassUpdateEmpOrgPowerPayRule" type="Rule">
                <name>MassUpdateEmpOrgPowerPayRule</name>
                <description>This rule will apply Powerpay related business rules for creation of Employee Organization in Employee Mass Update</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="MassUpdateEmpOrgGenericRule" type="Rule">
                <name>MassUpdateEmpOrgGenericRule</name>
                <description>This rule will apply generic business rules for creation of Employee Organization in Employee Mass Update</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SchedulePeriodOverrideRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>SchedulePeriodOverridRuleset</ruleset-name>
            <ruleset-description>TBD</ruleset-description>
            <ruleset-component id="ApplySchedulePeriodOverrideRule" type="Rule">
                <name>Apply Schedule Period Override Rule</name>
                <description>Split the worked records based on department group, department, cost center, position, work order and work items overrides.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <!-- Begin Extension Library -->
        <ruleset id="FMLAEligibilityRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>FMLAEligibilityRuleset</ruleset-name>
            <ruleset-description>Determine eligibility for FMLA based upon rule parameter configuration</ruleset-description>
            <ruleset-component id="FMLARule" type="Rule">
                <name>FMLARule</name>
                <description>Master eligibility rule for determining FMLA eligibilty</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="HasAbsenceCodeRule" type="Rule">
                <name>HasAbsenceCodeRule</name>
                <description>Short circuits the ruleset if no absences exist according to the master eligibility rule configuration</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="CheckLoadDateRule" type="Rule">
                <name>CheckLoadDateRule</name>
                <description>Determines whether or not eligibility can be calculated by a cutover date and short circuits the ruleset</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="MinimumHireDateRule" type="Rule">
                <name>MinimumHireDateRule</name>
                <description>Determines whether or not an employee is eligibile based on their hire date</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="MinimumHoursWorkedRule" type="Rule">
                <name>MinimumHoursWorkedRule</name>
                <description>Determines whether or not an employee is eligibile based on the number of hours worked including future scheduled hours</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="AllowedMaximumRule" type="Rule">
                <name>AllowedMaximumRule</name>
                <description>Determines whether or not an employee is eligibile based on the number of hours worked including future scheduled hours</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="DisplayIneligibleMessagesRule" type="Rule">
                <name>DisplayIneligibleMessagesRule</name>
                <description>Shows all ineligible messages in the ruleset arguments to the user (in a single alert box) based on the ShowAllMessage parameter value associated to the master eligibility rule</description>
                <priority>7</priority>
            </ruleset-component>
            <ruleset-component id="OneTimeStateFMLAEligibilityRule" type="Rule">
                <name>OneTimeStateFMLAEligibilityRule</name>
                <description>Ensure a user is entitled to state FMLA usage following one time rules.</description>
                <priority>8</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="MMLAEligibilityRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Massachusetts Maternity Leave Ruleset</ruleset-name>
            <ruleset-description>MMLAEligibilityRuleset</ruleset-description>
            <ruleset-component id="MMLARule" type="Rule">
                <name>MMLARule</name>
                <description>Master eligibility rule for determining MMLA eligibilty</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="HasAbsenceCodeRule" type="Rule">
                <name>HasAbsenceCodeRule</name>
                <description>Short circuits the ruleset if no absences exist according to the master eligibility rule configuration</description>
                <priority>2</priority>
            </ruleset-component>
            <ruleset-component id="CheckLoadDateRule" type="Rule">
                <name>CheckLoadDateRule</name>
                <description>Determines whether or not eligibility can be calculated by a cutover date and short circuits the ruleset</description>
                <priority>3</priority>
            </ruleset-component>
            <ruleset-component id="FullTimeEmployeeRule" type="Rule">
                <name>FullTimeEmployeeRule</name>
                <description>Determines whether or not an employee is eligibile based on the number of hours worked including future scheduled hours</description>
                <priority>4</priority>
            </ruleset-component>
            <ruleset-component id="MinimumHireDateRule" type="Rule">
                <name>MinimumHireDateRule</name>
                <description>Determines whether or not an employee is eligibile based on their hire date</description>
                <priority>5</priority>
            </ruleset-component>
            <ruleset-component id="AllowedMaximumRule" type="Rule">
                <name>AllowedMaximumRule</name>
                <description>Determines whether or not an employee is eligibile based on the number of hours worked including future scheduled hours</description>
                <priority>6</priority>
            </ruleset-component>
            <ruleset-component id="DisplayIneligibleMessagesRule" type="Rule">
                <name>DisplayIneligibleMessagesRule</name>
                <description>Shows all ineligible messages in the ruleset arguments to the user (in a single alert box) based on the ShowAllMessage parameter value associated to the master eligibility rule</description>
                <priority>7</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="SetPayrollRecalcStatusRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>Set Payroll Recalc Status Ruleset</ruleset-name>
            <ruleset-description>SetPayrollRecalcStatusRuleset</ruleset-description>
            <ruleset-component id="SetPayrollRecalcStatusRule" type="Rule">
                <name>SetPayrollRecalcStatusRule</name>
                <description>Set Payroll Recalc field to true.</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="OccurrenceCalculationRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>OccurrenceCalculationRuleset</ruleset-name>
            <ruleset-description>The occurrence tracker ruleset executed by the batch execution</ruleset-description>
            <ruleset-component id="UseEmployeeShiftRuleRuleset" type="Ruleset">
                <name>UseEmployeeShiftRuleRuleset</name>
                <description>UseEmployeeShiftRuleRuleset</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="OccurrenceCalculationRule" type="Rule">
                <name>OccurrenceCalculationRule</name>
                <description>Occurrence calculation rule.</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <!-- RIA Custom Time and Attendance Rulesets -->
        <ruleset id="TimeSheetTimePairsCustomRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>TimeSheetTimePairsCustomRuleset</ruleset-name>
            <ruleset-description>A ruleset for defining custom persistence behavior on the RIA Time Sheet screen (Time Pairs mode).</ruleset-description>
        </ruleset>
        <ruleset id="TimeSheetDurationCustomRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>TimeSheetDurationCustomRuleset</ruleset-name>
            <ruleset-description>A ruleset for defining custom persistence behavior on the RIA Time Sheet screen (Duration mode).</ruleset-description>
        </ruleset>
        <ruleset id="PayrollSummaryCustomRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>PayrollSummaryCustomRuleset</ruleset-name>
            <ruleset-description>A ruleset for defining custom persistence behavior on the RIA Payroll Summary screen.</ruleset-description>
        </ruleset>
        <ruleset id="TimeSheetDetailCustomRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>TimeSheetDetailCustomRuleset</ruleset-name>
            <ruleset-description>A ruleset for defining custom persistence behavior on the RIA Time Sheet Detail screen.</ruleset-description>
        </ruleset>
        <ruleset id="LaborDistributionCustomRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>LaborDistributionCustomRuleset</ruleset-name>
            <ruleset-description>A ruleset for defining custom persistence behavior on the RIA Labor Distribution screen.</ruleset-description>
        </ruleset>
        <ruleset id="ViewEmployeeTotalHoursCustomRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>ViewEmployeeTotalHoursCustomRuleset</ruleset-name>
            <ruleset-description>A ruleset for defining custom persistence behavior on the RIA View Employee Total Hours screen.</ruleset-description>
        </ruleset>
        <ruleset id="TimeSheetDetailedDurationCustomRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>TimeSheetDetailedDurationCustomRuleset</ruleset-name>
            <ruleset-description>A ruleset for defining custom persistence behavior on the RIA TimeSheet Detailed Duration screen.</ruleset-description>
        </ruleset>
        <!-- END RIA Custom Time and Attendance Rulesets -->
        <!-- BEGIN overlay merged ruleset / ruleset chain definitions -->
        <ruleset id="#PNR_FtpFileRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_FtpFileRuleset</ruleset-name>
          <ruleset-description>This rule set provides functionality to a transfer file to a FTP server.
          </ruleset-description>
          <ruleset-component id="FtpFileRule" type="Rule">
            <name>FtpFileRule</name>
            <description> This rule calls the rule action class to transfer a file to a FTP server.</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GenerateConfigSetupReportRuleset" is_short_circuit="False" type="Public">
          <ruleset-name>#PNR_GenerateConfigSetupReportRuleset</ruleset-name>
          <ruleset-description>#PNR_GenerateConfigSetupReportRuleset</ruleset-description>
          <ruleset-component id="IsConfigSetupReportEnableRule" type="Rule">
            <name>IsConfigSetupReportEnableRule</name>
            <description>IsConfigSetupReportEnableRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportStartRule" type="Rule">
            <name>GenerateConfigReportStartRule</name>
            <description>GenerateConfigReportStartRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportShiftRule" type="Rule">
            <name>GenerateConfigReportShiftRule</name>
            <description>GenerateConfigReportShiftRule</description>
            <priority>3</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportRosterRule" type="Rule">
            <name>GenerateConfigReportRosterRule</name>
            <description>GenerateConfigReportRosterRule</description>
            <priority>4</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportRoundingRule" type="Rule">
            <name>GenerateConfigReportRoundingRule</name>
            <description>GenerateConfigReportRoundingRule</description>
            <priority>5</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportGraceRule" type="Rule">
            <name>GenerateConfigReportGraceRule</name>
            <description>GenerateConfigReportGraceRule</description>
            <priority>6</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportAbsenceRule" type="Rule">
            <name>GenerateConfigReportAbsenceRule</name>
            <description>GenerateConfigReportAbsenceRule</description>
            <priority>7</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportAccrualRule" type="Rule">
            <name>GenerateConfigReportAccrualRule</name>
            <description>GenerateConfigReportAccrualRule</description>
            <priority>8</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportExpenseRule" type="Rule">
            <name>GenerateConfigReportExpenseRule</name>
            <description>GenerateConfigReportExpenseRule</description>
            <priority>9</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportPayCycleRule" type="Rule">
            <name>GenerateConfigReportPayCycleRule</name>
            <description>GenerateConfigReportPayCycleRule</description>
            <priority>10</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportStateEmpClassRule" type="Rule">
            <name>GenerateConfigReportStateEmpClassRule</name>
            <description>GenerateConfigReportStateEmpClassRule</description>
            <priority>11</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportHolidayRule" type="Rule">
            <name>GenerateConfigReportHolidayRule</name>
            <description>GenerateConfigReportHolidayRule</description>
            <priority>12</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportPayPolicyRule" type="Rule">
            <name>GenerateConfigReportPayPolicyRule</name>
            <description>GenerateConfigReportPayPolicyRule</description>
            <priority>13</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportWorkPayRule" type="Rule">
            <name>GenerateConfigReportWorkPayRule</name>
            <description>GenerateConfigReportWorkPayRule</description>
            <priority>14</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportOptionRule" type="Rule">
            <name>GenerateConfigReportOptionRule</name>
            <description>GenerateConfigReportOptionRule</description>
            <priority>15</priority>
          </ruleset-component>
          <ruleset-component id="GenerateConfigReportEndRule" type="Rule">
            <name>GenerateConfigReportEndRule</name>
            <description>GenerateConfigReportEndRule</description>
            <priority>16</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_DailyEmployeeCountByPSIDRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>#PNR_DailyEmployeeCountByPSIDRuleset</ruleset-name>
            <ruleset-description>This ruleset will execute the RunDailyEmployeeCountByPSIDRule rule</ruleset-description>
            <ruleset-component id="RunDailyEmployeeCountByPSIDRule" type="Rule">
                <name>RunDailyEmployeeCountByPSIDRule</name>
                <description>This rule calls the rule action class to run the RunDailyEmployeeCountByPSIDRule file</description>
                <priority>1</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GenerateAndSendDecFileRuleset" is_short_circuit="False" sid="" type="Public">
            <ruleset-name>#PNR_GenerateAndSendDecFileRuleset</ruleset-name>
            <ruleset-description>#PNR_GenerateAndSendDecFileRuleset</ruleset-description>
            <ruleset-component id="CCWDecGenerateAssembleFileRule" type="Rule">
                <name>CCWDecGenerateAssembleFileRule</name>
                <description>CCWDecGenerateAssembleFileRule</description>
                <priority>1</priority>
            </ruleset-component>
            <ruleset-component id="#PNR_FtpFileRuleset" type="Ruleset">
                <name>#PNR_FtpFileRuleset</name>
                <description>#PNR_FtpFileRuleset</description>
                <priority>2</priority>
            </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_HrRefreshRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_HrRefreshRuleset</ruleset-name>
          <ruleset-description>This ruleset will execute the HrRefresh file</ruleset-description>
          <ruleset-component id="ClientVerificationRule" type="Rule">
            <name>ClientVerificationRule</name>
            <description>This rule calls the rule action class to verify the clientId and client short name</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="RunHrRefreshRule" type="Rule">
            <name>RunHrRefreshRule</name>
            <description>This rule calls the rule action class to run the hrRefresh file</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_HRCUFileConversionRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_HRCUFileConversionRuleset</ruleset-name>
          <ruleset-description>This ruleset will execute the HRCUTasker file</ruleset-description>
          <ruleset-component id="RunHRCUTaskerRule" type="Rule">
            <name>RunHRCUTaskerRule</name>
            <description>This rule calls the rule action class to run the HRCUTasker file</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_CCWLiveCutOverRuleset" is_short_circuit="False" sid="" type="Public">
          <ruleset-name>#PNR_CCWLiveCutOverRuleset</ruleset-name>
          <ruleset-description>#PNR_CCWLiveCutOverRuleset</ruleset-description>
          <ruleset-component id="IsLiveCutOverEnableRule" type="Rule">
            <name>IsLiveCutOverEnableRule</name>
            <description>IsLiveCutOverEnableRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="SetProtectDatePriorToLiveCutOverDateRule" type="Rule">
            <name>SetProtectDatePriorToLiveCutOverDateRule</name>
            <description>SetProtectDatePriorToLiveCutOverDateRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="DeleteAdjustmentByLiveCutOverRule" type="Rule">
            <name>DeleteAdjustmentByLiveCutOverRule</name>
            <description>DeleteAdjustmentByLiveCutOverRule</description>
            <priority>3</priority>
          </ruleset-component>
          <ruleset-component id="DeletePayrollPriorToLiveCutOverDateRule" type="Rule">
            <name>DeletePayrollPriorToLiveCutOverDateRule</name>
            <description>DeletePayrollPriorToLiveCutOverDateRule</description>
            <priority>4</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GeneratePayPolicyFileRuleset" is_short_circuit="false" sid="" type="Public">
          <ruleset-name>#PNR_GeneratePayPolicyFileRuleset</ruleset-name>
          <ruleset-description>#PNR_GeneratePayPolicyFileRuleset</ruleset-description>
          <ruleset-component id="#PNR_GeneratePayPolicyXmlFileSCRuleset" type="Ruleset">
            <name>#PNR_GeneratePayPolicyXmlFileSCRuleset</name>
            <description>#PNR_GeneratePayPolicyXmlFileSCRuleset</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="#PNR_GeneratePayPolicyFlatTxtFileSCRuleset" type="Ruleset">
            <name>#PNR_GeneratePayPolicyFlatTxtFileSCRuleset</name>
            <description>#PNR_GeneratePayPolicyFlatTxtFileSCRuleset</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GeneratePayPolicyXmlFileSCRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_GeneratePayPolicyXmlFileSCRuleset</ruleset-name>
          <ruleset-description>#PNR_GeneratePayPolicyXmlFileSCRuleset</ruleset-description>
          <ruleset-component id="IsCTCProductGeneratePayPolicyXmlFileRule" type="Rule">
            <name>IsCTCProductGeneratePayPolicyXmlFileRule</name>
            <description>IsCTCProductGeneratePayPolicyXmlFileRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="#PNR_GeneratePayPolicyXmlFileRuleset" type="Ruleset">
            <name>#PNR_GeneratePayPolicyXmlFileRuleset</name>
            <description>#PNR_GeneratePayPolicyXmlFileRuleset</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GeneratePayPolicyFlatTxtFileSCRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_GeneratePayPolicyFlatTxtFileSCRuleset</ruleset-name>
          <ruleset-description>#PNR_GeneratePayPolicyFlatTxtFileSCRuleset</ruleset-description>
          <ruleset-component id="IsCTCProductGeneratePayPolicyFlatTxtFileRule" type="Rule">
            <name>IsCTCProductGeneratePayPolicyFlatTxtFileRule</name>
            <description>IsCTCProductGeneratePayPolicyFlatTxtFileRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="#PNR_GeneratePayPolicyFlatTxtFileRuleset" type="Ruleset">
            <name>#PNR_GeneratePayPolicyFlatTxtFileRuleset</name>
            <description>#PNR_GeneratePayPolicyFlatTxtFileRuleset</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_IsPayPolicyFlatFileGeneratedSCRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_IsPayPolicyFlatFileGeneratedSCRuleset</ruleset-name>
          <ruleset-description>#PNR_IsPayPolicyFlatFileGeneratedSCRuleset</ruleset-description>
          <ruleset-component id="IsCTCProductGeneratePayPolicyFlatTxtFileRule" type="Rule">
            <name>IsCTCProductGeneratePayPolicyFlatTxtFileRule</name>
            <description>IsCTCProductGeneratePayPolicyFlatTxtFileRule</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GenerateAndSendPayPolicyXmlFileRuleset" is_short_circuit="False" sid="" type="Public">
          <ruleset-name>#PNR_GenerateAndSendPayPolicyXmlFileRuleset</ruleset-name>
          <ruleset-description>This ruleset generates a pay policy xml file add header and trailer and ftp to a
            predefined site. The required input parameters are "fileType" (Payroll or Pay_policy), "ftpHost", "ftpUser",
            "ftpPassword", and "ftpTargetDirectory". The optional input parameters are "file_Location" (output file
            location), "ftpProtocol" (either sftp or ftp, defaults to sftp), "ftpSourceFolder" (ftp local file directory), and "ftpSourceFile" (local file to be ftp'd)
          </ruleset-description>
          <ruleset-component id="#PNR_GeneratePayPolicyXmlFileRuleset" type="Ruleset">
            <name>#PNR_GeneratePayPolicyXmlFileRuleset</name>
            <description>#PNR_GeneratePayPolicyXmlFileRuleset</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="#PNR_CCWHeaderWrapperRuleset" type="Ruleset">
            <name>#PNR_CCWHeaderWrapperRuleset</name>
            <description>#PNR_CCWHeaderWrapperRuleset</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="#PNR_FtpFileRuleset" type="Ruleset">
            <name>#PNR_FtpFileRuleset</name>
            <description>#PNR_FtpFileRuleset</description>
            <priority>3</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GeneratePayPolicyXmlFileRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_GeneratePayPolicyXmlFileRuleset</ruleset-name>
          <ruleset-description>This ruleset generates a pay policy xml file. The optional input parameter is
            "file_Location" (output file location). If the file_location is not specified, the generated file will be
            located at "${wfm.root.dir}/tmp/payroll/" directory</ruleset-description>
          <ruleset-component id="GeneratePayPolicyXmlFileRule" type="Rule">
            <name>GenerateXmlFileRule</name>
            <description>This rule calls the rule action class to generate the pay policy xml file</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GeneratePayPolicyFlatTxtFileRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_GeneratePayPolicyFlatTxtFileRuleset</ruleset-name>
          <ruleset-description>This ruleset generates a pay policy flat txt file. The optional input parameter is
            "file_Location" (output file location). If the file_location is not specified, the generated file will be
            located at "${wfm.root.dir}/tmp/payroll/" directory</ruleset-description>
          <ruleset-component id="GeneratePayPolicyFlatTxtFileRule" type="Rule">
            <name>GenerateFlatTxtFileRule</name>
            <description>This rule calls the rule action class to generate the pay policy flat txt file</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_CCWHeaderWrapperRuleset" is_short_circuit="False" sid="" type="Public">
          <ruleset-name>#PNR_CCWHeaderWrapperRuleset</ruleset-name>
          <ruleset-description>This ruleset will add header and trailer to the pay policy xml file. The required input
           parameter is "fileType" (either Payroll or Pay_policy). The optional parameter is "file_Location" (file to be
            wrapped)</ruleset-description>
          <ruleset-component id="AddHeaderAndTrailerToPayPolicyXmlFileRule" type="Rule">
            <name>AddHeaderAndTrailerToPayPolicyXmlFileRule</name>
            <description>This rule calls the rule action class to add header and trailer to the pay policy xml file</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_CCWHeaderWrapperSCRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_CCWHeaderWrapperSCRuleset</ruleset-name>
          <ruleset-description>#PNR_CCWHeaderWrapperSCRuleset</ruleset-description>
          <ruleset-component id="IsCTCProductAddHeaderTrailerToXmlFileRule" type="Rule">
            <name>IsCTCProductAddHeaderTrailerToXmlFileRule</name>
            <description>IsCTCProductAddHeaderTrailerToXmlFileRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="AddHeaderAndTrailerToPayPolicyXmlFileRule" type="Rule">
            <name>AddHeaderAndTrailerToPayPolicyXmlFileRule</name>
            <description>This rule calls the rule action class to add header and trailer to the pay policy xml file</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_GenerateHeaderFooterAndSendPayrollFileRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_GenerateHeaderFooterAndSendPayrollFileRuleset</ruleset-name>
          <ruleset-description>#PNR_GenerateHeaderFooterAndSendPayrollFileRuleset</ruleset-description>
          <ruleset-component id="IsClientProductHPWRule" type="Rule">
            <name>IsClientProductHPWRule</name>
            <description>IsClientProductHPWRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="#PNR_CCWHeaderWrapperRuleset" type="Ruleset">
            <name>#PNR_CCWHeaderWrapperRuleset</name>
            <description>#PNR_CCWHeaderWrapperRuleset</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="#PNR_FtpFileRuleset" type="Ruleset">
            <name>#PNR_FtpFileRuleset</name>
            <description>#PNR_FtpFileRuleset</description>
            <priority>3</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_RunCCWPRCUTaskerRuleset" is_short_circuit="False" sid="" type="Public">
          <ruleset-name>#PNR_RunCCWPRCUTaskerRuleset</ruleset-name>
          <ruleset-description>#PNR_RunCCWPRCUTaskerRuleset</ruleset-description>
          <ruleset-component id="RunCCWPRCUTaskerRule" type="Rule">
            <name>RunCCWPRCUTaskerRule</name>
            <description>RunCCWPRCUTaskerRule</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_RateImportRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>#PNR_RateImportRuleset</ruleset-name>
          <ruleset-description>This ruleset will execute the RateImport file</ruleset-description>
          <ruleset-component id="ClientVerificationRule" type="Rule">
            <name>ClientVerificationRule</name>
            <description>This rule calls the rule action class to verify the clientId and client short name</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="RunRateImportRule" type="Rule">
            <name>RunRateImportRule</name>
            <description>This rule calls the rule action class to run the RateImport file</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_CCWProcessConfigResetRuleset" is_short_circuit="False" type="Public">
          <ruleset-name>#PNR_CCWProcessConfigResetRuleset</ruleset-name>
          <ruleset-description>#PNR_CCWProcessConfigResetRuleset</ruleset-description>
          <ruleset-component id="LoadConfigRule" type="Rule">
            <name>LoadConfigRule</name>
            <description>LoadConfigRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="CCWClientVerificationRule" type="Rule">
            <name>CCWClientVerificationRule</name>
            <description>CCWClientVerificationRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="ResetAllLookupRule" type="Rule">
            <name>ResetAllLookupRule</name>
            <description>ResetAllLookupRule</description>
            <priority>3</priority>
          </ruleset-component>
          <ruleset-component id="CCWProcessResetRuleset" type="Ruleset">
            <name>CCWProcessResetRuleset</name>
            <description>CCWProcessResetRuleset</description>
            <priority>4</priority>
          </ruleset-component>
          <ruleset-component id="ProcessConfigurationEndRule" type="Rule">
            <name>ProcessConfigurationEndRule</name>
            <description>ProcessConfigurationEndRule</description>
            <priority>5</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="#PNR_CCWUpdateConfigurationRuleset" is_short_circuit="False" sid="" type="Public">
          <ruleset-name>#PNR_CCWUpdateConfigurationRuleset</ruleset-name>
          <ruleset-description>#PNR_CCWUpdateConfigurationRuleset</ruleset-description>
          <ruleset-component id="LoadConfigRule" type="Rule">
            <name>LoadConfigRule</name>
            <description>LoadConfigRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="CCWClientVerificationRule" type="Rule">
            <name>CCWClientVerificationRule</name>
            <description>CCWClientVerificationRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="ResetAllLookupRule" type="Rule">
            <name>ResetAllLookupRule</name>
            <description>ResetAllLookupRule</description>
            <priority>3</priority>
          </ruleset-component>
          <ruleset-component id="CCWProcessPreExistInitialRuleset" type="Ruleset">
            <name>CCWProcessPreExistInitialRuleset</name>
            <description>CCWProcessPreExistInitialRuleset</description>
            <priority>4</priority>
          </ruleset-component>
          <ruleset-component id="CCWConfigurationInitialRuleset" type="Ruleset">
            <name>CCWConfigurationInitialRuleset</name>
            <description>CCWConfigurationInitialRuleset</description>
            <priority>5</priority>
          </ruleset-component>
          <ruleset-component id="ProcessConfigurationEndRule" type="Rule">
            <name>ProcessConfigurationEndRule</name>
            <description>ProcessConfigurationEndRule</description>
            <priority>6</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWProcessResetRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWProcessResetRuleset</ruleset-name>
          <ruleset-description>CCWProcessResetRuleset</ruleset-description>
          <ruleset-component id="ProcessPreHROnEmployeeRule" type="Rule">
            <name>ProcessPreHROnEmployeeRule</name>
            <description>ProcessPreHROnEmployeeRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreHROnOthersRule" type="Rule">
            <name>ProcessPreHROnOthersRule</name>
            <description>ProcessPreHROnOthersRule</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWProcessResetInitialRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWProcessResetInitialRuleset</ruleset-name>
          <ruleset-description>CCWProcessResetInitialRuleset</ruleset-description>
          <ruleset-component id="IsInitialModeRule" type="Rule">
            <name>IsInitialModeRule</name>
            <description>IsInitialModeRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreHROnEmployeeRule" type="Rule">
            <name>ProcessPreHROnEmployeeRule</name>
            <description>ProcessPreHROnEmployeeRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreHROnOthersRule" type="Rule">
            <name>ProcessPreHROnOthersRule</name>
            <description>ProcessPreHROnOthersRule</description>
            <priority>3</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWProcessResetProductionRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWProcessResetProductionRuleset</ruleset-name>
          <ruleset-description>CCWProcessResetProductionRuleset</ruleset-description>
          <ruleset-component id="IsProductionModeRule" type="Rule">
            <name>IsProductionModeRule</name>
            <description>IsProductionModeRule</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWProcessUpdateConfigurationRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWProcessUpdateConfigurationRuleset</ruleset-name>
          <ruleset-description>CCWProcessUpdateConfigurationRuleset</ruleset-description>
          <ruleset-component id="ProcessBaseSettingRule" type="Rule">
            <name>ProcessBaseSettingRule</name>
            <description>ProcessBaseSettingRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="CCWConfigurationInitialRuleset" type="Ruleset">
            <name>CCWConfigurationInitialRuleset</name>
            <description>CCWConfigurationInitialRuleset</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWProcessPreExistRuleset" is_short_circuit="False" sid="" type="Public">
          <ruleset-name>CCWProcessPreExistRuleset</ruleset-name>
          <ruleset-description>CCWProcessPreExistRuleset</ruleset-description>
          <ruleset-component id="CCWProcessPreExistInitialRuleset" type="Ruleset">
            <name>CCWProcessPreExistInitialRuleset</name>
            <description>CCWProcessPreExistInitialRuleset</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWProcessPreExistInitialRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWProcessPreExistInitialRuleset</ruleset-name>
          <ruleset-description>CCWProcessPreExistInitialRuleset</ruleset-description>
          <ruleset-component id="IsInitialModeRule" type="Rule">
            <name>IsInitialModeRule</name>
            <description>IsInitialModeRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistWorkPayCodeRule" type="Rule">
            <name>ProcessPreExistWorkPayCodeRule</name>
            <description>ProcessPreExistWorkPayCodeRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistAccrualRule" type="Rule">
            <name>ProcessPreExistAccrualRule</name>
            <description>ProcessPreExistAccrualRule</description>
            <priority>3</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistAbsenceRule" type="Rule">
            <name>ProcessPreExistAbsenceRule</name>
            <description>ProcessPreExistAbsenceRule</description>
            <priority>4</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistExpenseRule" type="Rule">
            <name>ProcessPreExistExpenseRule</name>
            <description>ProcessPreExistExpenseRule</description>
            <priority>5</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistPayCycleRule" type="Rule">
            <name>ProcessPreExistPayCycleRule</name>
            <description>ProcessPreExistPayCycleRule</description>
            <priority>6</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistPayGroupRule" type="Rule">
            <name>ProcessPreExistPayGroupRule</name>
            <description>ProcessPreExistPayGroupRule</description>
            <priority>7</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistHolidayRule" type="Rule">
            <name>ProcessPreExistHolidayRule</name>
            <description>ProcessPreExistHolidayRul</description>
            <priority>8</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistRosterRule" type="Rule">
            <name>ProcessPreExistRosterRule</name>
            <description>ProcessPreExistRosterRule</description>
            <priority>9</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistShiftRule" type="Rule">
            <name>ProcessPreExistShiftRule</name>
            <description>ProcessPreExistShiftRule</description>
            <priority>10</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistEmpClassRule" type="Rule">
            <name>ProcessPreExistEmpClassRule</name>
            <description>ProcessPreExistEmpClassRule</description>
            <priority>11</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPreExistPolicyRule" type="Rule">
            <name>ProcessPreExistPolicyRule</name>
            <description>ProcessPreExistPolicyRule</description>
            <priority>12</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWProcessPreExistProductionRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWProcessPreExistProductionRuleset</ruleset-name>
          <ruleset-description>CCWProcessPreExistProductionRuleset</ruleset-description>
          <ruleset-component id="IsProductionModeRule" type="Rule">
            <name>IsProductionModeRule</name>
            <description>IsProductionModeRule</description>
            <priority>1</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWConfigurationInitialRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWConfigurationInitialRuleset</ruleset-name>
          <ruleset-description>CCWConfigurationInitialRuleset</ruleset-description>
          <ruleset-component id="ProcessGlobalVariableRule" type="Rule">
            <name>ProcessGlobalVariableRule</name>
            <description>ProcessGlobalVariableRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="ProcessNameSpaceRule" type="Rule">
            <name>ProcessNameSpaceRule</name>
            <description>ProcessNameSpaceRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="ProcessOptionRule" type="Rule">
            <name>ProcessOptionRule</name>
            <description>ProcessOptionRule</description>
            <priority>3</priority>
          </ruleset-component>
          <ruleset-component id="ProcessStationRule" type="Rule">
            <name>ProcessStationRule</name>
            <description>ProcessStationRule</description>
            <priority>4</priority>
          </ruleset-component>
          <ruleset-component id="ProcessShiftRule" type="Rule">
            <name>ProcessShiftRule</name>
            <description>ProcessShiftRule</description>
            <priority>5</priority>
          </ruleset-component>
          <ruleset-component id="ProcessRosterRule" type="Rule">
            <name>ProcessRosterRule</name>
            <description>ProcessRosterRule</description>
            <priority>6</priority>
          </ruleset-component>
          <ruleset-component id="ProcessAbsenceRule" type="Rule">
            <name>ProcessAbsenceRule</name>
            <description>ProcessAbsenceRule</description>
            <priority>7</priority>
          </ruleset-component>
          <ruleset-component id="ProcessAccrualRule" type="Rule">
            <name>ProcessAccrualRule</name>
            <description>ProcessAccrualRule</description>
            <priority>8</priority>
          </ruleset-component>
          <ruleset-component id="ProcessExpenseRule" type="Rule">
            <name>ProcessExpenseRule</name>
            <description>ProcessExpenseRule</description>
            <priority>9</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPayCycleRule" type="Rule">
            <name>ProcessPayCycleRule</name>
            <description>ProcessPayCycleRule</description>
            <priority>10</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPayGroupRule" type="Rule">
            <name>ProcessPayGroupRule</name>
            <description>ProcessPayGroupRule</description>
            <priority>11</priority>
          </ruleset-component>
          <ruleset-component id="ProcessEmpClassRule" type="Rule">
            <name>ProcessEmpClassRule</name>
            <description>ProcessEmpClassRule</description>
            <priority>12</priority>
          </ruleset-component>
          <ruleset-component id="ProcessHolidayRule" type="Rule">
            <name>ProcessHolidayRule</name>
            <description>ProcessHolidayRule</description>
            <priority>13</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPolicyRule" type="Rule">
            <name>ProcessPolicyRule</name>
            <description>ProcessPolicyRule</description>
            <priority>14</priority>
          </ruleset-component>
          <ruleset-component id="ProcessWorkPayCodeRule" type="Rule">
            <name>ProcessWorkPayCodeRule</name>
            <description>ProcessWorkPayCodeRule</description>
            <priority>15</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="CCWConfigurationProductionRuleset" is_short_circuit="True" sid="" type="Public">
          <ruleset-name>CCWConfigurationProductionRuleset</ruleset-name>
          <ruleset-description>CCWConfigurationProductionRuleset</ruleset-description>
          <ruleset-component id="IsProductionModeRule" type="Rule">
            <name>IsProductionModeRule</name>
            <description>IsProductionModeRule</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="ProcessGlobalVariableRule" type="Rule">
            <name>ProcessGlobalVariableRule</name>
            <description>ProcessGlobalVariableRule</description>
            <priority>2</priority>
          </ruleset-component>
          <ruleset-component id="ProcessNameSpaceRule" type="Rule">
            <name>ProcessNameSpaceRule</name>
            <description>ProcessNameSpaceRule</description>
            <priority>3</priority>
          </ruleset-component>
          <ruleset-component id="ProcessOptionRule" type="Rule">
            <name>ProcessOptionRule</name>
            <description>ProcessOptionRule</description>
            <priority>4</priority>
          </ruleset-component>
          <ruleset-component id="ProcessStationRule" type="Rule">
            <name>ProcessStationRule</name>
            <description>ProcessStationRule</description>
            <priority>5</priority>
          </ruleset-component>
          <ruleset-component id="ProcessShiftRule" type="Rule">
            <name>ProcessShiftRule</name>
            <description>ProcessShiftRule</description>
            <priority>6</priority>
          </ruleset-component>
          <ruleset-component id="ProcessRosterRule" type="Rule">
            <name>ProcessRosterRule</name>
            <description>ProcessRosterRule</description>
            <priority>7</priority>
          </ruleset-component>
          <ruleset-component id="ProcessAbsenceRule" type="Rule">
            <name>ProcessAbsenceRule</name>
            <description>ProcessAbsenceRule</description>
            <priority>8</priority>
          </ruleset-component>
          <ruleset-component id="ProcessAccrualRule" type="Rule">
            <name>ProcessAccrualRule</name>
            <description>ProcessAccrualRule</description>
            <priority>9</priority>
          </ruleset-component>
          <ruleset-component id="ProcessExpenseRule" type="Rule">
            <name>ProcessExpenseRule</name>
            <description>ProcessExpenseRule</description>
            <priority>10</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPayCycleRule" type="Rule">
            <name>ProcessPayCycleRule</name>
            <description>ProcessPayCycleRule</description>
            <priority>11</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPayGroupRule" type="Rule">
            <name>ProcessPayGroupRule</name>
            <description>ProcessPayGroupRule</description>
            <priority>12</priority>
          </ruleset-component>
          <ruleset-component id="ProcessEmpClassRule" type="Rule">
            <name>ProcessEmpClassRule</name>
            <description>ProcessEmpClassRule</description>
            <priority>13</priority>
          </ruleset-component>
          <ruleset-component id="ProcessHolidayRule" type="Rule">
            <name>ProcessHolidayRule</name>
            <description>ProcessHolidayRule</description>
            <priority>14</priority>
          </ruleset-component>
          <ruleset-component id="ProcessPolicyRule" type="Rule">
            <name>ProcessPolicyRule</name>
            <description>ProcessPolicyRule</description>
            <priority>15</priority>
          </ruleset-component>
          <ruleset-component id="ProcessWorkPayCodeRule" type="Rule">
            <name>ProcessWorkPayCodeRule</name>
            <description>ProcessWorkPayCodeRule</description>
            <priority>16</priority>
          </ruleset-component>
        </ruleset>
        <ruleset id="TimeRoundingWorkRuleset" is_short_circuit="True" sid="" type="Public">
            <ruleset-name>TimeRoundingWorkRuleset</ruleset-name>
            <ruleset-description>TimeRoundingWorkRuleset</ruleset-description>
          <ruleset-component id="RCDPostShiftEndAssumedOffDurationAdjustmentRuleset" type="Ruleset">
            <name>RCDPostShiftEndAssumedOffDurationAdjustmentRuleset</name>
            <description>RCDPostShiftEndAssumedOffDurationAdjustmentRuleset</description>
            <priority>1</priority>
          </ruleset-component>
          <ruleset-component id="RoundingWorkSegmentTimesRule" type="Rule">
            <name>RoundingWorkSegmentTimesRule</name>
            <description>RoundingWorkSegmentTimesRule</description>
            <priority>2</priority>
          </ruleset-component>
        </ruleset>
        <!-- END overlay merged ruleset / ruleset chain definitions -->
    </ruleset-list>
    <rule-list>
        <rule id="SyncSingleIpRule" isactive="True" sid="">
            <rule-name>SyncSingleIpRule</rule-name>
            <rule-description>This rule syncs the SingleIP database user info with the 3G database</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SyncSingleIpRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="CCWPayrollFileManagerRule" isactive="True" sid="">
            <rule-name>CCWPayrollFileManagerRule</rule-name>
            <rule-description>CCWPayrollFileManagerRule</rule-description>
            <rule-action>com.cybershift.server.layer.ccwServices.payrollFile.CCWPayrollFileManagerRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="SaveAdjustmentsRequestedForMiscCheckRule" isactive="True" sid="">
            <rule-name>SaveAdjustmentsRequestedForMiscCheckRule</rule-name>
            <rule-description>This must be the last rule in the RequestMiscCheckRuleset.This rule saves the REQUESTED adjustments in the EWA_18 field and the requested date in EWA_19 field</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SaveAdjustmentsRequestedForMiscCheckRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AbsenceCodeChangeValidationRule" isactive="True" sid="">
            <rule-name>Absence Code Change Validation Rule</rule-name>
            <rule-description>This is a deprecated custom rule.  Certain absence codes, especially those that were generated due to late arrival, left early and long lunch situations, can only changed to an absence code that exists in the pre-defined list of codes. Otherwise, the code reverts back to its original state. Currently, this list of codes are maintained in the propertiesconfig.xml.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AbsenceCodeChangeValidationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AccrualCascadeRule" isactive="True" sid="">
            <rule-name>Accrual Cascade Rule</rule-name>
            <rule-description>Accrual Cascade rule handles the management of the employees accrual values. For all DECREMENT absence/entitlement codes in the payroll extent, the rule deducts the absence/entitlement hours from appropriate buckets. For all INCREMENT absence or entitlement codes in the payroll extent, this rule adds the absence/entitlement hours to the appropriate buckets. All transactions are recorded in the ACCRUALS_HISTORY table.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AccrualCascadeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AddBonusFromDatabaseRule" isactive="True" sid="">
            <rule-name>AddBonusFromDatabaseRule</rule-name>
            <rule-description>This rule reads BNS type worked records into PayrollVO. (Used in BubbleSheet only)</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AddBonusFromDatabaseRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustAbsenceOrBreakExtentRule" isactive="True" sid="">
            <rule-name>Adjust Absence Or Break Extent Rule</rule-name>
            <rule-description>Adjust overlapping absence or break extents to support timepair absences</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustAbsenceOrBreakExtentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustDurationBasedLaborExtentsRule" isactive="True" sid="">
            <rule-name>Adjust Duration Based Labor Extents Rule</rule-name>
            <rule-description>Adjust duration based Labor extents if labor type worked extents exist.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustDurationBasedLaborExtentsRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustLaborRule" isactive="True" sid="">
            <rule-name>Adjust Labor Rule</rule-name>
            <rule-description>Adjust labor records as per the payroll&apos;s off_time</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustLaborRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustNonBreakExtentRule" isactive="True" sid="">
            <rule-name>Adjust NonBreak Extent Rule</rule-name>
            <rule-description>Adjusts non-break extent as per the payroll&apos;s break time.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustNonBreakExtentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlappingLongLunchWithAbsencesRule" isactive="True" sid="">
            <rule-name>Adjust Overlapping LongLunch With Absences Rule</rule-name>
            <rule-description>Adjust LL records if they overlap with absence records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlappingLongLunchWithAbsencesRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustPayrollTimesRule" isactive="True" sid="">
            <rule-name>Adjust Payroll Times Rule</rule-name>
            <rule-description>Adjust labor records as per the payroll&apos;s on and off_times</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustPayrollTimesRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustPayrollTimesBasedOnLaborRule" isactive="True" sid="">
            <rule-name>Adjust Payroll Times Based On Labor Rule</rule-name>
            <rule-description>adjust payroll on time and off time based on the worked record</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustPayrollTimesBasedOnLaborRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustPayrollUdf1Rule" isactive="True" sid="">
            <rule-name>Adjust Payroll Udf1 Rule</rule-name>
            <rule-description>This rule is deprecated. DO NOT USE THIS RULE.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustPayrollUdf1Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ApplyJobAllocationRule" isactive="True" sid="">
            <rule-name>Apply Job Allocation Rule</rule-name>
            <rule-description>Split the worked recored based the precentage of cost center and position</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ApplyJobAllocationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ApplyPHAtSchedShiftHoursRule" isactive="True" sid="">
            <rule-name>ApplyPHAtSchedShiftHoursRule</rule-name>
            <rule-description>Apply the public holiday with shift hours</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ApplyPHAtSchedShiftHoursRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ApplyWorkOrderItemAllocationRule" isactive="True" sid="">
            <rule-name>Apply Work Order Item Allocation Rule</rule-name>
            <rule-description>Split the worked records based the precentage of work order and work item</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ApplyWorkOrderItemAllocationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ArrivedLateRule" isactive="True" sid="">
            <rule-name>Arrived Late Rule</rule-name>
            <rule-description>ArrivedLateRule compares the employee&apos;s first on time with the actual shift&apos;s start time. If the first on time is greater than the the shift start time (i.e. if the employee has arrived late), this rule inserts an &quot;Arrived Late (LT)&quot; worked record.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ArrivedLateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AuthorizationRule" isactive="True" sid="">
            <rule-name>Authorization Rule</rule-name>
            <rule-description>Sets the default (system) authorization status of the payroll records</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AuthorizationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AuthorizationRuleC1" isactive="True" sid="">
            <rule-name>Authorization Rule for NewYork Board of Ed</rule-name>
            <rule-description>Authorization ruleset as applied to NYBOE</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AuthorizationRule_NYCBOE</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsSwiperRule" isactive="True" sid="">
            <rule-name>IsSwiperRule</rule-name>
            <rule-description>This rule determines whether the employee is a swiper or not based on the employee class</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsSwiperRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsSwiperC1Rule" isactive="True" sid="">
            <rule-name>IsSwiperC1Rule</rule-name>
            <rule-description>This rule determines if an employee is a swiper or not based on employee groups. There is a global property &apos;PayToSchedEmpGroups&apos;  that lists the employee groups for pay-to-schedule employees. Employees belonging to employee groups NOT in this list are all swipers.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsSwiperC1Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AnnualLeaveConversionToSickRule" isactive="True" sid="">
            <rule-name>AnnualLeaveConversionToSickRule for TCEQ</rule-name>
            <rule-description>AnnualLeaveConversionToSickRule for TCEQ</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AnnualLeaveConversionToSickRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BankingRule" isactive="True" sid="">
            <rule-name>Banking Rule</rule-name>
            <rule-description>This rule allows an employee to bank his/her overtime (in lieu of payment) by inserting a BNK type worked extent for later withdrawal against time off. There are various parameters that set the boundaries of the banking values that can be accumulated annually or daily.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BankingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BonusRule" isactive="True" sid="">
            <rule-name>Bonus Rule</rule-name>
            <rule-description>This rules creates bonus type (BNS) worked extents based on a set of eligibility criteria/conditions. Typically, the system supports following type of bonuses:  1. Hours - Bonus is for a fixed amount of hours paid at employee&apos;s REG rate.  2. Percentage - The bonus paid is based on the percentage of hours worked.  3. Rate - Bonus is created for the same number of hours worked, but paid at a specific rate.  4. Amount - Bonus is a straight dollar amount.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BonusRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BreakOverrideRule" isactive="True" sid="">
            <rule-name>BreakOverrideRule</rule-name>
            <rule-description>TBD.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BreakOverrideRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BreakRule" isactive="True" sid="">
            <rule-name>Break Rule</rule-name>
            <rule-description>This rule insert break records based on the shift break  definition and provided the employee has worked through the defined time segments.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BreakRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="CompTimeExpiryRule" isactive="True" sid="">
            <rule-name>CompTimeExpiryRule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.CompTimeExpiryRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="CallInRule" isactive="True" sid="">
            <rule-name>Call-In Rule</rule-name>
            <rule-description>This rule guarantees the minimum amount of hours to an employee who has been called-in to work.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.CallInRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ChangeMilitaryLeaveRule" isactive="True" sid="">
            <rule-name>Change Military Leave Rule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ChangeMilitaryLeaveRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DailyRule" isactive="True" sid="">
            <rule-name>Daily Rule</rule-name>
            <rule-description>Distributes employees&apos; worked hours to the pre-defined daily overtime allocation and percentages.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DailyRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DeductAbsencesFromUnPaidRule" isactive="True" sid="">
            <rule-name>Deduct Absences From UnPaid Rule</rule-name>
            <rule-description>Deducts/Replaces the system unpaid codes (LT,LL,LE) when absence codes are inserted.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DeductAbsencesFromUnPaidRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DeductTimePairAbsencesFromUnpaidRule" isactive="True" sid="">
            <rule-name>DeductTimePairAbsencesfromUnpaidRule</rule-name>
            <rule-description>Deducts/Replaces the system unpaid codes (LT,LL,LE) that overlap with absence records (with respect to time pairs)</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DeductTimePairAbsencesFromUnpaidRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="EndSwingRule" isactive="True" sid="">
            <rule-name>End Swing Rule</rule-name>
            <rule-description>Applies swing rule to the shift&apos;s end time.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.EndSwingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsDurationBasedAbsenceRule" isactive="True" sid="">
            <rule-name>Is Duration Based Absence Rule</rule-name>
            <rule-description>Checks if absence must be processed as a duration based.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsDurationBasedAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsTimepairBasedAbsenceRule" isactive="True" sid="">
            <rule-name>Is Timepair Based Absence Rule</rule-name>
            <rule-description>Checks if absence must be processed as a timepair based absence.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsTimepairBasedAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ResetSystemBreakRule" isactive="True" sid="">
            <rule-name>ResetSystemBreakRule</rule-name>
            <rule-description>TBD</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetSystemBreakRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="HolidayEligibilityRule" isactive="True" sid="">
            <rule-name>Holiday Eligibility Rule</rule-name>
            <rule-description>Determines if an employee is eligible for holiday pay and inserts PH record.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.HolidayEligibilityRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="HolidayEligibilityWithNoMinLenCheckRule" isactive="True" sid="">
            <rule-name>HolidayEligibilityWithNoMinLenCheckRule</rule-name>
            <rule-description>Employee is eligible for public holiday pay when works on before and after holiday day.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.HolidayEligibilityWithNoMinLenCheckRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="HolidayProcessingFromSODRule" isactive="True" sid="">
            <rule-name>HolidayProcessingFromSODRule</rule-name>
            <rule-description>This is a short circuit rule that reads the value of the Global Variable Rules.HolidayProcessingFromSODRule.Enabled and if false will short-circuit.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.HolidayProcessingFromSODRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PublicHolidayEntitlementRule" isactive="True" sid="">
            <rule-name>PublicHolidayEntitlementRule</rule-name>
            <rule-description>PublicHolidayEntitlementRule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PublicHolidayEntitlementRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LatenessRule" isactive="True" sid="">
            <rule-name>Lateness Rule</rule-name>
            <rule-description>Determines if an employee has begun work after their scheduled time.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LatenessRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DubleDeductLatenessRule" isactive="True" sid="">
            <rule-name>DubleDeductLatenessRule</rule-name>
            <rule-description>This is a custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DubleDeductLatenessRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LeftEarlyRule" isactive="True" sid="">
            <rule-name>Left Early Rule</rule-name>
            <rule-description>This rule inserts an &apos;LE&apos; worked record if the employee&apos;s  last off_time is greater than actual shift&apos;s end time.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LeftEarlyRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LongLunchRule" isactive="True" sid="">
            <rule-name>Long Lunch Rule</rule-name>
            <rule-description>This rule insert &apos;LL&apos; record for any missing time segments in the course of employee&apos;s shift segment.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LongLunchRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LunchRule" isactive="True" sid="">
            <rule-name>Lunch Rule</rule-name>
            <rule-description>This rule insert break records based on the shift break definition and provided the employee has worked through  the defined time segments. This rule will apply the generic lunch rules except for classes in the Rules.LunchRule.Classes global variable.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LunchRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LoadPartialDayAbsencesOnSODRule" isactive="True" sid="">
            <rule-name>Load Partial Day Absences On SOD Rule</rule-name>
            <rule-description>This rule inserts scheduled partial day absence records for non-pay to schedule class employees. Disabled by default with rule parameters.</rule-description>
            <rule-action>com.cybershift.absence.rules.LoadPartialDayAbsencesOnSODRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="LunchWithRPRule" isactive="True" sid="">
            <rule-name>Lunch Rule with Rule Parameter</rule-name>
            <rule-description>This rule insert break records based on the shift break definition, rule parameterization setting and provided the employee has worked through  the defined time segments.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LunchWithRPRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ManagerSelfTreatedIllnessRule" isactive="True" sid="">
            <rule-name>Manager Self Treated Illness Rule</rule-name>
            <rule-description>Applies the self treated illness rule for employees that are managers.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ManagerSelfTreatedIllnessRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ManualCalcRule" isactive="True" sid="">
            <rule-name>Manual Calculation Validation Rule</rule-name>
            <rule-description>Checks if records were set to the manual override mode. If true, no pay-rule calculations will take place for this employee on this day.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ManualCalcRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ForcedAbsenceHoursRule" isactive="True" sid="">
            <rule-name>Forced Absence Hours Rule</rule-name>
            <rule-description>This rule forces the absence duration to the value set against the absence code in the CODES table</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ForcedAbsenceHoursRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MealBonusRule" isactive="True" sid="">
            <rule-name>Meal Bonus Rule</rule-name>
            <rule-description>Applies the meal pay bonus to the employee&apos;s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MealBonusRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ManagerWeeklyHoursFillerRule" isactive="True" sid="">
            <rule-name>Manager Weekly Hours Filler Rule</rule-name>
            <rule-description>This rule will insert an IAL paid absence code with the amount of hours the manager needed to reach his/her 35 expected weekly hours.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ManagerWeeklyHoursFillerRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MonthlyANLAccrualAdditionsToSuspenseRule" isactive="True" sid="">
            <rule-name>Monthly Annual Accrual Additions To Suspense Rule</rule-name>
            <rule-description>This rule adds annual leave accruals to suspense buckets(TCEQ).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MonthlyANLAccrualAdditionsToSuspenseRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MonthlyAnnualLeaveSuspenseToActiveAccrualRule" isactive="True" sid="">
            <rule-name>Monthly Annual Leave Suspense To Active Accrual Rule</rule-name>
            <rule-description>This rule adds annual accruals from suspense to active buckets(TCEQ).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MonthlyAnnualLeaveSuspenseToActiveAccrualRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MonthlySickAccrualAdditionsToSuspenseRule" isactive="True" sid="">
            <rule-name>Monthly Sick Accrual Additions To Suspense Rule</rule-name>
            <rule-description>This rule adds sick accruals to suspense buckets(TCEQ).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MonthlySickAccrualAdditionsToSuspenseRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MonthlySickSuspenseToActiveAccrualRule" isactive="True" sid="">
            <rule-name>Monthly Sick Suspense To Active Accrual Rule</rule-name>
            <rule-description>This rule adds sick accruals from suspense to active buckets(TCEQ).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MonthlySickSuspenseToActiveAccrualRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="NonManagerSelfTreatedIllnessRule" isactive="True" sid="">
            <rule-name>Non Manager Self TreatedIl lness Rule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.NonManagerSelfTreatedIllnessRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="NoLostTimeForManagersRule" isactive="True" sid="">
            <rule-name>No Lost Time For Managers Rule</rule-name>
            <rule-description>Removes any missing time (LT,LL,LE), if employee is a manager</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.NoLostTimeForManagersRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="NoOverTimeRule" isactive="True" sid="">
            <rule-name>No Overtime Rule</rule-name>
            <rule-description>Applies no overtime to employee record.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.NoOverTimeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PaidEndGraceRule" isactive="True" sid="">
            <rule-name>Paid End Grace Rule</rule-name>
            <rule-description>If an employee left early on a normal work day and is within the end paid grace window, the worked actual off time will be forced to the shift off time thus being paid for the missed duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PaidEndGraceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PaidLatenessAbsenceRule" isactive="True" sid="">
            <rule-name>Paid Lateness Absence Rule</rule-name>
            <rule-description>Applies paid lateness to an employee&apos;s record</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PaidLatenessAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PaidMilitaryLeaveRule" isactive="True" sid="">
            <rule-name>Paid Military Leave Rule</rule-name>
            <rule-description>This is a custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PaidMilitaryLeaveRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PaidStartGraceRule" isactive="True" sid="">
            <rule-name>Paid Start Grace Rule</rule-name>
            <rule-description>If an employee came to work early on a normal work day and is within the start paid grace window, the worked actual on time will be forced to the shift on time thus being paid for the late duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PaidStartGraceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PreBonusEmployeeRule" isactive="True" sid="">
            <rule-name>Pre Bonus Employee Rule</rule-name>
            <rule-description>Remove any instances of employee bonus records</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PreBonusEmployeeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PreMealBonusRule" isactive="True" sid="">
            <rule-name>PreMealBonusRule</rule-name>
            <rule-description>Removes all BNS_SMP type worked extents.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PreMealBonusRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PreBreakRule" isactive="True" sid="">
            <rule-name>Pre Break Rule</rule-name>
            <rule-description>This rule converts  - all paid break records to work type records;  - all unpaid break records with duration of greater  than 330 minutes to work type records;  - deletes all other unpaid break records with a duration of less than 330 minutes.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PreBreakRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PreDailyRule" isactive="True" sid="">
            <rule-name>Pre Daily Rule</rule-name>
            <rule-description>Resets the records to a default state (hourtype to REG) in preparation for the executing daily rules.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PreDailyRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PreLunchRule" isactive="True" sid="">
            <rule-name>Pre Lunch Rule</rule-name>
            <rule-description>This rule converts  - all break records with flag type &apos;T&apos; to work type records;  - all other break records are deleted.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PreLunchRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PreManagerWeeklyHoursFillerRule" isactive="True" sid="">
            <rule-name>Pre Manager Weekly Hours Filler Rule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PreManagerWeeklyHoursFillerRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PublicHolidayRule" isactive="True" sid="">
            <rule-name>Public Holiday Rule</rule-name>
            <rule-description>Applies the public holiday rule to the employee_s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PublicHolidayRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PayrollProcessRule" isactive="True" sid="">
            <rule-name>Payroll Process Rule</rule-name>
            <rule-description>Applies the pre-defined payroll processing rules when generating a payroll output file.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PayrollProcessRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RateSetRule" isactive="True" sid="">
            <rule-name>Rate Set Rule</rule-name>
            <rule-description>Applies the rate set rule to the employee_s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RateSetRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveBNKWorkedRecordRule" isactive="True" sid="">
            <rule-name>RemoveBNKWorkedRecordRule</rule-name>
            <rule-description>Resets any banked overtime records to a default state in preparation for the Banking Rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveBNKWorkedRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveLatenessAbsenceRecordRule" isactive="True" sid="">
            <rule-name>RemoveLatenessAbsenceRecordRule</rule-name>
            <rule-description>Removes the lateness absence record from the employee&apos;s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveLatenessAbsenceRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveUNPArriveLateWorkedRecordRule" isactive="True" sid="">
            <rule-name>Remove UNP Arrive Late Worked Record Rule</rule-name>
            <rule-description>Removes &apos;LT&apos; type (Arrived Late) worked extent from the labor collection of payrollVO object.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveUNPArriveLateWorkedRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveUNPLeftEarlyWorkedRecordRule" isactive="True" sid="">
            <rule-name>Remove UNP Left Early Worked Record Rule</rule-name>
            <rule-description>removes an unpaid left early worked record from the employee_s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveUNPLeftEarlyWorkedRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveUNPLongLunchWorkedRecordRule" isactive="True" sid="">
            <rule-name>Remove UNP Long Lunch Worked Record Rule</rule-name>
            <rule-description>removes an unpaid long lunch worked record from the employee_s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveUNPLongLunchWorkedRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveUNPWorkedRecordRule" isactive="True" sid="">
            <rule-name>Remove UNP Worked Record Rule</rule-name>
            <rule-description>removes an unpaid worked record from the employee_s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveUNPWorkedRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ResetPremiumRule" isactive="True" sid="">
            <rule-name>ResetPremiumRule</rule-name>
            <rule-description>Initializes all the premium values for employee work records to zero.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetPremiumRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ResetShiftRuleForForecastingRule" isactive="True" sid="">
            <rule-name>Reset ShiftRule For Forecasting Rule</rule-name>
            <rule-description>resets the shift rule for forecasting</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetShiftRuleForForecastingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetAutoCCPToDefaultCCPRule" isactive="True" sid="">
            <rule-name>SetAutoCCPToDefaultCCPRule</rule-name>
            <rule-description>Resets any ABP-ABU-BNS worked extents whose CCP value is AUTO-AUTO to default values</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetAutoCCPToDefaultCCPRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsAfterEffectiveDateRule" isactive="True" sid="">
            <rule-name>IsAfterEffectiveDateRule</rule-name>
            <rule-description>This is a predicate rule that checks if pdate is after the effective date.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsAfterEffectiveDateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetDefaultAdjustmentIndicatorRule" isactive="True" sid="">
            <rule-name>Set Default Adjustment Indicator Rule</rule-name>
            <rule-description>Determines if adjustments need to be created for dates prior to the protect date.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetDefaultAdjustmentIndicatorRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetPayrollCalendarInfoRule" isactive="True" sid="">
            <rule-name>Set Payroll Calendar Info Rule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetPayrollCalendarInfoRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftEndDurationRoundingRule" isactive="True" sid="">
            <rule-name>Shift End Duration Rounding Rule</rule-name>
            <rule-description>Applies the pre-defined shift end duration roundings to the employee_s records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftEndDurationRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftEndTimeRoundingRule" isactive="True" sid="">
            <rule-name>ShiftEndTimeRoundingRule</rule-name>
            <rule-description>Applies the pre-defined shift end time roundings to the employee&apos;s worked extents</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftEndTimeRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftPremiumRule" isactive="True" sid="">
            <rule-name>Shift Premium Rule</rule-name>
            <rule-description>Applies shift premium to employee&apos;s payroll/worked extents.   Premium zones pay shift premiums for hours worked between defined start and end times for given days of the week. Each Shift can have zero or more shift prezium zones associated. If two or more premuim zones overlap within a single shift, the employee will be paid for both premiums. Shift premiums are either a flat rate added to the employee&apos;s rate or a percentage increase above his rate.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftPremiumRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftPremiumMajorityHoursRule" isactive="True" sid="">
            <rule-name>Shift Premium Majority Hours Rule</rule-name>
            <rule-description>The Rule, if enabled, will basically evaluate the percentage of the worked hours that have premium hours (either AM premium hours or PM Premium hours) and if the percentage exceeds 50% it will apply the premium hours to all worked hours.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftPremiumMajorityHoursRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftStartTimeRoundingRule" isactive="True" sid="">
            <rule-name>Shift Start Time Rounding Rule</rule-name>
            <rule-description>Rounding Rules define the multiples or increments in which the duration of worked needs to be adjusted. Worked Durations might be rounded up or down based on a defined split. This Rounding rule is time based and is applied for shift end time.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftStartTimeRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="StartSwingRule" isactive="True" sid="">
            <rule-name>Start Swing Rule</rule-name>
            <rule-description>The StartSwingRule allows for a window of time that an employee can come to work without being docked late. What this rule essentially does is adjust the  * PAYROLL.ACTUAL_SHIFT&apos;s ON TIME. This new ontime affects Grace/Rounding and InsertLostTime rules. There are basically 2 swing types:  1. Full Swing - where the employee can swing on Pre-Start shift time (early arrival) and on Post-Start shift time (post arrival).  2. Half Swing - where the employee can swing on Post-Start Shift time only (post arrival).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.StartSwingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="TestRule" isactive="True" sid="">
            <rule-name>Test Rule</rule-name>
            <rule-description>This rule has no side effect. Used for testing purposes only.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.TestRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnAuthorizedAbsenceRule" isactive="True" sid="">
            <rule-name>UnAuthorized Absence Rule</rule-name>
            <rule-description>Checks if the employee has an Unauthorized absence extent</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnAuthorizedAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnPaidEndGraceRule" isactive="True" sid="">
            <rule-name>UnPaid End Grace Rule</rule-name>
            <rule-description>If an employee stayed and worked late on a normal work day and is within the end unpaid grace window, the actual off time will be forced to the shift off time thus not being paid for the  post shift duration. This is structured/parameter based rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnPaidEndGraceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnPaidLatenessAbsenceRule" isactive="True" sid="">
            <rule-name>UnPaid Lateness Absence Rule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnPaidLatenessAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnPaidStartGraceRule" isactive="True" sid="">
            <rule-name>UnPaid Start Grace Rule</rule-name>
            <rule-description>If an employee came to work early on a normal work day and is within the start unpaid grace window, the actual on time will be forced to the shift on time thus not being paid for the pre shift duration. This is a structured/parameter based rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnPaidStartGraceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WeeklyOverTimeRule" isactive="True" sid="">
            <rule-name>Weekly Overtime Rule</rule-name>
            <rule-description>Distributes employees&apos; worked hours to the pre-defined weekly overtime allocation and percentages. i.e. (hours greater than 40 are OT1 @ 150% etc).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WeeklyOverTimeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WeeklyOverTimeForecastRule" isactive="True" sid="">
            <rule-name>Weekly OverTime Forecast Rule</rule-name>
            <rule-description>Forecasts the weekly overtime the employee will have, for scheduling decisions.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WeeklyOverTimeForecastRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WorkedOnScheduledDayRule" isactive="True" sid="">
            <rule-name>Worked On Scheduled Day Rule</rule-name>
            <rule-description>This predicate rule determines whether the employee has worked according to his/her scheduled shift.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WorkedOnScheduledDayRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WorkflowAuthorizationRule" isactive="True" sid="">
            <rule-name>Workflow Authorization Rule</rule-name>
            <rule-description>This rule approves a payroll extent and sets the approvedBy value to &apos;Workflow&apos;.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WorkflowAuthorizationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WorkflowUnAuthorizationRule" isactive="True" sid="">
            <rule-name>WorkflowUnAuthorizationRule</rule-name>
            <rule-description>This rule unapproves a payroll extent and sets the approvedBy value to &apos;Workflow&apos;.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WorkflowUnAuthorizationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ZeroRule" isactive="True" sid="">
            <rule-name>Zero Rule</rule-name>
            <rule-description>This rule has zero side effect. This rule is for test purposes only.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ZeroRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DayOffValidationRule" isactive="True" sid="">
            <rule-name>DayOffValidation Rule</rule-name>
            <rule-description>Validates day off rules for employee time</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DayOffValidationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="FlexShiftRule" isactive="True" sid="">
            <rule-name>FlexShiftRule</rule-name>
            <rule-description>Concept: This is similar to Start Swing Rule.  Following are the side effects of this rule:   1. If an employee clocks ON during the flex time, they will not be docked for late arrival.   2. If an employee clocks ON after the start of shift and outside of the flex window, the Arrived Late rule will be applied from the end of the flex window.  Pre-Condition: SHIFT.FLEXI_SHIFT  must be set to &apos;T&apos;.    This rule adjusts the payroll.ACTUAL_SHIFT&apos;s ON TIME and OFF TIME.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.FlexShiftRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SchedShiftToOpenShiftAsgmtRule" isactive="True" sid="">
            <rule-name>SchedShiftToOpenShiftAsgmt Rule</rule-name>
            <rule-description>Assigns the employee&apos;s scheduled shift to the payroll extent when employee works on an open shift.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SchedShiftToOpenShiftAsgmtRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftPremiumFactorRule" isactive="True" sid="">
            <rule-name>ShiftPremiumFactorRule</rule-name>
            <rule-description>Applies the pre-defined overtime percentages to the shift premium rates of the employee_s work records. It must run after ShiftPremiumRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftPremiumFactorRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BonusAdjustmentRule" isactive="True" sid="">
            <rule-name>BonusAdjustmentRule</rule-name>
            <rule-description>Sets the hours of an adjustment bonus always to 01:00, so that its rate reflects the total dollar amount.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BonusAdjustmentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RateFactorRule" isactive="True" sid="">
            <rule-name>Rate Factor Rule</rule-name>
            <rule-description>Applies the pre-defined overtime percentages to the rates of the employee_s work records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RateFactorRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnapprovePayrollAtCreationRule" isactive="True" sid="">
            <rule-name>Unapprove Payroll At Creation Rule</rule-name>
            <rule-description>Unapproves all the payroll records at the creation times e.q. StartOfDay. This rule is very specific to TCEQ</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnapprovePayrollAtCreationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="NoOT_IfWklyREG_LT_WklyMaxREGRule" isactive="True" sid="">
            <rule-name>No Overtime If Weekly Regular Hrs Are Less Than Weekly Max Regular Hrs</rule-name>
            <rule-description>Sets the daily overtime records to unpaid, if employee has not worked his/her expected weekly hours.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.NoOT_IfWklyREG_LT_WklyMaxREGRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PayPeriodEndReminderRule" isactive="True" sid="">
            <rule-name>PayPeriodEndReminderRule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PayPeriodEndReminderRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetManualOverrideDueToSchedOTRule" isactive="True" sid="">
            <rule-name>SetManualOverrideDueToSchedOTRule</rule-name>
            <rule-description>This rule will set ManualCalc to true if there is overtime work record and pdate is a scheduled to be have overtime shift or absence. It is run as the last rule in NewStartOfDay ruleset, so that the overtime record will not be overwritten by DailyEdit/Timesheet</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetManualOverrideDueToSchedOTRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="InsufficientAccrualNotificationRule" isactive="True" sid="">
            <rule-name>InsufficientAccrualNotificationRule</rule-name>
            <rule-description>Determines if there is an AFU or AFP code and then sends a notification.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.InsufficientAccrualNotificationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AddOTChargedHoursToEmployeeUdf298" isactive="True" sid="">
            <rule-name>AddOTChargedHoursToEmployeeUdf298</rule-name>
            <rule-description>This rule adds ot_charged_hours to employee_udf 298 field.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.bean.AddOTChargedHoursToEmployeeUdf298</rule-action>
            <rule-type>script</rule-type>
        </rule>
        <rule id="BrkToWrkReplacementWhenNoLunchRule" isactive="True" sid="">
            <rule-name>BrkToWrkReplacementWhenNoLunchRule</rule-name>
            <rule-description>This rule will converts all break records(BNK) to work records(WRK)</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BrkToWrkReplacementWhenNoLunchRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UNPExcessDeductionWhenNoLunchRule" isactive="True" sid="">
            <rule-name>UNPExcessDeductionWhenNoLunchRule</rule-name>
            <rule-description>This rule will deletes the excess &apos;LE&apos; or &apos;LT&apos; hours when employee works through lunch.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UNPExcessDeductionWhenNoLunchRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UNPExcessDeductionWhenNoBreakRule" isactive="True" sid="">
            <rule-name>UNPExcessDeductionWhenNoBreakRule</rule-name>
            <rule-description>This rule deletes the excess &apos;LE&apos; or &apos;LT&apos; hours when employee has no break or lunch.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UNPExcessDeductionWhenNoBreakRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnauthorizeWhenHoursGreaterThanScheduledRule" isactive="True" sid="">
            <rule-name>UnauthorizeWhenHoursGreaterThanScheduledRule</rule-name>
            <rule-description>This rule will unauthorized a record that was approved by autopoll if worked hours is more than scheduled hours.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnauthorizeWhenHoursGreaterThanScheduledRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingDurationAbsencesRule" isactive="True" sid="">
            <rule-name>RoundingDurationAbsencesRule</rule-name>
            <rule-description>This rule check to see if the hour allocation round or split values are set.  If they are then it will round the last absence.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingDurationAbsencesRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustAbsencesByDurationRule" isactive="True" sid="">
            <rule-name>AdjustAbsencesByDurationRule</rule-name>
            <rule-description>This rule adjust the off times of the absence records to on time plus hours.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustAbsencesByDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingDurationPerHourTypeSegmentRule" isactive="True" sid="">
            <rule-name>RoundingDurationPerHourTypeSegmentRule</rule-name>
            <rule-description>Rounds duration by hour-type</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingDurationPerHourTypeSegmentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingOnlyDurationPerHourTypeSegmentRule" isactive="True" sid="">
            <rule-name>RoundingOnlyDurationPerHourTypeSegmentRule</rule-name>
            <rule-description>Rounds (only) duration by hour-type (without adjusting on/off times) </rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingOnlyDurationPerHourTypeSegmentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BreakStartRoundingRule" isactive="True" sid="">
            <rule-name>BreakStartRoundingRule</rule-name>
            <rule-description>Applies rounding to on times of a break extent.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BreakStartRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsForecastShiftRule" isactive="True" sid="">
            <rule-name>Is Forecast Shift Rule</rule-name>
            <rule-description>This rule checks if the actual shift of the payroll extent is a forecast shift(-2)</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsForecastShiftRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsOpenShiftRule" isactive="True" sid="">
            <rule-name>Is Open Shift Rule</rule-name>
            <rule-description>This rule checks if the actual shift of the payroll extent is an open shift(80)</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsOpenShiftRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UseEmployeeShiftRuleDefinitionRule" isactive="True" sid="">
            <rule-name>Use Employee ShiftRule Definition Rule</rule-name>
            <rule-description>This rule set the rulesetcontext&apos;s shift rule definition to employee&apos;s default shift rule.  What this means is that all pay calculation rules like DailyRule, WeeklyOvertimeRule, BankingRule, Call-InRule etc. will use the shift rule associated with employee (instead of the shift rule associated with shift) for calculation purposes.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UseEmployeeShiftRuleDefinitionRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BreakEndRoundingRule" isactive="True" sid="">
            <rule-name>BreakEndRoundingRule</rule-name>
            <rule-description>Applies rounding to off times of a break extent.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BreakEndRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="BlendedOTRule" isactive="True" sid="">
            <rule-name>BlendedOTRule</rule-name>
            <rule-description>Calculates and pays a performance-based commission or bonus after the month&apos;s end.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BlendedOTRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustLaborWithBreakRule" isactive="True" sid="">
            <rule-name>AdjustLaborWithBreakRule</rule-name>
            <rule-description>This rule adjusts labor extent according to break extent.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustLaborWithBreakRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustAbsenceWithBreakRule" isactive="True" sid="">
            <rule-name>AdjustAbsenceWithBreakRule</rule-name>
            <rule-description>This rule adjusts absence extent according to break extend. It will run only in time-paired based absent site</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustAbsenceWithBreakRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingDurationAllRule" isactive="True" sid="">
            <rule-name>RoundingDurationAllRule</rule-name>
            <rule-description>RoundingDurationAllRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingDurationAllRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="NoDailyOtIFWklyTotalHrsLTWklyMaxRegHrsRule" isactive="True" sid="">
            <rule-name>NoDailyOtIFWklyTotalHrsLTWklyMaxRegHrsRule</rule-name>
            <rule-description>No Daily OT if Weekly Total Hours are less than Weekly Max Reg Hours</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.NoDailyOtIFWklyTotalHrsLTWklyMaxRegHrsRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlapAbsenceAfterRoundingAllRule" isactive="True" sid="">
            <rule-name>AdjustOverlapAbsenceAfterRoundingAllRule</rule-name>
            <rule-description>AdjustOverlapAbsenceAfterRoundingAllRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlapAbsenceAfterRoundingAllRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlapLaborAfterRoundingAllRule" isactive="True" sid="">
            <rule-name>AdjustOverlapLaborAfterRoundingAllRule</rule-name>
            <rule-description>AdjustOverlapLaborAfterRoundingAllRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlapLaborAfterRoundingAllRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingDurationOTRule" isactive="True" sid="">
            <rule-name>RoundingDurationOTRule</rule-name>
            <rule-description>RoundingDurationOTRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingDurationOTRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingDurationRegRule" isactive="True" sid="">
            <rule-name>RoundingDurationRegRule</rule-name>
            <rule-description>RoundingDurationRegRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingDurationRegRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlappingAbsenceAfterRoundingOTRule" isactive="True" sid="">
            <rule-name>AdjustOverlappingAbsenceAfterRoundingOTRule</rule-name>
            <rule-description>AdjustOverlappingAbsenceAfterRoundingOTRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlappingAbsenceAfterRoundingOTRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WorkedUdfFieldLengthValidationRule" isactive="True" sid="">
            <rule-name>WorkedUdfFieldLengthValidationRule</rule-name>
            <rule-description>This rule validates the field length for worked-udf values.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WorkedUdfFieldLengthValidationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlappingLaborAfterRoundingOTRule" isactive="True" sid="">
            <rule-name>AdjustOverlappingLaborAfterRoundingOTRule</rule-name>
            <rule-description>AdjustOverlappingLaborAfterRoundingOTRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlappingLaborAfterRoundingOTRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlappingAbsenceAfterRoundRegRule" isactive="True" sid="">
            <rule-name>AdjustOverlappingAbsenceAfterRoundRegRule</rule-name>
            <rule-description>AdjustOverlappingAbsenceAfterRoundRegRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlappingAbsenceAfterRoundRegRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlappingLaborAfterRoundingRegRule" isactive="True" sid="">
            <rule-name>AdjustOverlappingLaborAfterRoundingRegRule</rule-name>
            <rule-description>AdjustOverlappingLaborAfterRoundingRegRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlappingLaborAfterRoundingRegRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingDurationLLAllRule" isactive="True" sid="">
            <rule-name>RoundingDurationLLAllRule</rule-name>
            <rule-description>RoundingDurationLLAllRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingDurationLLAllRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingOnlyDurationLLAllRule" isactive="True" sid="">
            <rule-name>RoundingOnlyDurationLLAllRule</rule-name>
            <rule-description>RoundingOnlyDurationLLAllRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingOnlyDurationLLAllRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlappingLaborAfterRoundingLLRule" isactive="True" sid="">
            <rule-name>AdjustOverlappingLaborAfterRoundingLLRule</rule-name>
            <rule-description>AdjustOverlappingLaborAfterRoundingLLRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlappingLaborAfterRoundingLLRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustOverlappingAbsenceAfterRoundingLLRule" isactive="True" sid="">
            <rule-name>AdjustOverlappingAbsenceAfterRoundingLLRule</rule-name>
            <rule-description>AdjustOverlappingAbsenceAfterRoundingLLRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustOverlappingAbsenceAfterRoundingLLRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ChangeClassToHWhenLOARule" isactive="True" sid="">
            <rule-name>ChangeClassToHWhenLOARule</rule-name>
            <rule-description>Change employee class to H When employee goes on leave without pay (LOA).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ChangeClassToHWhenLOARule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AutoLunchForOpenShiftRule" isactive="True" sid="">
            <rule-name>AutoLunchForOpenShiftRule</rule-name>
            <rule-description>Generate an automatic lunch break for employee working on open shift.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AutoLunchForOpenShiftRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnPaidAbsLWPValidationRule" isactive="True" sid="">
            <rule-name>UnPaidAbsLWPValidationRule</rule-name>
            <rule-description>This is a deprecated custom rule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnPaidAbsLWPValidationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveUARule" isactive="True" sid="">
            <rule-name>RemoveUARule</rule-name>
            <rule-description>Removes any worked records that have a code UA</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveUARule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnAuthorizedAbsenceNotificationRule" isactive="True" sid="">
            <rule-name>UnAuthorizedAbsenceNotificationRule</rule-name>
            <rule-description>This rule sends a notification to the user if the employee has an UnAuthorized(UA) absence worked extent for the given pdate.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnAuthorizedAbsenceNotificationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsUnAuthorizedAbsenceRule" isactive="True" sid="">
            <rule-name>IsUnAuthorizedAbsenceRule</rule-name>
            <rule-description>This rule checks if the employee has an Unexpected Absence record. If true, the rule returns true.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsUnAuthorizedAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveUserInsertedAbsenceExtentRule" isactive="True" sid="">
            <rule-name>RemoveUserInsertedAbsenceExtentRule</rule-name>
            <rule-description>Removes user inserted absence extent (worked id with a value of is less than or equal to 0)</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveUserInsertedAbsenceExtentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsNonSwiperRule" isactive="True" sid="">
            <rule-name>Is Non Swiper Rule</rule-name>
            <rule-description>Check if the employee is non-swiper</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsNonSwiperRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="CreatePartialAdjustmentRule" isactive="True" sid="">
            <rule-name>CreatePartialAdjustmentRule</rule-name>
            <rule-description>This rule will look at approval status of payroll, if approval status is changed,   It saves possive after picture of the record to adjustment table if changed from unapproved to approved.Else if changed from approved to unapproved, it negates the before picture and only save it. Lastly, it will set createAdjustmentIndicator in payrollVO to false to avoid default saving logic again. This rule must run after SetDefaultAdjustmentIndicatorRule which set  the createAdjustmentIndicator in payrollVO to true if pdate is less than protected date</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.CreatePartialAdjustmentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="CreatePositiveAdjustmentOnlyRule" isactive="True" sid="">
            <rule-name>CreatePositiveAdjustmentOnlyRule</rule-name>
            <rule-description>This rule creates only after save adjustment record so that only positive hours are saved in SOD. This run must be run after SetDefaultAdjustmentRule which set the payrollVO.createAdjustmentIndicator to true if pdate before protected date. Lastly, this rule will set the createNegativeAdjuments indicator to false to avoid saving negative adjustment.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.CreatePositiveAdjustmentOnlyRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="CreatePositiveAdjustmentOnlyWhenApprovedRule" isactive="True" sid="">
            <rule-name>CreatePositiveAdjustmentOnlyWhenApprovedRule</rule-name>
            <rule-description>This rule will be run only in SOD to create after save adjustment record only if payroll is approved.  This rule should replace default CreatePositiveAdjustmentOnlyRule if only approve records are sent to payroll process  If this rule is used in SOD, then CreatePartialAdjustmentRule is run in DefaultTimeCalcRuleSet  Note, this rule must run after SetDefaultAdjustmentIndicatorRule which set  the createAdjustmentIndicator in payrollVO to true if pdate is less than protected date</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.CreatePositiveAdjustmentOnlyWhenApprovedRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="HasUARule" isactive="True" sid="">
            <rule-name>HasUARule</rule-name>
            <rule-description>This rule returns true if UA absence code is found else it returns false.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.HasUARule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustTimesForUAExtentRule" isactive="True" sid="">
            <rule-name>AdjustTimesForUAExtentRule</rule-name>
            <rule-description>Adjusts UA extents on and off times</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustTimesForUAExtentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveTimeGapAfterBreakRoundingRule" isactive="True" sid="">
            <rule-name>RemoveTimeGapAfterBreakRoundingRule</rule-name>
            <rule-description>RemoveTimeGapAfterBreakRoundingRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveTimeGapAfterBreakRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsManualCalcRule" isactive="True" sid="">
            <rule-name>IsManualCalcRule</rule-name>
            <rule-description>Checks if the manual calc indicator is set to true or not.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsManualCalcRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MinHireDateCheckRule" isactive="True" sid="">
            <rule-name>MinHireDateCheckRule</rule-name>
            <rule-description>Checks if the employee has been hired for atleast 90 days</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MinHireDateCheckRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="EligibleAsWorkedOnSchedShiftOnCurrDate" isactive="True" sid="">
            <rule-name>EligibleAsWorkedOnSchedShiftOnCurrDate</rule-name>
            <rule-description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift that day or not.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.EligibleAsWorkedOnSchedShiftOnCurrDate</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="EligibleAsWorkedOnSchedShiftOnPriorDate" isactive="True" sid="">
            <rule-name>EligibleAsWorkedOnSchedShiftOnPriorDate</rule-name>
            <rule-description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift the prior day or not.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.EligibleAsWorkedOnSchedShiftOnPriorDate</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="EligibleAsWorkedOnSchedShiftOnAfterDate" isactive="True" sid="">
            <rule-name>EligibleAsWorkedOnSchedShiftOnAfterDate</rule-name>
            <rule-description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift on next day or not.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.EligibleAsWorkedOnSchedShiftOnAfterDate</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="HolidayEligibilityReportingStartRule" isactive="True" sid="">
            <rule-name>HolidayEligibilityReportingStartRule</rule-name>
            <rule-description>This rule starts the reporting for HolidayEligibilty(The ruleset that includes this rule must also include  HolidayEligibilityReportingEndRule).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.HolidayEligibilityReportingStartRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="HolidayEligibilityReportingEndRule" isactive="True" sid="">
            <rule-name>HolidayEligibilityReportingEndRule</rule-name>
            <rule-description>This rule ends the reporting (started in HolidayEligibilityReportingStartRule).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.HolidayEligibilityReportingEndRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ApplyPublicHolidayRule" isactive="True" sid="">
            <rule-name>ApplyPublicHolidayRule</rule-name>
            <rule-description>Inserts a PH record</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ApplyPublicHolidayRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DeleteHolidayCodeRule" isactive="True" sid="">
            <rule-name>DeleteHolidayCodeRule</rule-name>
            <rule-description>This rule deletes the holiday code that appears in the holiday definition for the employee on the payroll date.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DeleteHolidayCodeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsPublicHolidayRule" isactive="True" sid="">
            <rule-name>IsPublicHolidayRule</rule-name>
            <rule-description>This short-circuiting rule determines whether the employee is eligible for a public-holiday or not</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsPublicHolidayRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ClearWorkOrderItemControlFieldRule" isactive="True" sid="">
            <rule-name>ClearWorkOrderItemControlFieldRule</rule-name>
            <rule-description>This rule clears the workOrderItemControl field in all the worked records</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ClearWorkOrderItemControlFieldRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsWorkOrderItemControlSetRule" isactive="True" sid="">
            <rule-name>IsWorkOrderItemControlSetRule</rule-name>
            <rule-description>Returns true if there are any records that have the work order item control field set.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsWorkOrderItemControlSetRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetDefaultWorkOrderAdjustmentIndicatorRule" isactive="True" sid="">
            <rule-name>SetDefaultWorkOrderAdjustmentIndicatorRule</rule-name>
            <rule-description>This rule sets an internal work order adjustment indicator.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetDefaultWorkOrderAdjustmentIndicatorRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PostDefaultWorkOrderAdjustmentRule" isactive="True" sid="">
            <rule-name>PostDefaultWorkOrderAdjustmentRule</rule-name>
            <rule-description>This rule applies the default logic for determining if any of the WRK records has undergone an adjustment.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PostDefaultWorkOrderAdjustmentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustNegativeTimesRule" isactive="True" sid="">
            <rule-name>AdjustNegativeTimesRule</rule-name>
            <rule-description>Adjust on and off time so the ontime is always on or before offTime</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustNegativeTimesRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetBonusCOPayTypeDefaultRule" isactive="True" sid="">
            <rule-name>SetBonusCOPayTypeDefaultRule</rule-name>
            <rule-description>Sets bonus CO record pay type to zero.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetBonusCOPayTypeDefaultRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecordRule" isactive="True" sid="">
            <rule-name>LockRecordRule</rule-name>
            <rule-description>Marks a payroll record as locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UnlockRecordRule" isactive="True" sid="">
            <rule-name>UnlockRecordRule</rule-name>
            <rule-description>Marks a payroll record as unlocked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UnlockRecordRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsRecordLockedRule" isactive="True" sid="">
            <rule-name>IsRecordLockedRule</rule-name>
            <rule-description>Returns true if payroll record is locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsRecordLockedRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MergeAbsenceRecordsRule" isactive="True" sid="">
            <rule-name>MergeAbsenceRecordsRule</rule-name>
            <rule-description>merges absence records if they are same.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MergeAbsenceRecordsRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftPremiumOnTimepairBasedAbsenceRule" isactive="True" sid="">
            <rule-name>ShiftPremiumOnTimepairBasedAbsenceRule</rule-name>
            <rule-description>Apply a shift premium to an employee on timepair based absence records</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftPremiumOnTimepairBasedAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ShiftPremiumOnDurationBasedAbsenceRule" isactive="True" sid="">
            <rule-name>ShiftPremiumOnDurationBasedAbsenceRule</rule-name>
            <rule-description>Apply a shift premium to an employee on duration based absence records</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftPremiumOnDurationBasedAbsenceRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetOTTypeForPostShiftDurationRule" isactive="True" sid="">
            <rule-name>SetOTTypeForPostShiftDurationRule</rule-name>
            <rule-description>SetOTTypeForPostShiftDurationRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetOTTypeForPostShiftDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ValidateCcPosEffDateRule" isactive="True" sid="">
            <rule-name>ValidateCcPosEffDateRule</rule-name>
            <rule-description>Validates cc and pos effective dates against pdate.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ValidateCcPosEffDateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ValidateWorkOrderItemEffDateRule" isactive="True" sid="">
            <rule-name>ValidateWorkOrderItemEffDateRule</rule-name>
            <rule-description>Validates workOrderItem effective date against pdate.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ValidateWorkOrderItemEffDateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsScheduledToWorkRule" isactive="True" sid="">
            <rule-name>IsScheduledToWorkRule</rule-name>
            <rule-description>checks if the employee is scheduled to work.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsScheduledToWorkRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="NetWorkOrderAdjustmentRule" isactive="True" sid="">
            <rule-name>NetWorkOrderAdjustmentRule</rule-name>
            <rule-description>This determines what records should be marked or unmarked for work order adjustments.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.NetWorkOrderAdjustmentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetHolidayOnOffTimeByDurationRule" isactive="True" sid="">
            <rule-name>SetHolidayOnOffTimeByDurationRule</rule-name>
            <rule-description>Sets on and off time for holiday by duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetHolidayOnOffTimeByDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsPayrollDateBeforeProtectDateRule" isactive="True" sid="">
            <rule-name>IsPayrollDateBeforeProtectDateRule</rule-name>
            <rule-description>Checks if pdate is before payroll protect date.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsPayrollDateBeforeProtectDateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsPayrollDateAfterProtectDateRule" isactive="True" sid="">
            <rule-name>IsPayrollDateAfterProtectDateRule</rule-name>
            <rule-description>checks if pdate is after payroll protect date.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsPayrollDateAfterProtectDateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UsePayrollShiftRuleDefinitionRule" isactive="True" sid="">
            <rule-name>UsePayrollShiftRuleDefinitionRule</rule-name>
            <rule-description>Sets ShiftRuleDefinitionVO in RuleSetContext by the field Payroll.SH_RULE.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UsePayrollShiftRuleDefinitionRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ResetAutoToDefaultDeptCrewRule" isactive="True" sid="">
            <rule-name>ResetAutoToDefaultDeptCrewRule</rule-name>
            <rule-description>Resets AUTO department and crew to effective department and crew of the employee</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetAutoToDefaultDeptCrewRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="InsertAbsenceOutsideShiftRule" isactive="True" sid="">
            <rule-name>InsertAbsenceOutsideShiftRule</rule-name>
            <rule-description>Insert Absence if it is outside of the shift.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.InsertAbsenceOutsideShiftRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AllocateJobBasedOnPlannedScheduleRule" isactive="True" sid="">
            <rule-name>AllocateJobBasedOnPlannedScheduleRule</rule-name>
            <rule-description>TBD</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AllocateJobBasedOnPlannedScheduleRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WasSchedulePlannedRule" isactive="True" sid="">
            <rule-name>WasSchedulePlannedRule</rule-name>
            <rule-description>TBD</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WasSchedulePlannedRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WasScheduleNotPlannedRule" isactive="True" sid="">
            <rule-name>WasScheduleNotPlannedRule</rule-name>
            <rule-description>TBD</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WasScheduleNotPlannedRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustLaborAfterShiftStartTimeRoundingRule" isactive="True" sid="">
            <rule-name>AdjustLaborAfterShiftStartTimeRoundingRule</rule-name>
            <rule-description>AdjustLaborAfterShiftStartTimeRoundingRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustLaborAfterShiftStartTimeRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustLaborAfterShiftEndTimeRoundingRule" isactive="True" sid="">
            <rule-name>AdjustLaborAfterShiftEndTimeRoundingRule</rule-name>
            <rule-description>AdjustLaborAfterShiftEndTimeRoundingRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustLaborAfterShiftEndTimeRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetScheduledShiftOnHolidayRule" isactive="True" sid="">
            <rule-name>SetScheduledShiftOnHolidayRule</rule-name>
            <rule-description>SetScheduledShiftOnHolidayRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetScheduledShiftOnHolidayRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="HolidayProcessWriteAnalysisRule" isactive="True" sid="">
            <rule-name>HolidayProcessWriteAnalysisRule</rule-name>
            <rule-description>HolidayProcessWriteAnalysisRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.HolidayProcessWriteAnalysisRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="OTChargedAccrualRule" isactive="True" sid="">
            <rule-name>OTChargedAccrualRule</rule-name>
            <rule-description>OTChargedAccrualRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.OTChargedAccrualRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="EmployeeSignatureNotificationRule" isactive="True" sid="">
            <rule-name>EmployeeSignatureNotificationRule</rule-name>
            <rule-description>EmployeeSignatureNotificationRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.EmployeeSignatureNotificationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SupervisorApprovalChangeNotificationRule" isactive="True" sid="">
            <rule-name>SupervisorApprovalChangeNotificationRule</rule-name>
            <rule-description>SupervisorApprovalChangeNotificationRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SupervisorApprovalChangeNotificationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="NewRecordNotificationRule" isactive="True" sid="">
            <rule-name>NewRecordNotificationRule</rule-name>
            <rule-description>Notifies employees and / or supervisors when new records belonging to a specified code set are created. For time sheet data, this looks at worked records. For scheduling data, this looks at the TemporaryChange object in the scheduling context.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.notifications.newRecordNotification.rules.NewRecordNotificationRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="SetBreakCodeRule" isactive="True" sid="">
            <rule-name>SetBreakCodeRule</rule-name>
            <rule-description>SetBreakCodeRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetBreakCodeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetWorkedCodeRule" isactive="True" sid="">
            <rule-name>SetWorkedCodeRule</rule-name>
            <rule-description>SetWorkedCodeRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetWorkedCodeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetENTExtentsToUnpaidRule" isactive="True" sid="">
            <rule-name>SetENTExtentsToUnpaidRule</rule-name>
            <rule-description>SetENTExtentsToUnpaidRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetENTExtentsToUnpaidRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustAbsenceDurationToIncludeBreaksRule" isactive="True" sid="">
            <rule-name>AdjustAbsenceDurationToIncludeBreaksRule</rule-name>
            <rule-description>AdjustAbsenceDurationToIncludeBreaksRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustAbsenceDurationToIncludeBreaksRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ReplaceUNPWithAbsenceForCrossMidnightShiftRule" isactive="True" sid="">
            <rule-name>ReplaceUNPWithAbsenceForCrossMidnightShiftRule</rule-name>
            <rule-description>ReplaceUNPWithAbsenceForCrossMidnightShiftRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ReplaceUNPWithAbsenceForCrossMidnightShiftRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AddEntitlementFromDatabaseRule" isactive="True" sid="">
            <rule-name>AddEntitlementFromDatabaseRule</rule-name>
            <rule-description>AddEntitlementFromDatabaseRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AddEntitlementFromDatabaseRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetOpenShiftDurationRule" isactive="True" sid="">
            <rule-name>SetOpenShiftDurationRule</rule-name>
            <rule-description>Set the duration to the GV_OPENSHIFT_DEFAULT_DURATION when a employee clocks ON to an open shift. If left at 0 the rule is not invoked and default behavior sets the open shift duration to 08:00 hours.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetOpenShiftDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ResetPdateOnShift80ApplyDayCutOffOnlyRule" isactive="True" sid="">
            <rule-name>ResetPdateOnShift80ApplyDayCutOffOnlyRule</rule-name>
            <rule-description>Resets the pdate of a payroll record with actual shift 80 by considering the Day Cut Off Time only. (Not considering both the Day Cut Off Time and the Time Before Shift global variables setting)</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetPdateOnShift80ApplyDayCutOffOnlyRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ForceShift80ToShiftXRule" isactive="True" sid="">
            <rule-name>ForceShift80ToShiftXRule</rule-name>
            <rule-description>ForceShift80ToShiftXRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ForceShift80ToShiftXRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UpdatePayrollFieldsRule" isactive="True" sid="">
            <rule-name>UpdatePayrollFieldsRule</rule-name>
            <rule-description>Updates certain payroll object attributes by locating the matching payroll object in the supplied list of payroll objects.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.UpdatePayrollFieldsRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DeleteCompanionAbsenceCodesRule" isactive="True" sid="">
            <rule-name>DeleteCompanionAbsenceCodesRule</rule-name>
            <rule-description>Deletes any slave companion absence records if master companion absence record is not present.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DeleteCompanionAbsenceCodesRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="InsertCompanionAbsenceCodesRule" isactive="True" sid="">
            <rule-name>InsertCompanionAbsenceCodesRule</rule-name>
            <rule-description>For any master companion absence records, adjust (insert or update) a slave companion absence record with hours equal to total hours of all the master companion absence records in the collection.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.InsertCompanionAbsenceCodesRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustTimeForTimePairAbsenceOnSpecialRule" isactive="True" sid="">
            <rule-name>AdjustTimeForTimePairAbsenceOnSpecialRule</rule-name>
            <rule-description>Adjusts time on time-pair based absence records when the absence is set to not follow emp schedule and not displace schedule.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustTimeForTimePairAbsenceOnSpecialRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustAbsenceForUnpaidBreakRule" isactive="True" sid="">
            <rule-name>AdjustAbsenceForUnpaidBreakRule</rule-name>
            <rule-description>This rule will be used only in NewDailyEditRuleset to adjust timepair-based absence duration for unpaid break if is a full day absence day.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustAbsenceForUnpaidBreakRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PreBonusCCPRule" isactive="True" sid="">
            <rule-name>PreBonusCCPRule</rule-name>
            <rule-description>Removes all pre-existing cost center/position bonus worked extents.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PreBonusCCPRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AdjustPartialAbsWhenWorkedNoBrkGenericRule" isactive="True" sid="">
            <rule-name>AdjustPartialAbsWhenWorkedNoBrkGenericRule</rule-name>
            <rule-description>AdjustPartialAbsWhenWorkedNoBrkGenericRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AdjustPartialAbsWhenWorkedNoBrkGenericRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetWorkCodeToXOnHolidayRule" isactive="True" sid="">
            <rule-name>SetWorkCodeToXOnHolidayRule</rule-name>
            <rule-description>This rule sets the Work Codes to (X) if it is a holiday for the Employee</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetWorkCodeToXOnHolidayRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsEmployeePaidAssignedShiftPremiumRule" isactive="True" sid="">
            <rule-name>IsEmployeePaidAssignedShiftPremiumRule</rule-name>
            <rule-description>IsEmployeePaidAssignedShiftPremiumRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsEmployeePaidAssignedShiftPremiumRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsGVEmpShiftAssignedShiftPremiumRule" isactive="True" sid="">
            <rule-name>IsGVEmpShiftAssignedShiftPremiumRule</rule-name>
            <rule-description>IsGVEmpShiftAssignedShiftPremiumRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsGVEmpShiftAssignedShiftPremiumRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsPremZoneNoEqualToEmpDefaultShiftNoRule" isactive="True" sid="">
            <rule-name>IsPremZoneNoEqualToEmpDefaultShiftNoRule</rule-name>
            <rule-description>IsPremZoneNoEqualToEmpDefaultShiftNoRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsPremZoneNoEqualToEmpDefaultShiftNoRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="ShiftPremiumBasedOnEmpDefaultShiftRule" isactive="True" sid="">
            <rule-name>ShiftPremiumBasedOnEmpDefaultShiftRule</rule-name>
            <rule-description>ShiftPremiumBasedOnEmpDefaultShiftRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ShiftPremiumBasedOnEmpDefaultShiftRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetRecordsWithUnpaidCCPToUnpaidRule" isactive="True" sid="">
            <rule-name>SetRecordsWithUnpaidCCPToUnpaidRule</rule-name>
            <rule-description>SetRecordsWithUnpaidCCPToUnpaidRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetRecordsWithUnpaidCCPToUnpaidRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RoundingWorkSegmentTimesRule" isactive="True" sid="">
            <rule-name>RoundingWorkSegmentTimesRule</rule-name>
            <rule-description>RoundingWorkSegmentTimesRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RoundingWorkSegmentTimesRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WorkStartTimeRoundingRule" isactive="True" sid="">
            <rule-name>WorkStartTimeRoundingRule</rule-name>
            <rule-description>WorkStartTimeRoundingRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WorkStartTimeRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WorkEndTimeRoundingRule" isactive="True" sid="">
            <rule-name>WorkEndTimeRoundingRule</rule-name>
            <rule-description>WorkEndTimeRoundingRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WorkEndTimeRoundingRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsUserNotOfSystemAccrualCodeUserGroupsRule" isactive="True" sid="">
            <rule-name>IsUserNotOfSystemAccrualCodeUserGroupsRule</rule-name>
            <rule-description>It returns true if user is not of system accrual code user group.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsUserNotOfSystemAccrualCodeUserGroupsRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ResetWorkedVOForSystemAccrualCodeRule" isactive="True" sid="">
            <rule-name>ResetWorkedVOForSystemAccrualCodeRule</rule-name>
            <rule-description>It will delete absence record from memory of which codes are of system accrual code list(global var) and reload them from DB.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetWorkedVOForSystemAccrualCodeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ApplyDefaultShiftNoAsPremiumZoneNoRule" isactive="True" sid="">
            <rule-name>ApplyDefaultShiftNoAsPremiumZoneNoRule</rule-name>
            <rule-description>It will the employee&apos;s default shift number and locate the premium zone that has the same number. The premium zone will be apply to all labor records.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ApplyDefaultShiftNoAsPremiumZoneNoRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MinHireDateCheckWithPRRule" isactive="True" sid="">
            <rule-name>MinHireDateCheckWithPRRule</rule-name>
            <rule-description>Checks if the employee has been hired for some days which can be configured by Rule Parameterization.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MinHireDateCheckWithPRRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetBaseRateToStdRateRule" isactive="True" sid="">
            <rule-name>SetBaseRateToStdRateRule</rule-name>
            <rule-description>Sets the standard rate for all work records with the employees effective rate.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetBaseRateToStdRateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="GuaranteedPayPeriodHrsRule" isactive="True" sid="">
            <rule-name>GuaranteedPayPeriodHrsRule</rule-name>
            <rule-description>This rule will pay employees in qualifying pay groups for guaranteed hours worked in pay period.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.GuaranteedPayPeriodHrsRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="PayPeriodOvertimeRule" isactive="True" sid="">
            <rule-name>PayPeriodOvertimeRule</rule-name>
            <rule-description>Applies overtime based on pay period. The pay period can be semi-monthly, bi-weekly, monthly, or weekly. The pay period range, as well as number of hours are stored in rule parameters.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.PayPeriodOvertimeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveExceptionRule" isactive="True" sid="">
            <rule-name>RemoveExceptionRule</rule-name>
            <rule-description>Removes any unpaid codes (UA, LT, LL or LE) from the employee time records based on the configured Entity on Remove Exceptions parameter.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveExceptionRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WeeklyHrsFillerRule" isactive="True" sid="">
            <rule-name>WeeklyHrsFillerRule</rule-name>
            <rule-description>This rule will fill in missing hours for employees in pay groups that must meet a weekly hours worked threshold.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WeeklyHrsFillerRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="DailyStraightOTSplitterByOTTypeRule" isactive="True" sid="">
            <rule-name>DailyStraightOTSplitterByOTTypeRule</rule-name>
            <rule-description>Splits and marks the necessary record based on the configured Entity on Apply Daily Straight OT By OTType Splitter parameter.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DailyStraightOTSplitterByOTTypeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WeeklyStraightOTSplitterByOTTypeRule" isactive="True" sid="">
            <rule-name>WeeklyStraightOTSplitterByOTTypeRule</rule-name>
            <rule-description>Splits and marks the necessary record based on the configured Entity on Apply Weekly Straight OT By OTType Splitter parameter.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WeeklyStraightOTSplitterByOTTypeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="WeeklyStraightOTSplitterRule" isactive="True" sid="">
            <rule-name>WeeklyStraightOTSplitterRule</rule-name>
            <rule-description>Splits and marks the necessary record based on the configured Entity on Apply Weekly Straight OT Splitter parameter.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.WeeklyStraightOTSplitterRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveLLWithZeroDurationRule" isactive="True" sid="">
            <rule-name>RemoveLLWithZeroDurationRule</rule-name>
            <rule-description>Removes the LL records with zero duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveLLWithZeroDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ResetPayrollOffTimeOnShift80Rule" isactive="True" sid="">
            <rule-name>ResetPayrollOffTimeOnShift80Rule</rule-name>
            <rule-description>Resets the payroll off time according to the worked off time if the employee is on a shift 80.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetPayrollOffTimeOnShift80Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveWorkedWithZeroDurationRule" isactive="True" sid="">
            <rule-name>RemoveWorkedWithZeroDurationRule</rule-name>
            <rule-description>Removes worked records with zero duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveWorkedWithZeroDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="SetAbsencesToRegRule" isactive="True" sid="">
            <rule-name>SetAbsencesToRegRule</rule-name>
            <rule-description>This rule set the hour type of the absence record back to regular record.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetAbsencesToRegRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="FillBreakGapRule" isactive="True" sid="">
            <rule-name>FillBreakGapRule</rule-name>
            <rule-description>Adjusts the worked records that surround the break.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.FillBreakGapRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ForceShiftXToShift80" isactive="True" sid="">
            <rule-name>ForceShiftXToShift80</rule-name>
            <rule-description>Forces the given shift to be changed as shift 80.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ForceShiftXToShift80</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ChangeShiftTo80Rule" isactive="True" sid="">
            <rule-name>ChangeShiftTo80Rule</rule-name>
            <rule-description>If actual shift is 0 and worked time on the day then change actual shift to 80.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ChangeShiftTo80Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveLaborExtentsWithZeroDurationRule" isactive="True" sid="">
            <rule-name>RemoveLaborExtentsWithZeroDurationRule</rule-name>
            <rule-description>Remove any labor type worked records with zero duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveLaborExtentsWithZeroDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveAbsenceExtentsWithZeroDurationRule" isactive="True" sid="">
            <rule-name>RemoveAbsenceExtentsWithZeroDurationRule</rule-name>
            <rule-description>Remove any absence type worked records with zero duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveAbsenceExtentsWithZeroDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RemoveOtherExtentsWithZeroDurationRule" isactive="True" sid="">
            <rule-name>RemoveOtherExtentsWithZeroDurationRule</rule-name>
            <rule-description>Remove any other type worked records with zero duration.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RemoveOtherExtentsWithZeroDurationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="IsOptionProcessApprovedRecordsOnlyRule" isactive="True" sid="">
            <rule-name>IsOptionProcessApprovedRecordsOnlyRule</rule-name>
            <rule-description>Check if Entity.ProcessApprovedRecordsOnly is set to True.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsOptionProcessApprovedRecordsOnlyRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord0Rule" isactive="True" sid="">
            <rule-name>LockRecord0Rule</rule-name>
            <rule-description>Marks a payroll record as level 0 locked (unlocked).</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord0Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord1Rule" isactive="True" sid="">
            <rule-name>LockRecord1Rule</rule-name>
            <rule-description>Marks a payroll record as level 1 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord1Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord2Rule" isactive="True" sid="">
            <rule-name>LockRecord2Rule</rule-name>
            <rule-description>Marks a payroll record as level 2 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord2Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord3Rule" isactive="True" sid="">
            <rule-name>LockRecord3Rule</rule-name>
            <rule-description>Marks a payroll record as level 3 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord3Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord4Rule" isactive="True" sid="">
            <rule-name>LockRecord4Rule</rule-name>
            <rule-description>Marks a payroll record as level 5 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord4Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord5Rule" isactive="True" sid="">
            <rule-name>LockRecord5Rule</rule-name>
            <rule-description>Marks a payroll record as level 5 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord5Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord6Rule" isactive="True" sid="">
            <rule-name>LockRecord6Rule</rule-name>
            <rule-description>Marks a payroll record as level 6 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord6Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord7Rule" isactive="True" sid="">
            <rule-name>LockRecord7Rule</rule-name>
            <rule-description>Marks a payroll record as level 7 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord7Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord8Rule" isactive="True" sid="">
            <rule-name>LockRecord8Rule</rule-name>
            <rule-description>Marks a payroll record as level 8 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord8Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="LockRecord9Rule" isactive="True" sid="">
            <rule-name>LockRecord9Rule</rule-name>
            <rule-description>Marks a payroll record as level 9 locked.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.LockRecord9Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="Dyn_AccrualCalculator" isactive="True" sid="">
            <rule-name>Dyn_AccrualCalculator</rule-name>
            <rule-description>Generic accrual calculator to be reused for all clients.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.custom.rules.AccrualCalculator</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="ApplyHourAllocationsForCustomDayTypesRule" isactive="True" sid="">
            <rule-name>ApplyHourAllocationsForCustomDayTypesRule</rule-name>
            <rule-description>Apply custom day types from the hour allocation</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.custom.rules.ApplyHourAllocationsForCustomDayTypesRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="AverageRateOvertimeRule" isactive="True" sid="">
            <rule-name>AverageRateOvertimeRule</rule-name>
            <rule-description>This rule will calculate and apply the average weighted overtime rate to all employees overtime worked records provided, their class is defined in the comma delimited list of classes of the global variable &quot;Rules.AverageRateOvertimeRule.Classes&quot; and that they have bonus amounts in the weekly period that are declared in the comma delimited lists of bonus codes of the &quot;Rules.AverageRateOvertimeRule.BonusCodes&quot; global variable. The calculation will also include any Shift Premiums if the global variable &quot;Rules.AverageRateOvertimeRule.IncludeSP&quot; is True.&quot;</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AverageRateOvertimeRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AutoShiftGroupOnlyOnShift80Rule" isactive="True" sid="">
            <rule-name>AutoShiftGroupOnlyOnShift80Rule</rule-name>
            <rule-description>This rule applies auto shift group functionality when the actual shift is 80.  It will look for all shifts in auto shift group defined in the GV.Rules.AutoShiftGroupOnlyOnShift80Rule.Number and find the shift with the closest start time if the value of the GV is greater than 0</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AutoShiftGroupOnlyOnShift80Rule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="UpdateAccrualMultiplierBasedOnHoursWorkedRule" isactive="True" sid="">
            <rule-name>UpdateAccrualMultiplierBasedOnHoursWorkedRule</rule-name>
            <rule-description>Updates an Employee UDF field with the accrual multiplier which will be used by the accrual calculator to grant accruals.</rule-description>
            <rule-action>com.cybershift.server.layer.accrualCalculator.rules.UpdateAccrualMultiplierBasedOnHoursWorkedRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="AccrualCalculatorRule" isactive="True" sid="">
            <rule-name>AccrualCalculatorRule</rule-name>
            <rule-description>This rule applies accrual calculator logic</rule-description>
            <rule-action>com.cybershift.server.layer.accrualCalculator.rules.AccrualCalculatorRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MaxAccrualBasedOnTotalForYearRule" isactive="True" sid="">
            <rule-name>MaxAccrualBasedOnTotalForYearRule</rule-name>
            <rule-description>Determines if the employee has reached their maximum total accrual award for the year and reduces and/or eliminates the current award if appropriate.</rule-description>
            <rule-action>com.cybershift.server.layer.accrualCalculator.rules.MaxAccrualBasedOnTotalForYearRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="UpdateLastGrantValueAndDateRule" isactive="True" sid="">
            <rule-name>UpdateLastGrantValueAndDateRule</rule-name>
            <rule-description>Updates the Employee Accrual lastDepositValue/lastDepositDate to match worked hours granted for that particular accrual.</rule-description>
            <rule-action>com.cybershift.server.layer.accrualCalculator.rules.UpdateLastGrantValueAndDateRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="RCDPostShiftEndAssumedOffDurationAdjustmentRule" isactive="True" sid="">
            <rule-name>RCDPostShiftEndAssumedOffDurationAdjustmentRule</rule-name>
            <rule-description>RCDPostShiftEndAssumedOffDurationAdjustmentRule</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RCDPostShiftEndAssumedOffDurationAdjustmentRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="ConsecutiveDayWorkedRule" isactive="True" sid="">
            <rule-name>ConsecutiveDayWorkedRule</rule-name>
            <rule-description>The rule applies consecutive day logic to the worked records.  The consecutive day includes 6th,7th and rolling types.</rule-description>
            <rule-action>com.cybershift.server.layer.prl.payroll.rules.consecDay.ConsecutiveDayWorkedRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="MassUpdateEmpOrgPowerPayRule" isactive="True" sid="">
            <rule-name>MassUpdateEmpOrgPowerPayRule</rule-name>
            <rule-description>The rule applies Powerpay specific business rules during Employee Mass Update</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.custom.rules.MassUpdateEmpOrgPowerPayRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MassUpdateEmpOrgGenericRule" isactive="True" sid="">
            <rule-name>MassUpdateEmpOrgGenericRule</rule-name>
            <rule-description>The rule applies Generic business rules during Employee Mass Update</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.MassUpdateEmpOrgGenericRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="FMLARule" isactive="True" sid="">
            <rule-name>FMLARule</rule-name>
            <rule-description>Master eligibility rule for determining FMLA eligibilty</rule-description>
            <rule-action>com.cybershift.eligibility.rules.FMLARule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MMLARule" isactive="True" sid="">
            <rule-name>MMLARule</rule-name>
            <rule-description>Master eligibility rule for determining MMLA eligibilty.</rule-description>
            <rule-action>com.cybershift.eligibility.rules.MMLARule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="HasAbsenceCodeRule" isactive="True" sid="">
            <rule-name>HasAbsenceCodeRule</rule-name>
            <rule-description>Short circuits the ruleset if no absences exist according to the master eligibility rule configuration</rule-description>
            <rule-action>com.cybershift.eligibility.rules.HasAbsenceCodeRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="CheckLoadDateRule" isactive="True" sid="">
            <rule-name>CheckLoadDateRule</rule-name>
            <rule-description>Determines whether or not eligibility can be calculated by a cutover date and short circuits the ruleset</rule-description>
            <rule-action>com.cybershift.eligibility.rules.CheckLoadDateRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MinimumHireDateRule" isactive="True" sid="">
            <rule-name>MinimumHireDateRule</rule-name>
            <rule-description>Determines whether or not an employee is eligibile based on their hire date</rule-description>
            <rule-action>com.cybershift.eligibility.rules.MinimumHireDateRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MinimumHoursWorkedRule" isactive="True" sid="">
            <rule-name>MinimumHoursWorkedRule</rule-name>
            <rule-description>Determines whether or not an employee is eligibile based on the number of hours worked including future scheduled hours</rule-description>
            <rule-action>com.cybershift.eligibility.rules.MinimumHoursWorkedRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="AllowedMaximumRule" isactive="True" sid="">
            <rule-name>AllowedMaximumRule</rule-name>
            <rule-description>Determines whether or not an employee is eligibile based on the number of hours requested vs the number of hours taken and scheduled.</rule-description>
            <rule-action>com.cybershift.eligibility.rules.AllowedMaximumRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="FullTimeEmployeeRule" isactive="True" sid="">
            <rule-name>FullTimeEmployeeRule</rule-name>
            <rule-description>If employee udf #3 value is greater than the parameter configuration then the employee is full time.</rule-description>
            <rule-action>com.cybershift.eligibility.rules.FullTimeEmployeeRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="DisplayIneligibleMessagesRule" isactive="True" sid="">
            <rule-name>DisplayIneligibleMessagesRule</rule-name>
            <rule-description>Shows all ineligible messages in the ruleset arguments to the user (in a single alert box) based on the ShowAllMessage parameter value associated to the master eligibility rule</rule-description>
            <rule-action>com.cybershift.eligibility.rules.DisplayIneligibleMessagesRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="OneTimeStateFMLAEligibilityRule" isactive="True" sid="">
            <rule-name>OneTimeStateFMLAEligibilityRule</rule-name>
            <rule-description>Ensure a user is entitled to state FMLA usage following one time rules.</rule-description>
            <rule-action>com.cybershift.eligibility.rules.OneTimeStateFMLAEligibilityRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="ApplySchedulePeriodOverrideRule" isactive="True" sid="">
            <rule-name>ApplySchedulePeriodOverrideRule</rule-name>
            <rule-description>Apply override values for department group, department, cost center, position, work order and work item to worked records.  This may cause worked records to be split.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ApplySchedulePeriodOverrideRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <!-- BEGIN Extension Library -->
        <rule id="AbsenceIncrementsRule" isactive="True" sid="">
            <rule-name>AbsenceIncrementsRule</rule-name>
            <rule-description>The purpose of this rule is to restrict the users to enter time in certain increments. The rule will restrict users based on their employee class as well as their home department.</rule-description>
            <rule-action>com.cybershift.absence.rules.AbsenceIncrementsRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="AllowedMaximumRule" isactive="True" sid="">
            <rule-name>AllowedMaximumRule</rule-name>
            <rule-description>Determines whether or not an employee is eligibile based on the number of hours requested vs the number of hours taken and scheduled.</rule-description>
            <rule-action>com.cybershift.eligibility.rules.AllowedMaximumRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="ApprovalTimestampRule" isactive="True" sid="">
            <rule-name>ApprovalTimestampRule</rule-name>
            <rule-description>This rule will mark the WORKED.APPROVED_TIME field with the time when the payroll record was approved. If the payroll record is unapproved, the WORKED.APPROVED_TIME field will be cleared.</rule-description>
            <rule-action>com.cybershift.approval.rules.ApprovalTimestampRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="CannotExceedMaxHrsRule" isactive="True" sid="">
            <rule-name>CannotExceedMaxHrsRule</rule-name>
            <rule-description>This rule will prevent a user from entering more than a specific maximum number of hours on an employees time sheet. This rule only applies to employees in specific classes(will be enabled by rule parameter).</rule-description>
            <rule-action>com.cybershift.validation.rules.CannotExceedMaxHrsRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="CheckLoadDateRule" isactive="True" sid="">
            <rule-name>CheckLoadDateRule</rule-name>
            <rule-description>Determines whether or not eligibility can be calculated by a cutover date and short circuits the ruleset</rule-description>
            <rule-action>com.cybershift.eligibility.rules.CheckLoadDateRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="CopyFieldFromPreviousRecordRule" isactive="True" sid="">
            <rule-name>CopyFieldFromPreviousRecordRule</rule-name>
            <rule-description>Copies the configured field from the previous record.</rule-description>
            <rule-action>com.cybershift.markrecords.rules.CopyFieldFromPreviousRecordRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="DisplayIneligibleMessagesRule" isactive="True" sid="">
            <rule-name>DisplayIneligibleMessagesRule</rule-name>
            <rule-description>Shows all ineligible messages in the ruleset arguments to the user (in a single alert box) based on the ShowAllMessage parameter value associated to the master eligibility rule</rule-description>
            <rule-action>com.cybershift.eligibility.rules.DisplayIneligibleMessagesRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="IsClockerWithExistingLaborRule" isactive="True" sid="">
            <rule-name>IsClockerWithExistingLaborRule</rule-name>
            <rule-description>Determines if a clocking employee already has labor records in the DB</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.IsClockerWithExistingLaborRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="AbsenceSynchronizationRule" isactive="True" sid="">
            <rule-name>AbsenceSynchronizationRule</rule-name>
            <rule-description>Synchronize Absence Orion records with worked records from timesheet.</rule-description>
            <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.AbsenceSynchronizationRule</rule-action>
            <rule-type>class</rule-type>
        </rule>
        <rule id="CheckLengthOfServiceForLeaveTypeRule" isactive="True" sid="">
            <rule-name>CheckLengthOfServiceForLeaveTypeRule</rule-name>
            <rule-description>Verifies whether an employee has been employed for the minimum number of required days to take a configured leave type.</rule-description>
            <rule-action>com.cybershift.validation.rules.CheckLengthOfServiceForLeaveTypeRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="CheckAbsenceQualificationsBasedOnHoursRule" isactive="True" sid="">
            <rule-name>CheckAbsenceQualificationsBasedOnHoursRule</rule-name>
            <rule-description>Verifies whether an employee has the minimum number of work hours required to take a configured leave type.</rule-description>
            <rule-action>com.cybershift.validation.rules.CheckAbsenceQualificationsBasedOnHoursRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="CheckLeaveTypeForCurrentYearRule" isactive="True" sid="">
            <rule-name>CheckLeaveTypeForCurrentYearRule</rule-name>
            <rule-description>Verifies that the total sum of current year leave type hours and carryover hours does not exceed the total allowed.</rule-description>
            <rule-action>com.cybershift.validation.rules.CheckLeaveTypeForCurrentYearRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="ValidateAverageForLastTimeFrameRule" isactive="True" sid="">
            <rule-name>ValidateAverageForLastTimeFrameRule</rule-name>
            <rule-description>Validate whether a configured leave type is allowed based on the average number of work hours for a prior time frame.</rule-description>
            <rule-action>com.cybershift.validation.rules.ValidateAverageForLastTimeFrameRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="FMLARule" isactive="True" sid="">
            <rule-name>FMLARule</rule-name>
            <rule-description>Master eligibility rule for determining FMLA eligibilty</rule-description>
            <rule-action>com.cybershift.eligibility.rules.FMLARule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="FullTimeEmployeeRule" isactive="True" sid="">
            <rule-name>FullTimeEmployeeRule</rule-name>
            <rule-description>If employee udf #3 value is greater than the parameter configuration then the employee is full time.</rule-description>
            <rule-action>com.cybershift.eligibility.rules.FullTimeEmployeeRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="HasAbsenceCodeRule" isactive="True" sid="">
            <rule-name>HasAbsenceCodeRule</rule-name>
            <rule-description>Short circuits the ruleset if no absences exist according to the master eligibility rule configuration</rule-description>
            <rule-action>com.cybershift.eligibility.rules.HasAbsenceCodeRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MinimumHireDateRule" isactive="True" sid="">
            <rule-name>MinimumHireDateRule</rule-name>
            <rule-description>Determines whether or not an employee is eligibile based on their hire date</rule-description>
            <rule-action>com.cybershift.eligibility.rules.MinimumHireDateRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MinimumHoursWorkedRule" isactive="True" sid="">
            <rule-name>MinimumHoursWorkedRule</rule-name>
            <rule-description>Determines whether or not an employee is eligibile based on the number of hours worked including future scheduled hours</rule-description>
            <rule-action>com.cybershift.eligibility.rules.MinimumHoursWorkedRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MinimumWageNetAdjustmentRule" isactive="True" sid="">
            <rule-name>MinimumWageNetAdjustmentRule</rule-name>
            <rule-description>Inserts a minimum wage bump-up bonus if the average rate is calculated to be below minimum wage</rule-description>
            <rule-action>com.cybershift.minimumwage.rules.MinimumWageNetAdjustmentRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MissedMealRule" isactive="True" sid="">
            <rule-name>MissedMealRule</rule-name>
            <rule-description>Inserts meal penalty records when applicable.</rule-description>
            <rule-action>com.cybershift.missedmeal.rules.MissedMealRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="MMLARule" isactive="True" sid="">
            <rule-name>MMLARule</rule-name>
            <rule-description>Master eligibility rule for determining MMLA eligibilty.</rule-description>
            <rule-action>com.cybershift.eligibility.rules.MMLARule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="OvertimeAverageRateAndAllocationRule" isactive="True" sid="">
            <rule-name>OvertimeAverageRateAndAllocationRule</rule-name>
            <rule-description>Calculate weighted average rate for OT1 and OT2 and allocate across the allocation group (if defined)</rule-description>
            <rule-action>com.cybershift.labordistribution.rules.OvertimeAverageRateAndAllocationRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="PreventFromExceedingScheduledHoursRule" isactive="True" sid="">
            <rule-name>PreventFromExceedingScheduledHoursRule</rule-name>
            <rule-description>The purpose of this rule is to prevent the employee from entering absence time that exceeds their scheduled hours.</rule-description>
            <rule-action>com.cybershift.validation.rules.PreventFromExceedingScheduledHoursRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
        <rule id="RestrictEditsToPublicHolidayCodesRule" isactive="True" sid="">
            <rule-name>RestrictEditsToPublicHolidayCodesRule</rule-name>
            <rule-description>The rule will be implemented as a validation rule that will prevent users except for those in specific user groups from modifying public holiday records.</rule-description>
            <rule-action>com.cybershift.validation.rules.RestrictEditsToPublicHolidayCodesRule</rule-action>
            <rule-type>dynamic</rule-type>
        </rule>
      <rule id="VerifyWrkOnHolidayRule" isactive="True" sid="">
         <rule-name>VerifyWrkOnHolidayRule</rule-name>
         <rule-description>The purpose of this rule is to verify that a specific check box is checked when worked hours are entered on a holiday. If the box is checked and the day is not a holiday, then an exception must be displayed. This rule only applies to employees in specific classes(will be enabled by rule parameter).</rule-description>
         <rule-action>com.cybershift.validation.rules.VerifyWrkOnHolidayRule</rule-action>
         <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IntermittentLeaveRule" isactive="True" sid="">
        <rule-name>IntermittentLeaveRule</rule-name>
        <rule-description>If a user is granted intermittent leave, this rule will enforce the use of that time.</rule-description>
        <rule-action>com.cybershift.absence.rules.IntermittentLeaveRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="SetPayrollRecalcStatusRule" isactive="True" sid="">
        <rule-name>SetPayrollRecalcStatusRule</rule-name>
        <rule-description>Sets PayrollVO.recalc to True.</rule-description>
        <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.SetPayrollRecalcStatusRule</rule-action>
        <rule-type>class</rule-type>
      </rule>
      <rule id="ResetPayrollRecalcStatusRule" isactive="True" sid="">
        <rule-name>ResetPayrollRecalcStatusRule</rule-name>
        <rule-description>Sets PayrollVO.recalc to False.</rule-description>
        <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ResetPayrollRecalcStatusRule</rule-action>
        <rule-type>class</rule-type>
      </rule>
      <rule id="OccurrenceAssignmentRule" isactive="True" sid="">
        <rule-name>OccurrenceAssignmentRule</rule-name>
        <rule-description>Determines the occurrence history and assigns the occurrence history if it has changed.</rule-description>
        <rule-action>com.cybershift.server.layer.occurrenceTrack.rule.OccurrenceAssignmentRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="OccurrenceCalculationRule" isactive="True" sid="">
        <rule-name>OccurrenceCalculationRule</rule-name>
        <rule-description>Clears history, calculates refunds and points based on thresholds and other configuration.</rule-description>
        <rule-action>com.cybershift.server.layer.occurrenceTrack.rule.OccurrenceCalculationRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ValidateApprovalsRule" isactive="True" sid="">
        <rule-name>ValidateApprovalsRule</rule-name>
        <rule-description>Validates approval fields to ensure no disallowed front end manipulation occurred.</rule-description>
        <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.ValidateApprovalsRule</rule-action>
        <rule-type>class</rule-type>
      </rule>
      <rule id="DurationBasedValidateApprovalsRule" isactive="True" sid="">
        <rule-name>DurationBasedValidateApprovalsRule</rule-name>
        <rule-description>Validates approval fields in Duration based time sheet to ensure no disallowed front end manipulation occurred.</rule-description>
        <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.DurationBasedValidateApprovalsRule</rule-action>
        <rule-type>class</rule-type>
      </rule>
      <rule id="AccrualAdjustmentsRule" isactive="True" sid="">
        <rule-name>AccrualAdjustmentsRule</rule-name>
        <rule-description>Adjust accrual carry over values when changing timesheets from before carry over was executed.</rule-description>
        <rule-action>com.cybershift.accrualAdjustments.rules.AccrualAdjustmentsRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="RejectedCodesRule" isactive="True" sid="">
        <rule-name>RejectedCodesRule</rule-name>
        <rule-description>Throws an alert if the timesheet contains a rejected code on save.</rule-description>
        <rule-action>com.cybershift.validation.rules.RejectedCodesRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="OvertimeEntitlementRule" isactive="True">
        <rule-name>"OvertimeEntitlementRule"</rule-name>
        <rule-description>Creates records based on overtime threshold.</rule-description>
        <rule-action>com.cybershift.server.layer.ruleServices.overtimeEntitlement.rules.OvertimeEntitlementRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <!-- BEGIN overlay merged rule definitions -->
      <rule id="FtpFileRule" isactive="True">
        <rule-name>FtpFileRule</rule-name>
        <rule-description>FtpFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.common.rule.FtpFileRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsConfigSetupReportEnableRule" isactive="True">
        <rule-name>IsConfigSetupReportEnableRule</rule-name>
        <rule-description>IsConfigSetupReportEnableRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.IsConfigSetupReportEnableRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportShiftRule" isactive="True">
        <rule-name>GenerateConfigReportShiftRule</rule-name>
        <rule-description>GenerateConfigReportShiftRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportShiftRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportRosterRule" isactive="True">
        <rule-name>GenerateConfigReportRosterRule</rule-name>
        <rule-description>GenerateConfigReportRosterRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportRosterRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportRoundingRule" isactive="True">
        <rule-name>GenerateConfigReportRoundingRule</rule-name>
        <rule-description>GenerateConfigReportRoundingRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportRoundingRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportGraceRule" isactive="True">
        <rule-name>GenerateConfigReportGraceRule</rule-name>
        <rule-description>GenerateConfigReportGraceRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportGraceRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportAbsenceRule" isactive="True">
        <rule-name>GenerateConfigReportAbsenceRule</rule-name>
        <rule-description>GenerateConfigReportAbsenceRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportAbsenceRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportAccrualRule" isactive="True">
        <rule-name>GenerateConfigReportAccrualRule</rule-name>
        <rule-description>GenerateConfigReportAccrualRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportAccrualRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportExpenseRule" isactive="True">
        <rule-name>GenerateConfigReportExpenseRule</rule-name>
        <rule-description>GenerateConfigReportExpenseRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportExpenseRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportPayCycleRule" isactive="True">
        <rule-name>GenerateConfigReportPayCycleRule</rule-name>
        <rule-description>GenerateConfigReportPayCycleRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportPayCycleRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportStateEmpClassRule" isactive="True">
        <rule-name>GenerateConfigReportStateEmpClassRule</rule-name>
        <rule-description>GenerateConfigReportStateEmpClassRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportStateEmpClassRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportHolidayRule" isactive="True">
        <rule-name>GenerateConfigReportHolidayRule</rule-name>
        <rule-description>GenerateConfigReportHolidayRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportHolidayRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportPayPolicyRule" isactive="True">
        <rule-name>GenerateConfigReportPayPolicyRule</rule-name>
        <rule-description>GenerateConfigReportPayPolicyRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportPayPolicyRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportWorkPayRule" isactive="True">
        <rule-name>GenerateConfigReportWorkPayRule</rule-name>
        <rule-description>GenerateConfigReportWorkPayRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportWorkPayRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportOptionRule" isactive="True">
        <rule-name>GenerateConfigReportOptionRule</rule-name>
        <rule-description>GenerateConfigReportOptionRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportOptionRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportStartRule" isactive="True">
        <rule-name>GenerateConfigReportStartRule</rule-name>
        <rule-description>GenerateConfigReportStartRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportStartRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GenerateConfigReportEndRule" isactive="True">
        <rule-name>GenerateConfigReportEndRule</rule-name>
        <rule-description>GenerateConfigReportEndRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.configReport.rule.GenerateConfigReportEndRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="RunDailyEmployeeCountByPSIDRule" isactive="True" sid="">
        <rule-name>RunDailyEmployeeCountByPSIDRule</rule-name>
        <rule-description>RunDailyEmployeeCountByPSIDRule</rule-description>
        <rule-action> com.cybershift.server.layer.ccwServices.employeeCount.rule.ExtractDailyEmployeeCountByPSIDRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="CCWDecGenerateAssembleFileRule" isactive="True">
        <rule-name>CCWDecGenerateAssembleFileRule</rule-name>
        <rule-description>CCWDecGenerateAssembleFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.employeeCount.rule.CCWDecGenerateAssembleFileRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="MinPaidWorkedDaysBeforeHolidaySCRule" isactive="True" sid="">
        <rule-name>MinPaidWorkedDaysBeforeHolidaySCRule</rule-name>
        <rule-description>Checks if the employee had the indicated amount of paid days within the indicated date range before the holiday.</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.MinPaidWorkedDaysBeforeHolidaySCRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="MinPaidWorkedDaysAfterHolidaySCRule" isactive="True" sid="">
        <rule-name>MinPaidWorkedDaysAfterHolidaySCRule</rule-name>
        <rule-description>Checks if the employee had the indicated amount of paid days within the indicated date range after the holiday.</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.MinPaidWorkedDaysAfterHolidaySCRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="WorkedXDaysOnSameDayAsHolidayInLastYWeeksSCRule" isactive="True" sid="">
        <rule-name>WorkedXDaysOnSameDayAsHolidayInLastYWeeksSCRule</rule-name>
        <rule-description>Checks if the employee had worked at least X days, on the same day of the week as the holiday, within the indicated date range before the holiday.</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.WorkedXDaysOnSameDayAsHolidayInLastYWeeksSCRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="WorkedScheduledDayCurrentSCRule" isactive="True" sid="">
        <rule-name>WorkedScheduledDayCurrentSCRule</rule-name>
        <rule-description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift that day or not.</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.WorkedScheduledDayCurrentSCRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="WorkedScheduledDayBeforeSCRule" isactive="True" sid="">
        <rule-name>WorkedScheduledDayBeforeSCRule</rule-name>
        <rule-description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift for the duration prior to the holiday.</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.WorkedScheduledDayBeforeSCRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="WorkedScheduledDayAfterSCRule" isactive="True" sid="">
        <rule-name>WorkedScheduledDayAfterSCRule</rule-name>
        <rule-description>Checks eligibility of an employee for taking a holiday based on whether s/he worked on a scheduled shift for the duration after the holiday.</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.WorkedScheduledDayAfterSCRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ApplyHolidayAverageHoursBasedOnPriorXPayWeeksRule" isactive="True" sid="">
        <rule-name>ApplyHolidayAverageHoursBasedOnPriorXPayWeeksRule</rule-name>
        <rule-description>This rule, if enabled, will sum up the paid worked hours, optionally sum up the eligible absence hours, optionally subtract the sum up of any OT hours in the indicated date range since the holiday and divide the result by either the indicated number or by the number of paid days in the data range (based on setup)</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.ApplyHolidayAverageHoursBasedOnPriorXPayWeeksRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ApplyHolidayAverageHoursBasedOnLastXDaysRule" isactive="True" sid="">
        <rule-name>ApplyHolidayAverageHoursBasedOnLastXDaysRule</rule-name>
        <rule-description>This rule, if enabled, will sum up the paid worked hours, optionally sum up the eligible absence hours, optionally subtract the sum up of any OT hours in the indicate number of paid days since the holiday and divide the result by the number of paid days.</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.holidayProcessing.rule.ApplyHolidayAverageHoursBasedOnLastXDaysRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ClientVerificationRule" isactive="True" sid="">
        <rule-name>ClientVerificationRule</rule-name>
        <rule-description>ClientVerificationRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.hr.rule.ClientVerificationRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="RunHrRefreshRule" isactive="True" sid="">
        <rule-name>RunHrRefreshRule</rule-name>
        <rule-description>RunHrRefreshRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.hr.rule.RunHrRefreshRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="RunHRCUTaskerRule" isactive="True" sid="">
        <rule-name>RunHRCUTaskerRule</rule-name>
        <rule-description>RunHRCUTaskerRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payPolicyExport.rule.RunHRCUTaskerRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsLiveCutOverEnableRule" isactive="True">
        <rule-name>IsLiveCutOverEnableRule</rule-name>
        <rule-description>IsLiveCutOverEnableRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.liveCutOver.rule.IsLiveCutOverEnableRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="SetProtectDatePriorToLiveCutOverDateRule" isactive="True">
        <rule-name>SetProtectDatePriorToLiveCutOverDateRule</rule-name>
        <rule-description>SetProtectDatePriorToLiveCutOverDateRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.liveCutOver.rule.SetProtectDatePriorToLiveCutOverDateRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="DeleteAdjustmentByLiveCutOverRule" isactive="True">
        <rule-name>DeleteAdjustmentByLiveCutOverRule</rule-name>
        <rule-description>DeleteAdjustmentByLiveCutOverRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.liveCutOver.rule.DeleteAdjustmentByLiveCutOverRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="DeletePayrollPriorToLiveCutOverDateRule" isactive="True">
        <rule-name>DeletePayrollPriorToLiveCutOverDateRule</rule-name>
        <rule-description>DeletePayrollPriorToLiveCutOverDateRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.liveCutOver.rule.DeletePayrollPriorToLiveCutOverDateRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GeneratePayPolicyFlatTxtFileRule" isactive="True" sid="">
        <rule-name>GeneratePayPolicyFlatTxtFileRule</rule-name>
        <rule-description>GeneratePayPolicyFlatTxtFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payPolicyExport.rule.GeneratePayPolicyFlatTxtFileRule
        </rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="GeneratePayPolicyXmlFileRule" isactive="True" sid="">
        <rule-name>GeneratePayPolicyXmlFileRule</rule-name>
        <rule-description>GeneratePayPolicyXmlFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payPolicyExport.rule.GeneratePayPolicyXmlFileRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="AddHeaderAndTrailerToPayPolicyXmlFileRule" isactive="True" sid="">
        <rule-name>AddHeaderAndTrailerToPayPolicyXmlFileRule</rule-name>
        <rule-description>AddHeaderAndTrailerToPayPolicyXmlFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payPolicyExport.rule.AddHeaderAndTrailerToPayPolicyXmlFileRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsCTCProductGeneratePayPolicyXmlFileRule" isactive="True" sid="">
        <rule-name>IsCTCProductGeneratePayPolicyXmlFileRule</rule-name>
        <rule-description>IsCTCProductGeneratePayPolicyXmlFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payPolicyExport.rule.IsCTCProductGeneratePayPolicyXmlFileRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsCTCProductGeneratePayPolicyFlatTxtFileRule" isactive="True" sid="">
        <rule-name>IsCTCProductGeneratePayPolicyFlatTxtFileRule</rule-name>
        <rule-description>IsCTCProductGeneratePayPolicyFlatTxtFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payPolicyExport.rule.IsCTCProductGeneratePayPolicyFlatTxtFileRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsCTCProductAddHeaderTrailerToXmlFileRule" isactive="True" sid="">
        <rule-name>IsCTCProductAddHeaderTrailerToXmlFileRule</rule-name>
        <rule-description>IsCTCProductAddHeaderTrailerToXmlFileRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payPolicyExport.rule.IsCTCProductAddHeaderTrailerToXmlFileRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsClientProductHPWRule" isactive="True" sid="">
        <rule-name>IsClientProductHPWRule</rule-name>
        <rule-description>IsClientProductHPWRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.payrollFile.IsClientProductHPWRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="RunCCWPRCUTaskerRule" isactive="True" sid="">
        <rule-name>RunCCWPRCUTaskerRule</rule-name>
        <rule-description>Using this rule to test PRCU interface individually</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.prcu.rule.RunCCWPRCUTaskerRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="RunRateImportRule" isactive="True" sid="">
        <rule-name>RunRateImportRule</rule-name>
        <rule-description>RunRateImportRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.rateImport.rule.RunRateImportRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="CCWClientVerificationRule" isactive="True">
        <rule-name>CCWClientVerificationRule</rule-name>
        <rule-description>CCWClientVerificationRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.CCWClientVerificationRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ResetAllLookupRule" isactive="True">
        <rule-name>ResetAllLookupRule</rule-name>
        <rule-description>ResetAllLookupRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ResetAllLookupRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsInitialModeRule" isactive="True">
        <rule-name>IsInitialModeRule</rule-name>
        <rule-description>IsInitialModeRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.IsInitialModeRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="IsProductionModeRule" isactive="True">
        <rule-name>IsProductionModeRule</rule-name>
        <rule-description>IsProductionModeRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.IsProductionModeRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="LoadConfigRule" isactive="True">
        <rule-name>LoadConfigRule</rule-name>
        <rule-description>LoadConfigRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.LoadConfigRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessAbsenceRule" isactive="True">
        <rule-name>ProcessAbsenceRule</rule-name>
        <rule-description>ProcessAbsenceRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessAbsenceRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessAccrualRule" isactive="True">
        <rule-name>ProcessAccrualRule</rule-name>
        <rule-description>ProcessAccrualRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessAccrualRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessBaseSettingRule" isactive="True">
        <rule-name>ProcessBaseSettingRule</rule-name>
        <rule-description>ProcessBaseSettingRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessBaseSettingRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessConfigurationEndRule" isactive="True">
        <rule-name>ProcessConfigurationEndRule</rule-name>
        <rule-description>ProcessConfigurationEndRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessConfigurationEndRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessEmpClassRule" isactive="True">
        <rule-name>ProcessEmpClassRule</rule-name>
        <rule-description>ProcessEmpClassRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessEmpClassRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessExpenseRule" isactive="True">
        <rule-name>ProcessExpenseRule</rule-name>
        <rule-description>ProcessExpenseRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessExpenseRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessGlobalVariableRule" isactive="True">
        <rule-name>ProcessGlobalVariableRule</rule-name>
        <rule-description>ProcessGlobalVariableRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessGlobalVariableRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessHolidayRule" isactive="True">
        <rule-name>ProcessHolidayRule</rule-name>
        <rule-description>ProcessHolidayRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessHolidayRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessNameSpaceRule" isactive="True">
        <rule-name>ProcessNameSpaceRule</rule-name>
        <rule-description>ProcessNameSpaceRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessNameSpaceRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessOptionRule" isactive="True">
        <rule-name>ProcessOptionRule</rule-name>
        <rule-description>ProcessOptionRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessOptionRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPayCycleRule" isactive="True">
        <rule-name>ProcessPayCycleRule</rule-name>
        <rule-description>ProcessPayCycleRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPayCycleRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPayGroupRule" isactive="True">
        <rule-name>ProcessPayGroupRule</rule-name>
        <rule-description>ProcessPayGroupRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPayGroupRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPolicyRule" isactive="True">
        <rule-name>ProcessPolicyRule</rule-name>
        <rule-description>ProcessPolicyRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPolicyRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistAbsenceRule" isactive="True">
        <rule-name>ProcessPreExistAbsenceRule</rule-name>
        <rule-description>ProcessPreExistAbsenceRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistAbsenceRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistAccrualRule" isactive="True">
        <rule-name>ProcessPreExistAccrualRule</rule-name>
        <rule-description>ProcessPreExistAccrualRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistAccrualRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistEmpClassRule" isactive="True">
        <rule-name>ProcessPreExistEmpClassRule</rule-name>
        <rule-description>ProcessPreExistEmpClassRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistEmpClassRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistExpenseRule" isactive="True">
        <rule-name>ProcessPreExistExpenseRule</rule-name>
        <rule-description>ProcessPreExistExpenseRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistExpenseRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistHolidayRule" isactive="True">
        <rule-name>ProcessPreExistHolidayRule</rule-name>
        <rule-description>ProcessPreExistHolidayRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistHolidayRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistPayCycleRule" isactive="True">
        <rule-name>ProcessPreExistPayCycleRule</rule-name>
        <rule-description>ProcessPreExistPayCycleRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistPayCycleRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistPayGroupRule" isactive="True">
        <rule-name>ProcessPreExistPayGroupRule</rule-name>
        <rule-description>ProcessPreExistPayGroupRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistPayGroupRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistPolicyRule" isactive="True">
        <rule-name>ProcessPreExistPolicyRule</rule-name>
        <rule-description>ProcessPreExistPolicyRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistPolicyRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistRosterRule" isactive="True">
        <rule-name>ProcessPreExistRosterRule</rule-name>
        <rule-description>ProcessPreExistRosterRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistRosterRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistRuleCompParamRule" isactive="True">
        <rule-name>ProcessPreExistRuleCompParamRule</rule-name>
        <rule-description>ProcessPreExistRuleCompParamRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistRuleCompParamRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistShiftRule" isactive="True">
        <rule-name>ProcessPreExistShiftRule</rule-name>
        <rule-description>ProcessPreExistShiftRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistShiftRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistStationRule" isactive="True">
        <rule-name>ProcessPreExistStationRule</rule-name>
        <rule-description>ProcessPreExistStationRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistStationRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreExistWorkPayCodeRule" isactive="True">
        <rule-name>ProcessPreExistWorkPayCodeRule</rule-name>
        <rule-description>ProcessPreExistWorkPayCodeRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreExistWorkPayCodeRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessRosterRule" isactive="True">
        <rule-name>ProcessRosterRule</rule-name>
        <rule-description>ProcessRosterRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessRosterRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessShiftRule" isactive="True">
        <rule-name>ProcessShiftRule</rule-name>
        <rule-description>ProcessShiftRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessShiftRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessStationRule" isactive="True">
        <rule-name>ProcessStationRule</rule-name>
        <rule-description>ProcessStationRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessStationRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessWorkPayCodeRule" isactive="True">
        <rule-name>ProcessWorkPayCodeRule</rule-name>
        <rule-description>ProcessWorkPayCodeRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessWorkPayCodeRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreHROnEmployeeRule" isactive="True">
        <rule-name>ProcessPreHROnEmployeeRule</rule-name>
        <rule-description>ProcessPreHROnEmployeeRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreHROnEmployeeRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="ProcessPreHROnOthersRule" isactive="True">
        <rule-name>ProcessPreHROnOthersRule</rule-name>
        <rule-description>ProcessPreHROnOthersRule</rule-description>
        <rule-action>com.cybershift.server.layer.ccwServices.updateConfig.rule.ProcessPreHROnOthersRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <!-- END overlay merged rule definitions -->
      <rule id="RemoveZeroDurationUARule" isactive="True">
        <rule-name>RemoveZeroDurationUARule</rule-name>
        <rule-description>Remove the first UA record that has a duration of null or 0 hours</rule-description>
        <rule-action>com.cybershift.absence.rules.RemoveZeroDurationUARule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="OptionalHolidayEligibilityRule" isactive="True">
        <rule-name>OptionalHolidayEligibilityRule</rule-name>
        <rule-description>OptionalHolidayEligibilityRule</rule-description>
        <rule-action>com.cybershift.eligibility.rules.OptionalHolidayEligibilityRule</rule-action>
        <rule-type>dynamic</rule-type>
      </rule>
      <rule id="BonusAmountLimitRule" isactive="True" sid="">
          <rule-name>BonusAmountLimitRule</rule-name>
          <rule-description>The rule limits eligible bonuses to defined max</rule-description>
          <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.BonusAmountLimitRule</rule-action>
          <rule-type>class</rule-type>
      </rule>  
      <rule id="RestoreHiddenSystemCodesRule" isactive="True" sid="">
          <rule-name>RestoreHiddenSystemCodesRule</rule-name>
          <rule-description>The rule restores records that were hidden from the screen</rule-description>
          <rule-action>com.cybershift.server.layer.ruleServices.rule.bean.RestoreHiddenSystemCodesRule</rule-action>
          <rule-type>class</rule-type>
      </rule>             
    </rule-list>
</rule-manager>